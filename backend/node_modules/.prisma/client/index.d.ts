
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Family
 * 
 */
export type Family = $Result.DefaultSelection<Prisma.$FamilyPayload>
/**
 * Model FamilyMember
 * 
 */
export type FamilyMember = $Result.DefaultSelection<Prisma.$FamilyMemberPayload>
/**
 * Model SupportMeasure
 * 
 */
export type SupportMeasure = $Result.DefaultSelection<Prisma.$SupportMeasurePayload>
/**
 * Model Document
 * 
 */
export type Document = $Result.DefaultSelection<Prisma.$DocumentPayload>
/**
 * Model FamilyHistory
 * 
 */
export type FamilyHistory = $Result.DefaultSelection<Prisma.$FamilyHistoryPayload>
/**
 * Model Notification
 * 
 */
export type Notification = $Result.DefaultSelection<Prisma.$NotificationPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P]): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number }): $Utils.JsPromise<R>

  /**
   * Executes a raw MongoDB command and returns the result of it.
   * @example
   * ```
   * const user = await prisma.$runCommandRaw({
   *   aggregate: 'User',
   *   pipeline: [{ $match: { name: 'Bob' } }, { $project: { email: true, _id: false } }],
   *   explain: false,
   * })
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $runCommandRaw(command: Prisma.InputJsonObject): Prisma.PrismaPromise<Prisma.JsonObject>

  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.family`: Exposes CRUD operations for the **Family** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Families
    * const families = await prisma.family.findMany()
    * ```
    */
  get family(): Prisma.FamilyDelegate<ExtArgs>;

  /**
   * `prisma.familyMember`: Exposes CRUD operations for the **FamilyMember** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FamilyMembers
    * const familyMembers = await prisma.familyMember.findMany()
    * ```
    */
  get familyMember(): Prisma.FamilyMemberDelegate<ExtArgs>;

  /**
   * `prisma.supportMeasure`: Exposes CRUD operations for the **SupportMeasure** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SupportMeasures
    * const supportMeasures = await prisma.supportMeasure.findMany()
    * ```
    */
  get supportMeasure(): Prisma.SupportMeasureDelegate<ExtArgs>;

  /**
   * `prisma.document`: Exposes CRUD operations for the **Document** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Documents
    * const documents = await prisma.document.findMany()
    * ```
    */
  get document(): Prisma.DocumentDelegate<ExtArgs>;

  /**
   * `prisma.familyHistory`: Exposes CRUD operations for the **FamilyHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FamilyHistories
    * const familyHistories = await prisma.familyHistory.findMany()
    * ```
    */
  get familyHistory(): Prisma.FamilyHistoryDelegate<ExtArgs>;

  /**
   * `prisma.notification`: Exposes CRUD operations for the **Notification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notification.findMany()
    * ```
    */
  get notification(): Prisma.NotificationDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    Family: 'Family',
    FamilyMember: 'FamilyMember',
    SupportMeasure: 'SupportMeasure',
    Document: 'Document',
    FamilyHistory: 'FamilyHistory',
    Notification: 'Notification'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "user" | "family" | "familyMember" | "supportMeasure" | "document" | "familyHistory" | "notification"
      txIsolationLevel: never
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          findRaw: {
            args: Prisma.UserFindRawArgs<ExtArgs>
            result: JsonObject
          }
          aggregateRaw: {
            args: Prisma.UserAggregateRawArgs<ExtArgs>
            result: JsonObject
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Family: {
        payload: Prisma.$FamilyPayload<ExtArgs>
        fields: Prisma.FamilyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FamilyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FamilyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyPayload>
          }
          findFirst: {
            args: Prisma.FamilyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FamilyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyPayload>
          }
          findMany: {
            args: Prisma.FamilyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyPayload>[]
          }
          create: {
            args: Prisma.FamilyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyPayload>
          }
          createMany: {
            args: Prisma.FamilyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.FamilyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyPayload>
          }
          update: {
            args: Prisma.FamilyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyPayload>
          }
          deleteMany: {
            args: Prisma.FamilyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FamilyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FamilyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyPayload>
          }
          aggregate: {
            args: Prisma.FamilyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFamily>
          }
          groupBy: {
            args: Prisma.FamilyGroupByArgs<ExtArgs>
            result: $Utils.Optional<FamilyGroupByOutputType>[]
          }
          findRaw: {
            args: Prisma.FamilyFindRawArgs<ExtArgs>
            result: JsonObject
          }
          aggregateRaw: {
            args: Prisma.FamilyAggregateRawArgs<ExtArgs>
            result: JsonObject
          }
          count: {
            args: Prisma.FamilyCountArgs<ExtArgs>
            result: $Utils.Optional<FamilyCountAggregateOutputType> | number
          }
        }
      }
      FamilyMember: {
        payload: Prisma.$FamilyMemberPayload<ExtArgs>
        fields: Prisma.FamilyMemberFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FamilyMemberFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FamilyMemberFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberPayload>
          }
          findFirst: {
            args: Prisma.FamilyMemberFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FamilyMemberFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberPayload>
          }
          findMany: {
            args: Prisma.FamilyMemberFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberPayload>[]
          }
          create: {
            args: Prisma.FamilyMemberCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberPayload>
          }
          createMany: {
            args: Prisma.FamilyMemberCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.FamilyMemberDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberPayload>
          }
          update: {
            args: Prisma.FamilyMemberUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberPayload>
          }
          deleteMany: {
            args: Prisma.FamilyMemberDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FamilyMemberUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FamilyMemberUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyMemberPayload>
          }
          aggregate: {
            args: Prisma.FamilyMemberAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFamilyMember>
          }
          groupBy: {
            args: Prisma.FamilyMemberGroupByArgs<ExtArgs>
            result: $Utils.Optional<FamilyMemberGroupByOutputType>[]
          }
          findRaw: {
            args: Prisma.FamilyMemberFindRawArgs<ExtArgs>
            result: JsonObject
          }
          aggregateRaw: {
            args: Prisma.FamilyMemberAggregateRawArgs<ExtArgs>
            result: JsonObject
          }
          count: {
            args: Prisma.FamilyMemberCountArgs<ExtArgs>
            result: $Utils.Optional<FamilyMemberCountAggregateOutputType> | number
          }
        }
      }
      SupportMeasure: {
        payload: Prisma.$SupportMeasurePayload<ExtArgs>
        fields: Prisma.SupportMeasureFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SupportMeasureFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportMeasurePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SupportMeasureFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportMeasurePayload>
          }
          findFirst: {
            args: Prisma.SupportMeasureFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportMeasurePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SupportMeasureFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportMeasurePayload>
          }
          findMany: {
            args: Prisma.SupportMeasureFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportMeasurePayload>[]
          }
          create: {
            args: Prisma.SupportMeasureCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportMeasurePayload>
          }
          createMany: {
            args: Prisma.SupportMeasureCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SupportMeasureDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportMeasurePayload>
          }
          update: {
            args: Prisma.SupportMeasureUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportMeasurePayload>
          }
          deleteMany: {
            args: Prisma.SupportMeasureDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SupportMeasureUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SupportMeasureUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SupportMeasurePayload>
          }
          aggregate: {
            args: Prisma.SupportMeasureAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSupportMeasure>
          }
          groupBy: {
            args: Prisma.SupportMeasureGroupByArgs<ExtArgs>
            result: $Utils.Optional<SupportMeasureGroupByOutputType>[]
          }
          findRaw: {
            args: Prisma.SupportMeasureFindRawArgs<ExtArgs>
            result: JsonObject
          }
          aggregateRaw: {
            args: Prisma.SupportMeasureAggregateRawArgs<ExtArgs>
            result: JsonObject
          }
          count: {
            args: Prisma.SupportMeasureCountArgs<ExtArgs>
            result: $Utils.Optional<SupportMeasureCountAggregateOutputType> | number
          }
        }
      }
      Document: {
        payload: Prisma.$DocumentPayload<ExtArgs>
        fields: Prisma.DocumentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DocumentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DocumentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>
          }
          findFirst: {
            args: Prisma.DocumentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DocumentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>
          }
          findMany: {
            args: Prisma.DocumentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>[]
          }
          create: {
            args: Prisma.DocumentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>
          }
          createMany: {
            args: Prisma.DocumentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.DocumentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>
          }
          update: {
            args: Prisma.DocumentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>
          }
          deleteMany: {
            args: Prisma.DocumentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DocumentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DocumentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>
          }
          aggregate: {
            args: Prisma.DocumentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDocument>
          }
          groupBy: {
            args: Prisma.DocumentGroupByArgs<ExtArgs>
            result: $Utils.Optional<DocumentGroupByOutputType>[]
          }
          findRaw: {
            args: Prisma.DocumentFindRawArgs<ExtArgs>
            result: JsonObject
          }
          aggregateRaw: {
            args: Prisma.DocumentAggregateRawArgs<ExtArgs>
            result: JsonObject
          }
          count: {
            args: Prisma.DocumentCountArgs<ExtArgs>
            result: $Utils.Optional<DocumentCountAggregateOutputType> | number
          }
        }
      }
      FamilyHistory: {
        payload: Prisma.$FamilyHistoryPayload<ExtArgs>
        fields: Prisma.FamilyHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FamilyHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FamilyHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyHistoryPayload>
          }
          findFirst: {
            args: Prisma.FamilyHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FamilyHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyHistoryPayload>
          }
          findMany: {
            args: Prisma.FamilyHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyHistoryPayload>[]
          }
          create: {
            args: Prisma.FamilyHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyHistoryPayload>
          }
          createMany: {
            args: Prisma.FamilyHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.FamilyHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyHistoryPayload>
          }
          update: {
            args: Prisma.FamilyHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyHistoryPayload>
          }
          deleteMany: {
            args: Prisma.FamilyHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FamilyHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FamilyHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FamilyHistoryPayload>
          }
          aggregate: {
            args: Prisma.FamilyHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFamilyHistory>
          }
          groupBy: {
            args: Prisma.FamilyHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<FamilyHistoryGroupByOutputType>[]
          }
          findRaw: {
            args: Prisma.FamilyHistoryFindRawArgs<ExtArgs>
            result: JsonObject
          }
          aggregateRaw: {
            args: Prisma.FamilyHistoryAggregateRawArgs<ExtArgs>
            result: JsonObject
          }
          count: {
            args: Prisma.FamilyHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<FamilyHistoryCountAggregateOutputType> | number
          }
        }
      }
      Notification: {
        payload: Prisma.$NotificationPayload<ExtArgs>
        fields: Prisma.NotificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findFirst: {
            args: Prisma.NotificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findMany: {
            args: Prisma.NotificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          create: {
            args: Prisma.NotificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          createMany: {
            args: Prisma.NotificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.NotificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          update: {
            args: Prisma.NotificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          deleteMany: {
            args: Prisma.NotificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.NotificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          aggregate: {
            args: Prisma.NotificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotification>
          }
          groupBy: {
            args: Prisma.NotificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificationGroupByOutputType>[]
          }
          findRaw: {
            args: Prisma.NotificationFindRawArgs<ExtArgs>
            result: JsonObject
          }
          aggregateRaw: {
            args: Prisma.NotificationAggregateRawArgs<ExtArgs>
            result: JsonObject
          }
          count: {
            args: Prisma.NotificationCountArgs<ExtArgs>
            result: $Utils.Optional<NotificationCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $runCommandRaw: {
          args: Prisma.InputJsonObject,
          result: Prisma.JsonObject
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    createdFamilies: number
    updatedFamilies: number
    createdSupportMeasures: number
    documents: number
    notifications: number
    notificationsReceived: number
    FamilyHistory: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdFamilies?: boolean | UserCountOutputTypeCountCreatedFamiliesArgs
    updatedFamilies?: boolean | UserCountOutputTypeCountUpdatedFamiliesArgs
    createdSupportMeasures?: boolean | UserCountOutputTypeCountCreatedSupportMeasuresArgs
    documents?: boolean | UserCountOutputTypeCountDocumentsArgs
    notifications?: boolean | UserCountOutputTypeCountNotificationsArgs
    notificationsReceived?: boolean | UserCountOutputTypeCountNotificationsReceivedArgs
    FamilyHistory?: boolean | UserCountOutputTypeCountFamilyHistoryArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedFamiliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FamilyWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedFamiliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FamilyWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedSupportMeasuresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupportMeasureWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDocumentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocumentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNotificationsReceivedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFamilyHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FamilyHistoryWhereInput
  }


  /**
   * Count Type FamilyCountOutputType
   */

  export type FamilyCountOutputType = {
    members: number
    supportMeasures: number
    documents: number
    history: number
  }

  export type FamilyCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    members?: boolean | FamilyCountOutputTypeCountMembersArgs
    supportMeasures?: boolean | FamilyCountOutputTypeCountSupportMeasuresArgs
    documents?: boolean | FamilyCountOutputTypeCountDocumentsArgs
    history?: boolean | FamilyCountOutputTypeCountHistoryArgs
  }

  // Custom InputTypes
  /**
   * FamilyCountOutputType without action
   */
  export type FamilyCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyCountOutputType
     */
    select?: FamilyCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FamilyCountOutputType without action
   */
  export type FamilyCountOutputTypeCountMembersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FamilyMemberWhereInput
  }

  /**
   * FamilyCountOutputType without action
   */
  export type FamilyCountOutputTypeCountSupportMeasuresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupportMeasureWhereInput
  }

  /**
   * FamilyCountOutputType without action
   */
  export type FamilyCountOutputTypeCountDocumentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocumentWhereInput
  }

  /**
   * FamilyCountOutputType without action
   */
  export type FamilyCountOutputTypeCountHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FamilyHistoryWhereInput
  }


  /**
   * Count Type FamilyMemberCountOutputType
   */

  export type FamilyMemberCountOutputType = {
    supportMeasures: number
    documents: number
  }

  export type FamilyMemberCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    supportMeasures?: boolean | FamilyMemberCountOutputTypeCountSupportMeasuresArgs
    documents?: boolean | FamilyMemberCountOutputTypeCountDocumentsArgs
  }

  // Custom InputTypes
  /**
   * FamilyMemberCountOutputType without action
   */
  export type FamilyMemberCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMemberCountOutputType
     */
    select?: FamilyMemberCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FamilyMemberCountOutputType without action
   */
  export type FamilyMemberCountOutputTypeCountSupportMeasuresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupportMeasureWhereInput
  }

  /**
   * FamilyMemberCountOutputType without action
   */
  export type FamilyMemberCountOutputTypeCountDocumentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocumentWhereInput
  }


  /**
   * Count Type SupportMeasureCountOutputType
   */

  export type SupportMeasureCountOutputType = {
    documents: number
  }

  export type SupportMeasureCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    documents?: boolean | SupportMeasureCountOutputTypeCountDocumentsArgs
  }

  // Custom InputTypes
  /**
   * SupportMeasureCountOutputType without action
   */
  export type SupportMeasureCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportMeasureCountOutputType
     */
    select?: SupportMeasureCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SupportMeasureCountOutputType without action
   */
  export type SupportMeasureCountOutputTypeCountDocumentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocumentWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    iin: string | null
    password: string | null
    fullName: string | null
    phone: string | null
    role: string | null
    region: string | null
    district: string | null
    city: string | null
    position: string | null
    isActive: boolean | null
    lastLogin: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    iin: string | null
    password: string | null
    fullName: string | null
    phone: string | null
    role: string | null
    region: string | null
    district: string | null
    city: string | null
    position: string | null
    isActive: boolean | null
    lastLogin: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    iin: number
    password: number
    fullName: number
    phone: number
    role: number
    region: number
    district: number
    city: number
    position: number
    isActive: number
    lastLogin: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    iin?: true
    password?: true
    fullName?: true
    phone?: true
    role?: true
    region?: true
    district?: true
    city?: true
    position?: true
    isActive?: true
    lastLogin?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    iin?: true
    password?: true
    fullName?: true
    phone?: true
    role?: true
    region?: true
    district?: true
    city?: true
    position?: true
    isActive?: true
    lastLogin?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    iin?: true
    password?: true
    fullName?: true
    phone?: true
    role?: true
    region?: true
    district?: true
    city?: true
    position?: true
    isActive?: true
    lastLogin?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    iin: string
    password: string
    fullName: string
    phone: string | null
    role: string
    region: string | null
    district: string | null
    city: string | null
    position: string | null
    isActive: boolean
    lastLogin: Date | null
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    iin?: boolean
    password?: boolean
    fullName?: boolean
    phone?: boolean
    role?: boolean
    region?: boolean
    district?: boolean
    city?: boolean
    position?: boolean
    isActive?: boolean
    lastLogin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdFamilies?: boolean | User$createdFamiliesArgs<ExtArgs>
    updatedFamilies?: boolean | User$updatedFamiliesArgs<ExtArgs>
    createdSupportMeasures?: boolean | User$createdSupportMeasuresArgs<ExtArgs>
    documents?: boolean | User$documentsArgs<ExtArgs>
    notifications?: boolean | User$notificationsArgs<ExtArgs>
    notificationsReceived?: boolean | User$notificationsReceivedArgs<ExtArgs>
    FamilyHistory?: boolean | User$FamilyHistoryArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>


  export type UserSelectScalar = {
    id?: boolean
    iin?: boolean
    password?: boolean
    fullName?: boolean
    phone?: boolean
    role?: boolean
    region?: boolean
    district?: boolean
    city?: boolean
    position?: boolean
    isActive?: boolean
    lastLogin?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdFamilies?: boolean | User$createdFamiliesArgs<ExtArgs>
    updatedFamilies?: boolean | User$updatedFamiliesArgs<ExtArgs>
    createdSupportMeasures?: boolean | User$createdSupportMeasuresArgs<ExtArgs>
    documents?: boolean | User$documentsArgs<ExtArgs>
    notifications?: boolean | User$notificationsArgs<ExtArgs>
    notificationsReceived?: boolean | User$notificationsReceivedArgs<ExtArgs>
    FamilyHistory?: boolean | User$FamilyHistoryArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      createdFamilies: Prisma.$FamilyPayload<ExtArgs>[]
      updatedFamilies: Prisma.$FamilyPayload<ExtArgs>[]
      createdSupportMeasures: Prisma.$SupportMeasurePayload<ExtArgs>[]
      documents: Prisma.$DocumentPayload<ExtArgs>[]
      notifications: Prisma.$NotificationPayload<ExtArgs>[]
      notificationsReceived: Prisma.$NotificationPayload<ExtArgs>[]
      FamilyHistory: Prisma.$FamilyHistoryPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      iin: string
      password: string
      fullName: string
      phone: string | null
      role: string
      region: string | null
      district: string | null
      city: string | null
      position: string | null
      isActive: boolean
      lastLogin: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * @param {UserFindRawArgs} args - Select which filters you would like to apply.
     * @example
     * const user = await prisma.user.findRaw({
     *   filter: { age: { $gt: 25 } } 
     * })
     */
    findRaw(args?: UserFindRawArgs): Prisma.PrismaPromise<JsonObject>

    /**
     * Perform aggregation operations on a User.
     * @param {UserAggregateRawArgs} args - Select which aggregations you would like to apply.
     * @example
     * const user = await prisma.user.aggregateRaw({
     *   pipeline: [
     *     { $match: { status: "registered" } },
     *     { $group: { _id: "$country", total: { $sum: 1 } } }
     *   ]
     * })
     */
    aggregateRaw(args?: UserAggregateRawArgs): Prisma.PrismaPromise<JsonObject>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    createdFamilies<T extends User$createdFamiliesArgs<ExtArgs> = {}>(args?: Subset<T, User$createdFamiliesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyPayload<ExtArgs>, T, "findMany"> | Null>
    updatedFamilies<T extends User$updatedFamiliesArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedFamiliesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyPayload<ExtArgs>, T, "findMany"> | Null>
    createdSupportMeasures<T extends User$createdSupportMeasuresArgs<ExtArgs> = {}>(args?: Subset<T, User$createdSupportMeasuresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupportMeasurePayload<ExtArgs>, T, "findMany"> | Null>
    documents<T extends User$documentsArgs<ExtArgs> = {}>(args?: Subset<T, User$documentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findMany"> | Null>
    notifications<T extends User$notificationsArgs<ExtArgs> = {}>(args?: Subset<T, User$notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany"> | Null>
    notificationsReceived<T extends User$notificationsReceivedArgs<ExtArgs> = {}>(args?: Subset<T, User$notificationsReceivedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany"> | Null>
    FamilyHistory<T extends User$FamilyHistoryArgs<ExtArgs> = {}>(args?: Subset<T, User$FamilyHistoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyHistoryPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly iin: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly fullName: FieldRef<"User", 'String'>
    readonly phone: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'String'>
    readonly region: FieldRef<"User", 'String'>
    readonly district: FieldRef<"User", 'String'>
    readonly city: FieldRef<"User", 'String'>
    readonly position: FieldRef<"User", 'String'>
    readonly isActive: FieldRef<"User", 'Boolean'>
    readonly lastLogin: FieldRef<"User", 'DateTime'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User findRaw
   */
  export type UserFindRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The query predicate filter. If unspecified, then all documents in the collection will match the predicate. ${@link https://docs.mongodb.com/manual/reference/operator/query MongoDB Docs}.
     */
    filter?: InputJsonValue
    /**
     * Additional options to pass to the `find` command ${@link https://docs.mongodb.com/manual/reference/command/find/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * User aggregateRaw
   */
  export type UserAggregateRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * An array of aggregation stages to process and transform the document stream via the aggregation pipeline. ${@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline MongoDB Docs}.
     */
    pipeline?: InputJsonValue[]
    /**
     * Additional options to pass to the `aggregate` command ${@link https://docs.mongodb.com/manual/reference/command/aggregate/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * User.createdFamilies
   */
  export type User$createdFamiliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Family
     */
    select?: FamilySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyInclude<ExtArgs> | null
    where?: FamilyWhereInput
    orderBy?: FamilyOrderByWithRelationInput | FamilyOrderByWithRelationInput[]
    cursor?: FamilyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FamilyScalarFieldEnum | FamilyScalarFieldEnum[]
  }

  /**
   * User.updatedFamilies
   */
  export type User$updatedFamiliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Family
     */
    select?: FamilySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyInclude<ExtArgs> | null
    where?: FamilyWhereInput
    orderBy?: FamilyOrderByWithRelationInput | FamilyOrderByWithRelationInput[]
    cursor?: FamilyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FamilyScalarFieldEnum | FamilyScalarFieldEnum[]
  }

  /**
   * User.createdSupportMeasures
   */
  export type User$createdSupportMeasuresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportMeasure
     */
    select?: SupportMeasureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportMeasureInclude<ExtArgs> | null
    where?: SupportMeasureWhereInput
    orderBy?: SupportMeasureOrderByWithRelationInput | SupportMeasureOrderByWithRelationInput[]
    cursor?: SupportMeasureWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupportMeasureScalarFieldEnum | SupportMeasureScalarFieldEnum[]
  }

  /**
   * User.documents
   */
  export type User$documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    where?: DocumentWhereInput
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    cursor?: DocumentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * User.notifications
   */
  export type User$notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * User.notificationsReceived
   */
  export type User$notificationsReceivedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * User.FamilyHistory
   */
  export type User$FamilyHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyHistory
     */
    select?: FamilyHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyHistoryInclude<ExtArgs> | null
    where?: FamilyHistoryWhereInput
    orderBy?: FamilyHistoryOrderByWithRelationInput | FamilyHistoryOrderByWithRelationInput[]
    cursor?: FamilyHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FamilyHistoryScalarFieldEnum | FamilyHistoryScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Family
   */

  export type AggregateFamily = {
    _count: FamilyCountAggregateOutputType | null
    _avg: FamilyAvgAggregateOutputType | null
    _sum: FamilySumAggregateOutputType | null
    _min: FamilyMinAggregateOutputType | null
    _max: FamilyMaxAggregateOutputType | null
  }

  export type FamilyAvgAggregateOutputType = {
    children: number | null
    monthlyIncome: number | null
  }

  export type FamilySumAggregateOutputType = {
    children: number | null
    monthlyIncome: number | null
  }

  export type FamilyMinAggregateOutputType = {
    id: string | null
    caseNumber: string | null
    familyName: string | null
    address: string | null
    region: string | null
    registrationAddress: string | null
    district: string | null
    city: string | null
    status: string | null
    riskLevel: string | null
    registrationDate: Date | null
    lastUpdate: Date | null
    isActive: boolean | null
    inactiveReason: string | null
    notes: string | null
    children: number | null
    settingReason: string | null
    inspectionStatus: string | null
    familyType: string | null
    housingType: string | null
    employment: string | null
    workplace: string | null
    tzhsReason: string | null
    nbReason: string | null
    familyIncome: string | null
    needsSupport: boolean | null
    needsEducation: boolean | null
    needsHealth: boolean | null
    needsPolice: boolean | null
    hasDisability: boolean | null
    contactPhone: string | null
    contactEmail: string | null
    incomeSource: string | null
    monthlyIncome: number | null
    referralSource: string | null
    primaryLanguage: string | null
    hasInterpreterNeeded: boolean | null
    createdById: string | null
    updatedById: string | null
  }

  export type FamilyMaxAggregateOutputType = {
    id: string | null
    caseNumber: string | null
    familyName: string | null
    address: string | null
    region: string | null
    registrationAddress: string | null
    district: string | null
    city: string | null
    status: string | null
    riskLevel: string | null
    registrationDate: Date | null
    lastUpdate: Date | null
    isActive: boolean | null
    inactiveReason: string | null
    notes: string | null
    children: number | null
    settingReason: string | null
    inspectionStatus: string | null
    familyType: string | null
    housingType: string | null
    employment: string | null
    workplace: string | null
    tzhsReason: string | null
    nbReason: string | null
    familyIncome: string | null
    needsSupport: boolean | null
    needsEducation: boolean | null
    needsHealth: boolean | null
    needsPolice: boolean | null
    hasDisability: boolean | null
    contactPhone: string | null
    contactEmail: string | null
    incomeSource: string | null
    monthlyIncome: number | null
    referralSource: string | null
    primaryLanguage: string | null
    hasInterpreterNeeded: boolean | null
    createdById: string | null
    updatedById: string | null
  }

  export type FamilyCountAggregateOutputType = {
    id: number
    caseNumber: number
    familyName: number
    address: number
    region: number
    registrationAddress: number
    district: number
    city: number
    status: number
    riskLevel: number
    riskFactors: number
    registrationDate: number
    lastUpdate: number
    isActive: number
    inactiveReason: number
    notes: number
    children: number
    settingReason: number
    inspectionStatus: number
    familyType: number
    housingType: number
    employment: number
    workplace: number
    tzhsReason: number
    nbReason: number
    familyIncome: number
    needsSupport: number
    needsEducation: number
    needsHealth: number
    needsPolice: number
    hasDisability: number
    contactPhone: number
    contactEmail: number
    incomeSource: number
    monthlyIncome: number
    socialBenefits: number
    referralSource: number
    primaryLanguage: number
    hasInterpreterNeeded: number
    createdById: number
    updatedById: number
    _all: number
  }


  export type FamilyAvgAggregateInputType = {
    children?: true
    monthlyIncome?: true
  }

  export type FamilySumAggregateInputType = {
    children?: true
    monthlyIncome?: true
  }

  export type FamilyMinAggregateInputType = {
    id?: true
    caseNumber?: true
    familyName?: true
    address?: true
    region?: true
    registrationAddress?: true
    district?: true
    city?: true
    status?: true
    riskLevel?: true
    registrationDate?: true
    lastUpdate?: true
    isActive?: true
    inactiveReason?: true
    notes?: true
    children?: true
    settingReason?: true
    inspectionStatus?: true
    familyType?: true
    housingType?: true
    employment?: true
    workplace?: true
    tzhsReason?: true
    nbReason?: true
    familyIncome?: true
    needsSupport?: true
    needsEducation?: true
    needsHealth?: true
    needsPolice?: true
    hasDisability?: true
    contactPhone?: true
    contactEmail?: true
    incomeSource?: true
    monthlyIncome?: true
    referralSource?: true
    primaryLanguage?: true
    hasInterpreterNeeded?: true
    createdById?: true
    updatedById?: true
  }

  export type FamilyMaxAggregateInputType = {
    id?: true
    caseNumber?: true
    familyName?: true
    address?: true
    region?: true
    registrationAddress?: true
    district?: true
    city?: true
    status?: true
    riskLevel?: true
    registrationDate?: true
    lastUpdate?: true
    isActive?: true
    inactiveReason?: true
    notes?: true
    children?: true
    settingReason?: true
    inspectionStatus?: true
    familyType?: true
    housingType?: true
    employment?: true
    workplace?: true
    tzhsReason?: true
    nbReason?: true
    familyIncome?: true
    needsSupport?: true
    needsEducation?: true
    needsHealth?: true
    needsPolice?: true
    hasDisability?: true
    contactPhone?: true
    contactEmail?: true
    incomeSource?: true
    monthlyIncome?: true
    referralSource?: true
    primaryLanguage?: true
    hasInterpreterNeeded?: true
    createdById?: true
    updatedById?: true
  }

  export type FamilyCountAggregateInputType = {
    id?: true
    caseNumber?: true
    familyName?: true
    address?: true
    region?: true
    registrationAddress?: true
    district?: true
    city?: true
    status?: true
    riskLevel?: true
    riskFactors?: true
    registrationDate?: true
    lastUpdate?: true
    isActive?: true
    inactiveReason?: true
    notes?: true
    children?: true
    settingReason?: true
    inspectionStatus?: true
    familyType?: true
    housingType?: true
    employment?: true
    workplace?: true
    tzhsReason?: true
    nbReason?: true
    familyIncome?: true
    needsSupport?: true
    needsEducation?: true
    needsHealth?: true
    needsPolice?: true
    hasDisability?: true
    contactPhone?: true
    contactEmail?: true
    incomeSource?: true
    monthlyIncome?: true
    socialBenefits?: true
    referralSource?: true
    primaryLanguage?: true
    hasInterpreterNeeded?: true
    createdById?: true
    updatedById?: true
    _all?: true
  }

  export type FamilyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Family to aggregate.
     */
    where?: FamilyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Families to fetch.
     */
    orderBy?: FamilyOrderByWithRelationInput | FamilyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FamilyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Families from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Families.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Families
    **/
    _count?: true | FamilyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FamilyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FamilySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FamilyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FamilyMaxAggregateInputType
  }

  export type GetFamilyAggregateType<T extends FamilyAggregateArgs> = {
        [P in keyof T & keyof AggregateFamily]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFamily[P]>
      : GetScalarType<T[P], AggregateFamily[P]>
  }




  export type FamilyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FamilyWhereInput
    orderBy?: FamilyOrderByWithAggregationInput | FamilyOrderByWithAggregationInput[]
    by: FamilyScalarFieldEnum[] | FamilyScalarFieldEnum
    having?: FamilyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FamilyCountAggregateInputType | true
    _avg?: FamilyAvgAggregateInputType
    _sum?: FamilySumAggregateInputType
    _min?: FamilyMinAggregateInputType
    _max?: FamilyMaxAggregateInputType
  }

  export type FamilyGroupByOutputType = {
    id: string
    caseNumber: string
    familyName: string
    address: string
    region: string
    registrationAddress: string | null
    district: string
    city: string | null
    status: string
    riskLevel: string
    riskFactors: string[]
    registrationDate: Date
    lastUpdate: Date
    isActive: boolean
    inactiveReason: string | null
    notes: string | null
    children: number | null
    settingReason: string | null
    inspectionStatus: string | null
    familyType: string | null
    housingType: string | null
    employment: string | null
    workplace: string | null
    tzhsReason: string | null
    nbReason: string | null
    familyIncome: string | null
    needsSupport: boolean
    needsEducation: boolean
    needsHealth: boolean
    needsPolice: boolean
    hasDisability: boolean
    contactPhone: string | null
    contactEmail: string | null
    incomeSource: string | null
    monthlyIncome: number | null
    socialBenefits: string[]
    referralSource: string | null
    primaryLanguage: string | null
    hasInterpreterNeeded: boolean
    createdById: string
    updatedById: string
    _count: FamilyCountAggregateOutputType | null
    _avg: FamilyAvgAggregateOutputType | null
    _sum: FamilySumAggregateOutputType | null
    _min: FamilyMinAggregateOutputType | null
    _max: FamilyMaxAggregateOutputType | null
  }

  type GetFamilyGroupByPayload<T extends FamilyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FamilyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FamilyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FamilyGroupByOutputType[P]>
            : GetScalarType<T[P], FamilyGroupByOutputType[P]>
        }
      >
    >


  export type FamilySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    caseNumber?: boolean
    familyName?: boolean
    address?: boolean
    region?: boolean
    registrationAddress?: boolean
    district?: boolean
    city?: boolean
    status?: boolean
    riskLevel?: boolean
    riskFactors?: boolean
    registrationDate?: boolean
    lastUpdate?: boolean
    isActive?: boolean
    inactiveReason?: boolean
    notes?: boolean
    children?: boolean
    settingReason?: boolean
    inspectionStatus?: boolean
    familyType?: boolean
    housingType?: boolean
    employment?: boolean
    workplace?: boolean
    tzhsReason?: boolean
    nbReason?: boolean
    familyIncome?: boolean
    needsSupport?: boolean
    needsEducation?: boolean
    needsHealth?: boolean
    needsPolice?: boolean
    hasDisability?: boolean
    contactPhone?: boolean
    contactEmail?: boolean
    incomeSource?: boolean
    monthlyIncome?: boolean
    socialBenefits?: boolean
    referralSource?: boolean
    primaryLanguage?: boolean
    hasInterpreterNeeded?: boolean
    createdById?: boolean
    updatedById?: boolean
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    updatedBy?: boolean | UserDefaultArgs<ExtArgs>
    members?: boolean | Family$membersArgs<ExtArgs>
    supportMeasures?: boolean | Family$supportMeasuresArgs<ExtArgs>
    documents?: boolean | Family$documentsArgs<ExtArgs>
    history?: boolean | Family$historyArgs<ExtArgs>
    _count?: boolean | FamilyCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["family"]>


  export type FamilySelectScalar = {
    id?: boolean
    caseNumber?: boolean
    familyName?: boolean
    address?: boolean
    region?: boolean
    registrationAddress?: boolean
    district?: boolean
    city?: boolean
    status?: boolean
    riskLevel?: boolean
    riskFactors?: boolean
    registrationDate?: boolean
    lastUpdate?: boolean
    isActive?: boolean
    inactiveReason?: boolean
    notes?: boolean
    children?: boolean
    settingReason?: boolean
    inspectionStatus?: boolean
    familyType?: boolean
    housingType?: boolean
    employment?: boolean
    workplace?: boolean
    tzhsReason?: boolean
    nbReason?: boolean
    familyIncome?: boolean
    needsSupport?: boolean
    needsEducation?: boolean
    needsHealth?: boolean
    needsPolice?: boolean
    hasDisability?: boolean
    contactPhone?: boolean
    contactEmail?: boolean
    incomeSource?: boolean
    monthlyIncome?: boolean
    socialBenefits?: boolean
    referralSource?: boolean
    primaryLanguage?: boolean
    hasInterpreterNeeded?: boolean
    createdById?: boolean
    updatedById?: boolean
  }

  export type FamilyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    updatedBy?: boolean | UserDefaultArgs<ExtArgs>
    members?: boolean | Family$membersArgs<ExtArgs>
    supportMeasures?: boolean | Family$supportMeasuresArgs<ExtArgs>
    documents?: boolean | Family$documentsArgs<ExtArgs>
    history?: boolean | Family$historyArgs<ExtArgs>
    _count?: boolean | FamilyCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $FamilyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Family"
    objects: {
      createdBy: Prisma.$UserPayload<ExtArgs>
      updatedBy: Prisma.$UserPayload<ExtArgs>
      members: Prisma.$FamilyMemberPayload<ExtArgs>[]
      supportMeasures: Prisma.$SupportMeasurePayload<ExtArgs>[]
      documents: Prisma.$DocumentPayload<ExtArgs>[]
      history: Prisma.$FamilyHistoryPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      caseNumber: string
      familyName: string
      address: string
      region: string
      registrationAddress: string | null
      district: string
      city: string | null
      status: string
      riskLevel: string
      riskFactors: string[]
      registrationDate: Date
      lastUpdate: Date
      isActive: boolean
      inactiveReason: string | null
      notes: string | null
      children: number | null
      settingReason: string | null
      inspectionStatus: string | null
      familyType: string | null
      housingType: string | null
      employment: string | null
      workplace: string | null
      tzhsReason: string | null
      nbReason: string | null
      familyIncome: string | null
      needsSupport: boolean
      needsEducation: boolean
      needsHealth: boolean
      needsPolice: boolean
      hasDisability: boolean
      contactPhone: string | null
      contactEmail: string | null
      incomeSource: string | null
      monthlyIncome: number | null
      socialBenefits: string[]
      referralSource: string | null
      primaryLanguage: string | null
      hasInterpreterNeeded: boolean
      createdById: string
      updatedById: string
    }, ExtArgs["result"]["family"]>
    composites: {}
  }

  type FamilyGetPayload<S extends boolean | null | undefined | FamilyDefaultArgs> = $Result.GetResult<Prisma.$FamilyPayload, S>

  type FamilyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FamilyFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FamilyCountAggregateInputType | true
    }

  export interface FamilyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Family'], meta: { name: 'Family' } }
    /**
     * Find zero or one Family that matches the filter.
     * @param {FamilyFindUniqueArgs} args - Arguments to find a Family
     * @example
     * // Get one Family
     * const family = await prisma.family.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FamilyFindUniqueArgs>(args: SelectSubset<T, FamilyFindUniqueArgs<ExtArgs>>): Prisma__FamilyClient<$Result.GetResult<Prisma.$FamilyPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Family that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FamilyFindUniqueOrThrowArgs} args - Arguments to find a Family
     * @example
     * // Get one Family
     * const family = await prisma.family.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FamilyFindUniqueOrThrowArgs>(args: SelectSubset<T, FamilyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FamilyClient<$Result.GetResult<Prisma.$FamilyPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Family that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyFindFirstArgs} args - Arguments to find a Family
     * @example
     * // Get one Family
     * const family = await prisma.family.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FamilyFindFirstArgs>(args?: SelectSubset<T, FamilyFindFirstArgs<ExtArgs>>): Prisma__FamilyClient<$Result.GetResult<Prisma.$FamilyPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Family that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyFindFirstOrThrowArgs} args - Arguments to find a Family
     * @example
     * // Get one Family
     * const family = await prisma.family.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FamilyFindFirstOrThrowArgs>(args?: SelectSubset<T, FamilyFindFirstOrThrowArgs<ExtArgs>>): Prisma__FamilyClient<$Result.GetResult<Prisma.$FamilyPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Families that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Families
     * const families = await prisma.family.findMany()
     * 
     * // Get first 10 Families
     * const families = await prisma.family.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const familyWithIdOnly = await prisma.family.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FamilyFindManyArgs>(args?: SelectSubset<T, FamilyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Family.
     * @param {FamilyCreateArgs} args - Arguments to create a Family.
     * @example
     * // Create one Family
     * const Family = await prisma.family.create({
     *   data: {
     *     // ... data to create a Family
     *   }
     * })
     * 
     */
    create<T extends FamilyCreateArgs>(args: SelectSubset<T, FamilyCreateArgs<ExtArgs>>): Prisma__FamilyClient<$Result.GetResult<Prisma.$FamilyPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Families.
     * @param {FamilyCreateManyArgs} args - Arguments to create many Families.
     * @example
     * // Create many Families
     * const family = await prisma.family.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FamilyCreateManyArgs>(args?: SelectSubset<T, FamilyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Family.
     * @param {FamilyDeleteArgs} args - Arguments to delete one Family.
     * @example
     * // Delete one Family
     * const Family = await prisma.family.delete({
     *   where: {
     *     // ... filter to delete one Family
     *   }
     * })
     * 
     */
    delete<T extends FamilyDeleteArgs>(args: SelectSubset<T, FamilyDeleteArgs<ExtArgs>>): Prisma__FamilyClient<$Result.GetResult<Prisma.$FamilyPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Family.
     * @param {FamilyUpdateArgs} args - Arguments to update one Family.
     * @example
     * // Update one Family
     * const family = await prisma.family.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FamilyUpdateArgs>(args: SelectSubset<T, FamilyUpdateArgs<ExtArgs>>): Prisma__FamilyClient<$Result.GetResult<Prisma.$FamilyPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Families.
     * @param {FamilyDeleteManyArgs} args - Arguments to filter Families to delete.
     * @example
     * // Delete a few Families
     * const { count } = await prisma.family.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FamilyDeleteManyArgs>(args?: SelectSubset<T, FamilyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Families.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Families
     * const family = await prisma.family.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FamilyUpdateManyArgs>(args: SelectSubset<T, FamilyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Family.
     * @param {FamilyUpsertArgs} args - Arguments to update or create a Family.
     * @example
     * // Update or create a Family
     * const family = await prisma.family.upsert({
     *   create: {
     *     // ... data to create a Family
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Family we want to update
     *   }
     * })
     */
    upsert<T extends FamilyUpsertArgs>(args: SelectSubset<T, FamilyUpsertArgs<ExtArgs>>): Prisma__FamilyClient<$Result.GetResult<Prisma.$FamilyPayload<ExtArgs>, T, "upsert">, never, ExtArgs>

    /**
     * Find zero or more Families that matches the filter.
     * @param {FamilyFindRawArgs} args - Select which filters you would like to apply.
     * @example
     * const family = await prisma.family.findRaw({
     *   filter: { age: { $gt: 25 } } 
     * })
     */
    findRaw(args?: FamilyFindRawArgs): Prisma.PrismaPromise<JsonObject>

    /**
     * Perform aggregation operations on a Family.
     * @param {FamilyAggregateRawArgs} args - Select which aggregations you would like to apply.
     * @example
     * const family = await prisma.family.aggregateRaw({
     *   pipeline: [
     *     { $match: { status: "registered" } },
     *     { $group: { _id: "$country", total: { $sum: 1 } } }
     *   ]
     * })
     */
    aggregateRaw(args?: FamilyAggregateRawArgs): Prisma.PrismaPromise<JsonObject>


    /**
     * Count the number of Families.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyCountArgs} args - Arguments to filter Families to count.
     * @example
     * // Count the number of Families
     * const count = await prisma.family.count({
     *   where: {
     *     // ... the filter for the Families we want to count
     *   }
     * })
    **/
    count<T extends FamilyCountArgs>(
      args?: Subset<T, FamilyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FamilyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Family.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FamilyAggregateArgs>(args: Subset<T, FamilyAggregateArgs>): Prisma.PrismaPromise<GetFamilyAggregateType<T>>

    /**
     * Group by Family.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FamilyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FamilyGroupByArgs['orderBy'] }
        : { orderBy?: FamilyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FamilyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFamilyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Family model
   */
  readonly fields: FamilyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Family.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FamilyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    createdBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    updatedBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    members<T extends Family$membersArgs<ExtArgs> = {}>(args?: Subset<T, Family$membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, "findMany"> | Null>
    supportMeasures<T extends Family$supportMeasuresArgs<ExtArgs> = {}>(args?: Subset<T, Family$supportMeasuresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupportMeasurePayload<ExtArgs>, T, "findMany"> | Null>
    documents<T extends Family$documentsArgs<ExtArgs> = {}>(args?: Subset<T, Family$documentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findMany"> | Null>
    history<T extends Family$historyArgs<ExtArgs> = {}>(args?: Subset<T, Family$historyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyHistoryPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Family model
   */ 
  interface FamilyFieldRefs {
    readonly id: FieldRef<"Family", 'String'>
    readonly caseNumber: FieldRef<"Family", 'String'>
    readonly familyName: FieldRef<"Family", 'String'>
    readonly address: FieldRef<"Family", 'String'>
    readonly region: FieldRef<"Family", 'String'>
    readonly registrationAddress: FieldRef<"Family", 'String'>
    readonly district: FieldRef<"Family", 'String'>
    readonly city: FieldRef<"Family", 'String'>
    readonly status: FieldRef<"Family", 'String'>
    readonly riskLevel: FieldRef<"Family", 'String'>
    readonly riskFactors: FieldRef<"Family", 'String[]'>
    readonly registrationDate: FieldRef<"Family", 'DateTime'>
    readonly lastUpdate: FieldRef<"Family", 'DateTime'>
    readonly isActive: FieldRef<"Family", 'Boolean'>
    readonly inactiveReason: FieldRef<"Family", 'String'>
    readonly notes: FieldRef<"Family", 'String'>
    readonly children: FieldRef<"Family", 'Int'>
    readonly settingReason: FieldRef<"Family", 'String'>
    readonly inspectionStatus: FieldRef<"Family", 'String'>
    readonly familyType: FieldRef<"Family", 'String'>
    readonly housingType: FieldRef<"Family", 'String'>
    readonly employment: FieldRef<"Family", 'String'>
    readonly workplace: FieldRef<"Family", 'String'>
    readonly tzhsReason: FieldRef<"Family", 'String'>
    readonly nbReason: FieldRef<"Family", 'String'>
    readonly familyIncome: FieldRef<"Family", 'String'>
    readonly needsSupport: FieldRef<"Family", 'Boolean'>
    readonly needsEducation: FieldRef<"Family", 'Boolean'>
    readonly needsHealth: FieldRef<"Family", 'Boolean'>
    readonly needsPolice: FieldRef<"Family", 'Boolean'>
    readonly hasDisability: FieldRef<"Family", 'Boolean'>
    readonly contactPhone: FieldRef<"Family", 'String'>
    readonly contactEmail: FieldRef<"Family", 'String'>
    readonly incomeSource: FieldRef<"Family", 'String'>
    readonly monthlyIncome: FieldRef<"Family", 'Float'>
    readonly socialBenefits: FieldRef<"Family", 'String[]'>
    readonly referralSource: FieldRef<"Family", 'String'>
    readonly primaryLanguage: FieldRef<"Family", 'String'>
    readonly hasInterpreterNeeded: FieldRef<"Family", 'Boolean'>
    readonly createdById: FieldRef<"Family", 'String'>
    readonly updatedById: FieldRef<"Family", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Family findUnique
   */
  export type FamilyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Family
     */
    select?: FamilySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyInclude<ExtArgs> | null
    /**
     * Filter, which Family to fetch.
     */
    where: FamilyWhereUniqueInput
  }

  /**
   * Family findUniqueOrThrow
   */
  export type FamilyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Family
     */
    select?: FamilySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyInclude<ExtArgs> | null
    /**
     * Filter, which Family to fetch.
     */
    where: FamilyWhereUniqueInput
  }

  /**
   * Family findFirst
   */
  export type FamilyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Family
     */
    select?: FamilySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyInclude<ExtArgs> | null
    /**
     * Filter, which Family to fetch.
     */
    where?: FamilyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Families to fetch.
     */
    orderBy?: FamilyOrderByWithRelationInput | FamilyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Families.
     */
    cursor?: FamilyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Families from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Families.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Families.
     */
    distinct?: FamilyScalarFieldEnum | FamilyScalarFieldEnum[]
  }

  /**
   * Family findFirstOrThrow
   */
  export type FamilyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Family
     */
    select?: FamilySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyInclude<ExtArgs> | null
    /**
     * Filter, which Family to fetch.
     */
    where?: FamilyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Families to fetch.
     */
    orderBy?: FamilyOrderByWithRelationInput | FamilyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Families.
     */
    cursor?: FamilyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Families from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Families.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Families.
     */
    distinct?: FamilyScalarFieldEnum | FamilyScalarFieldEnum[]
  }

  /**
   * Family findMany
   */
  export type FamilyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Family
     */
    select?: FamilySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyInclude<ExtArgs> | null
    /**
     * Filter, which Families to fetch.
     */
    where?: FamilyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Families to fetch.
     */
    orderBy?: FamilyOrderByWithRelationInput | FamilyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Families.
     */
    cursor?: FamilyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Families from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Families.
     */
    skip?: number
    distinct?: FamilyScalarFieldEnum | FamilyScalarFieldEnum[]
  }

  /**
   * Family create
   */
  export type FamilyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Family
     */
    select?: FamilySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyInclude<ExtArgs> | null
    /**
     * The data needed to create a Family.
     */
    data: XOR<FamilyCreateInput, FamilyUncheckedCreateInput>
  }

  /**
   * Family createMany
   */
  export type FamilyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Families.
     */
    data: FamilyCreateManyInput | FamilyCreateManyInput[]
  }

  /**
   * Family update
   */
  export type FamilyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Family
     */
    select?: FamilySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyInclude<ExtArgs> | null
    /**
     * The data needed to update a Family.
     */
    data: XOR<FamilyUpdateInput, FamilyUncheckedUpdateInput>
    /**
     * Choose, which Family to update.
     */
    where: FamilyWhereUniqueInput
  }

  /**
   * Family updateMany
   */
  export type FamilyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Families.
     */
    data: XOR<FamilyUpdateManyMutationInput, FamilyUncheckedUpdateManyInput>
    /**
     * Filter which Families to update
     */
    where?: FamilyWhereInput
  }

  /**
   * Family upsert
   */
  export type FamilyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Family
     */
    select?: FamilySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyInclude<ExtArgs> | null
    /**
     * The filter to search for the Family to update in case it exists.
     */
    where: FamilyWhereUniqueInput
    /**
     * In case the Family found by the `where` argument doesn't exist, create a new Family with this data.
     */
    create: XOR<FamilyCreateInput, FamilyUncheckedCreateInput>
    /**
     * In case the Family was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FamilyUpdateInput, FamilyUncheckedUpdateInput>
  }

  /**
   * Family delete
   */
  export type FamilyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Family
     */
    select?: FamilySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyInclude<ExtArgs> | null
    /**
     * Filter which Family to delete.
     */
    where: FamilyWhereUniqueInput
  }

  /**
   * Family deleteMany
   */
  export type FamilyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Families to delete
     */
    where?: FamilyWhereInput
  }

  /**
   * Family findRaw
   */
  export type FamilyFindRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The query predicate filter. If unspecified, then all documents in the collection will match the predicate. ${@link https://docs.mongodb.com/manual/reference/operator/query MongoDB Docs}.
     */
    filter?: InputJsonValue
    /**
     * Additional options to pass to the `find` command ${@link https://docs.mongodb.com/manual/reference/command/find/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * Family aggregateRaw
   */
  export type FamilyAggregateRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * An array of aggregation stages to process and transform the document stream via the aggregation pipeline. ${@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline MongoDB Docs}.
     */
    pipeline?: InputJsonValue[]
    /**
     * Additional options to pass to the `aggregate` command ${@link https://docs.mongodb.com/manual/reference/command/aggregate/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * Family.members
   */
  export type Family$membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    where?: FamilyMemberWhereInput
    orderBy?: FamilyMemberOrderByWithRelationInput | FamilyMemberOrderByWithRelationInput[]
    cursor?: FamilyMemberWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FamilyMemberScalarFieldEnum | FamilyMemberScalarFieldEnum[]
  }

  /**
   * Family.supportMeasures
   */
  export type Family$supportMeasuresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportMeasure
     */
    select?: SupportMeasureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportMeasureInclude<ExtArgs> | null
    where?: SupportMeasureWhereInput
    orderBy?: SupportMeasureOrderByWithRelationInput | SupportMeasureOrderByWithRelationInput[]
    cursor?: SupportMeasureWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupportMeasureScalarFieldEnum | SupportMeasureScalarFieldEnum[]
  }

  /**
   * Family.documents
   */
  export type Family$documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    where?: DocumentWhereInput
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    cursor?: DocumentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * Family.history
   */
  export type Family$historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyHistory
     */
    select?: FamilyHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyHistoryInclude<ExtArgs> | null
    where?: FamilyHistoryWhereInput
    orderBy?: FamilyHistoryOrderByWithRelationInput | FamilyHistoryOrderByWithRelationInput[]
    cursor?: FamilyHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FamilyHistoryScalarFieldEnum | FamilyHistoryScalarFieldEnum[]
  }

  /**
   * Family without action
   */
  export type FamilyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Family
     */
    select?: FamilySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyInclude<ExtArgs> | null
  }


  /**
   * Model FamilyMember
   */

  export type AggregateFamilyMember = {
    _count: FamilyMemberCountAggregateOutputType | null
    _avg: FamilyMemberAvgAggregateOutputType | null
    _sum: FamilyMemberSumAggregateOutputType | null
    _min: FamilyMemberMinAggregateOutputType | null
    _max: FamilyMemberMaxAggregateOutputType | null
  }

  export type FamilyMemberAvgAggregateOutputType = {
    incomeAmount: number | null
  }

  export type FamilyMemberSumAggregateOutputType = {
    incomeAmount: number | null
  }

  export type FamilyMemberMinAggregateOutputType = {
    id: string | null
    familyId: string | null
    firstName: string | null
    lastName: string | null
    middleName: string | null
    birthDate: Date | null
    gender: string | null
    relationship: string | null
    documentType: string | null
    documentNumber: string | null
    documentIssueDate: Date | null
    documentExpiryDate: Date | null
    registrationAddress: string | null
    education: string | null
    grade: string | null
    institution: string | null
    course: string | null
    funding: string | null
    meals: string | null
    notes: string | null
    status: string | null
    isActive: boolean | null
    citizenship: string | null
    ethnicity: string | null
    maritalStatus: string | null
    phoneNumber: string | null
    email: string | null
    employment: string | null
    healthStatus: string | null
    disabilities: string | null
    specialNeeds: boolean | null
    isHeadOfHousehold: boolean | null
    primaryCaregiver: boolean | null
    incomeAmount: number | null
    incomeSource: string | null
    medicalInsurance: string | null
  }

  export type FamilyMemberMaxAggregateOutputType = {
    id: string | null
    familyId: string | null
    firstName: string | null
    lastName: string | null
    middleName: string | null
    birthDate: Date | null
    gender: string | null
    relationship: string | null
    documentType: string | null
    documentNumber: string | null
    documentIssueDate: Date | null
    documentExpiryDate: Date | null
    registrationAddress: string | null
    education: string | null
    grade: string | null
    institution: string | null
    course: string | null
    funding: string | null
    meals: string | null
    notes: string | null
    status: string | null
    isActive: boolean | null
    citizenship: string | null
    ethnicity: string | null
    maritalStatus: string | null
    phoneNumber: string | null
    email: string | null
    employment: string | null
    healthStatus: string | null
    disabilities: string | null
    specialNeeds: boolean | null
    isHeadOfHousehold: boolean | null
    primaryCaregiver: boolean | null
    incomeAmount: number | null
    incomeSource: string | null
    medicalInsurance: string | null
  }

  export type FamilyMemberCountAggregateOutputType = {
    id: number
    familyId: number
    firstName: number
    lastName: number
    middleName: number
    birthDate: number
    gender: number
    relationship: number
    documentType: number
    documentNumber: number
    documentIssueDate: number
    documentExpiryDate: number
    registrationAddress: number
    education: number
    grade: number
    institution: number
    course: number
    funding: number
    meals: number
    notes: number
    status: number
    isActive: number
    citizenship: number
    ethnicity: number
    maritalStatus: number
    phoneNumber: number
    email: number
    employment: number
    healthStatus: number
    disabilities: number
    specialNeeds: number
    isHeadOfHousehold: number
    primaryCaregiver: number
    incomeAmount: number
    incomeSource: number
    medicalInsurance: number
    chronicConditions: number
    allergies: number
    medications: number
    _all: number
  }


  export type FamilyMemberAvgAggregateInputType = {
    incomeAmount?: true
  }

  export type FamilyMemberSumAggregateInputType = {
    incomeAmount?: true
  }

  export type FamilyMemberMinAggregateInputType = {
    id?: true
    familyId?: true
    firstName?: true
    lastName?: true
    middleName?: true
    birthDate?: true
    gender?: true
    relationship?: true
    documentType?: true
    documentNumber?: true
    documentIssueDate?: true
    documentExpiryDate?: true
    registrationAddress?: true
    education?: true
    grade?: true
    institution?: true
    course?: true
    funding?: true
    meals?: true
    notes?: true
    status?: true
    isActive?: true
    citizenship?: true
    ethnicity?: true
    maritalStatus?: true
    phoneNumber?: true
    email?: true
    employment?: true
    healthStatus?: true
    disabilities?: true
    specialNeeds?: true
    isHeadOfHousehold?: true
    primaryCaregiver?: true
    incomeAmount?: true
    incomeSource?: true
    medicalInsurance?: true
  }

  export type FamilyMemberMaxAggregateInputType = {
    id?: true
    familyId?: true
    firstName?: true
    lastName?: true
    middleName?: true
    birthDate?: true
    gender?: true
    relationship?: true
    documentType?: true
    documentNumber?: true
    documentIssueDate?: true
    documentExpiryDate?: true
    registrationAddress?: true
    education?: true
    grade?: true
    institution?: true
    course?: true
    funding?: true
    meals?: true
    notes?: true
    status?: true
    isActive?: true
    citizenship?: true
    ethnicity?: true
    maritalStatus?: true
    phoneNumber?: true
    email?: true
    employment?: true
    healthStatus?: true
    disabilities?: true
    specialNeeds?: true
    isHeadOfHousehold?: true
    primaryCaregiver?: true
    incomeAmount?: true
    incomeSource?: true
    medicalInsurance?: true
  }

  export type FamilyMemberCountAggregateInputType = {
    id?: true
    familyId?: true
    firstName?: true
    lastName?: true
    middleName?: true
    birthDate?: true
    gender?: true
    relationship?: true
    documentType?: true
    documentNumber?: true
    documentIssueDate?: true
    documentExpiryDate?: true
    registrationAddress?: true
    education?: true
    grade?: true
    institution?: true
    course?: true
    funding?: true
    meals?: true
    notes?: true
    status?: true
    isActive?: true
    citizenship?: true
    ethnicity?: true
    maritalStatus?: true
    phoneNumber?: true
    email?: true
    employment?: true
    healthStatus?: true
    disabilities?: true
    specialNeeds?: true
    isHeadOfHousehold?: true
    primaryCaregiver?: true
    incomeAmount?: true
    incomeSource?: true
    medicalInsurance?: true
    chronicConditions?: true
    allergies?: true
    medications?: true
    _all?: true
  }

  export type FamilyMemberAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FamilyMember to aggregate.
     */
    where?: FamilyMemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyMembers to fetch.
     */
    orderBy?: FamilyMemberOrderByWithRelationInput | FamilyMemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FamilyMemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyMembers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyMembers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FamilyMembers
    **/
    _count?: true | FamilyMemberCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FamilyMemberAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FamilyMemberSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FamilyMemberMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FamilyMemberMaxAggregateInputType
  }

  export type GetFamilyMemberAggregateType<T extends FamilyMemberAggregateArgs> = {
        [P in keyof T & keyof AggregateFamilyMember]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFamilyMember[P]>
      : GetScalarType<T[P], AggregateFamilyMember[P]>
  }




  export type FamilyMemberGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FamilyMemberWhereInput
    orderBy?: FamilyMemberOrderByWithAggregationInput | FamilyMemberOrderByWithAggregationInput[]
    by: FamilyMemberScalarFieldEnum[] | FamilyMemberScalarFieldEnum
    having?: FamilyMemberScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FamilyMemberCountAggregateInputType | true
    _avg?: FamilyMemberAvgAggregateInputType
    _sum?: FamilyMemberSumAggregateInputType
    _min?: FamilyMemberMinAggregateInputType
    _max?: FamilyMemberMaxAggregateInputType
  }

  export type FamilyMemberGroupByOutputType = {
    id: string
    familyId: string
    firstName: string
    lastName: string
    middleName: string | null
    birthDate: Date | null
    gender: string | null
    relationship: string
    documentType: string | null
    documentNumber: string | null
    documentIssueDate: Date | null
    documentExpiryDate: Date | null
    registrationAddress: string | null
    education: string | null
    grade: string | null
    institution: string | null
    course: string | null
    funding: string | null
    meals: string | null
    notes: string | null
    status: string | null
    isActive: boolean
    citizenship: string | null
    ethnicity: string | null
    maritalStatus: string | null
    phoneNumber: string | null
    email: string | null
    employment: string | null
    healthStatus: string | null
    disabilities: string | null
    specialNeeds: boolean
    isHeadOfHousehold: boolean
    primaryCaregiver: boolean
    incomeAmount: number | null
    incomeSource: string | null
    medicalInsurance: string | null
    chronicConditions: string[]
    allergies: string[]
    medications: string[]
    _count: FamilyMemberCountAggregateOutputType | null
    _avg: FamilyMemberAvgAggregateOutputType | null
    _sum: FamilyMemberSumAggregateOutputType | null
    _min: FamilyMemberMinAggregateOutputType | null
    _max: FamilyMemberMaxAggregateOutputType | null
  }

  type GetFamilyMemberGroupByPayload<T extends FamilyMemberGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FamilyMemberGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FamilyMemberGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FamilyMemberGroupByOutputType[P]>
            : GetScalarType<T[P], FamilyMemberGroupByOutputType[P]>
        }
      >
    >


  export type FamilyMemberSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    familyId?: boolean
    firstName?: boolean
    lastName?: boolean
    middleName?: boolean
    birthDate?: boolean
    gender?: boolean
    relationship?: boolean
    documentType?: boolean
    documentNumber?: boolean
    documentIssueDate?: boolean
    documentExpiryDate?: boolean
    registrationAddress?: boolean
    education?: boolean
    grade?: boolean
    institution?: boolean
    course?: boolean
    funding?: boolean
    meals?: boolean
    notes?: boolean
    status?: boolean
    isActive?: boolean
    citizenship?: boolean
    ethnicity?: boolean
    maritalStatus?: boolean
    phoneNumber?: boolean
    email?: boolean
    employment?: boolean
    healthStatus?: boolean
    disabilities?: boolean
    specialNeeds?: boolean
    isHeadOfHousehold?: boolean
    primaryCaregiver?: boolean
    incomeAmount?: boolean
    incomeSource?: boolean
    medicalInsurance?: boolean
    chronicConditions?: boolean
    allergies?: boolean
    medications?: boolean
    family?: boolean | FamilyDefaultArgs<ExtArgs>
    supportMeasures?: boolean | FamilyMember$supportMeasuresArgs<ExtArgs>
    documents?: boolean | FamilyMember$documentsArgs<ExtArgs>
    _count?: boolean | FamilyMemberCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["familyMember"]>


  export type FamilyMemberSelectScalar = {
    id?: boolean
    familyId?: boolean
    firstName?: boolean
    lastName?: boolean
    middleName?: boolean
    birthDate?: boolean
    gender?: boolean
    relationship?: boolean
    documentType?: boolean
    documentNumber?: boolean
    documentIssueDate?: boolean
    documentExpiryDate?: boolean
    registrationAddress?: boolean
    education?: boolean
    grade?: boolean
    institution?: boolean
    course?: boolean
    funding?: boolean
    meals?: boolean
    notes?: boolean
    status?: boolean
    isActive?: boolean
    citizenship?: boolean
    ethnicity?: boolean
    maritalStatus?: boolean
    phoneNumber?: boolean
    email?: boolean
    employment?: boolean
    healthStatus?: boolean
    disabilities?: boolean
    specialNeeds?: boolean
    isHeadOfHousehold?: boolean
    primaryCaregiver?: boolean
    incomeAmount?: boolean
    incomeSource?: boolean
    medicalInsurance?: boolean
    chronicConditions?: boolean
    allergies?: boolean
    medications?: boolean
  }

  export type FamilyMemberInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    family?: boolean | FamilyDefaultArgs<ExtArgs>
    supportMeasures?: boolean | FamilyMember$supportMeasuresArgs<ExtArgs>
    documents?: boolean | FamilyMember$documentsArgs<ExtArgs>
    _count?: boolean | FamilyMemberCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $FamilyMemberPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FamilyMember"
    objects: {
      family: Prisma.$FamilyPayload<ExtArgs>
      supportMeasures: Prisma.$SupportMeasurePayload<ExtArgs>[]
      documents: Prisma.$DocumentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      familyId: string
      firstName: string
      lastName: string
      middleName: string | null
      birthDate: Date | null
      gender: string | null
      relationship: string
      documentType: string | null
      documentNumber: string | null
      documentIssueDate: Date | null
      documentExpiryDate: Date | null
      registrationAddress: string | null
      education: string | null
      grade: string | null
      institution: string | null
      course: string | null
      funding: string | null
      meals: string | null
      notes: string | null
      status: string | null
      isActive: boolean
      citizenship: string | null
      ethnicity: string | null
      maritalStatus: string | null
      phoneNumber: string | null
      email: string | null
      employment: string | null
      healthStatus: string | null
      disabilities: string | null
      specialNeeds: boolean
      isHeadOfHousehold: boolean
      primaryCaregiver: boolean
      incomeAmount: number | null
      incomeSource: string | null
      medicalInsurance: string | null
      chronicConditions: string[]
      allergies: string[]
      medications: string[]
    }, ExtArgs["result"]["familyMember"]>
    composites: {}
  }

  type FamilyMemberGetPayload<S extends boolean | null | undefined | FamilyMemberDefaultArgs> = $Result.GetResult<Prisma.$FamilyMemberPayload, S>

  type FamilyMemberCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FamilyMemberFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FamilyMemberCountAggregateInputType | true
    }

  export interface FamilyMemberDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FamilyMember'], meta: { name: 'FamilyMember' } }
    /**
     * Find zero or one FamilyMember that matches the filter.
     * @param {FamilyMemberFindUniqueArgs} args - Arguments to find a FamilyMember
     * @example
     * // Get one FamilyMember
     * const familyMember = await prisma.familyMember.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FamilyMemberFindUniqueArgs>(args: SelectSubset<T, FamilyMemberFindUniqueArgs<ExtArgs>>): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one FamilyMember that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FamilyMemberFindUniqueOrThrowArgs} args - Arguments to find a FamilyMember
     * @example
     * // Get one FamilyMember
     * const familyMember = await prisma.familyMember.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FamilyMemberFindUniqueOrThrowArgs>(args: SelectSubset<T, FamilyMemberFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first FamilyMember that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberFindFirstArgs} args - Arguments to find a FamilyMember
     * @example
     * // Get one FamilyMember
     * const familyMember = await prisma.familyMember.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FamilyMemberFindFirstArgs>(args?: SelectSubset<T, FamilyMemberFindFirstArgs<ExtArgs>>): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first FamilyMember that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberFindFirstOrThrowArgs} args - Arguments to find a FamilyMember
     * @example
     * // Get one FamilyMember
     * const familyMember = await prisma.familyMember.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FamilyMemberFindFirstOrThrowArgs>(args?: SelectSubset<T, FamilyMemberFindFirstOrThrowArgs<ExtArgs>>): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more FamilyMembers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FamilyMembers
     * const familyMembers = await prisma.familyMember.findMany()
     * 
     * // Get first 10 FamilyMembers
     * const familyMembers = await prisma.familyMember.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const familyMemberWithIdOnly = await prisma.familyMember.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FamilyMemberFindManyArgs>(args?: SelectSubset<T, FamilyMemberFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a FamilyMember.
     * @param {FamilyMemberCreateArgs} args - Arguments to create a FamilyMember.
     * @example
     * // Create one FamilyMember
     * const FamilyMember = await prisma.familyMember.create({
     *   data: {
     *     // ... data to create a FamilyMember
     *   }
     * })
     * 
     */
    create<T extends FamilyMemberCreateArgs>(args: SelectSubset<T, FamilyMemberCreateArgs<ExtArgs>>): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many FamilyMembers.
     * @param {FamilyMemberCreateManyArgs} args - Arguments to create many FamilyMembers.
     * @example
     * // Create many FamilyMembers
     * const familyMember = await prisma.familyMember.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FamilyMemberCreateManyArgs>(args?: SelectSubset<T, FamilyMemberCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a FamilyMember.
     * @param {FamilyMemberDeleteArgs} args - Arguments to delete one FamilyMember.
     * @example
     * // Delete one FamilyMember
     * const FamilyMember = await prisma.familyMember.delete({
     *   where: {
     *     // ... filter to delete one FamilyMember
     *   }
     * })
     * 
     */
    delete<T extends FamilyMemberDeleteArgs>(args: SelectSubset<T, FamilyMemberDeleteArgs<ExtArgs>>): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one FamilyMember.
     * @param {FamilyMemberUpdateArgs} args - Arguments to update one FamilyMember.
     * @example
     * // Update one FamilyMember
     * const familyMember = await prisma.familyMember.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FamilyMemberUpdateArgs>(args: SelectSubset<T, FamilyMemberUpdateArgs<ExtArgs>>): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more FamilyMembers.
     * @param {FamilyMemberDeleteManyArgs} args - Arguments to filter FamilyMembers to delete.
     * @example
     * // Delete a few FamilyMembers
     * const { count } = await prisma.familyMember.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FamilyMemberDeleteManyArgs>(args?: SelectSubset<T, FamilyMemberDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FamilyMembers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FamilyMembers
     * const familyMember = await prisma.familyMember.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FamilyMemberUpdateManyArgs>(args: SelectSubset<T, FamilyMemberUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FamilyMember.
     * @param {FamilyMemberUpsertArgs} args - Arguments to update or create a FamilyMember.
     * @example
     * // Update or create a FamilyMember
     * const familyMember = await prisma.familyMember.upsert({
     *   create: {
     *     // ... data to create a FamilyMember
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FamilyMember we want to update
     *   }
     * })
     */
    upsert<T extends FamilyMemberUpsertArgs>(args: SelectSubset<T, FamilyMemberUpsertArgs<ExtArgs>>): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, "upsert">, never, ExtArgs>

    /**
     * Find zero or more FamilyMembers that matches the filter.
     * @param {FamilyMemberFindRawArgs} args - Select which filters you would like to apply.
     * @example
     * const familyMember = await prisma.familyMember.findRaw({
     *   filter: { age: { $gt: 25 } } 
     * })
     */
    findRaw(args?: FamilyMemberFindRawArgs): Prisma.PrismaPromise<JsonObject>

    /**
     * Perform aggregation operations on a FamilyMember.
     * @param {FamilyMemberAggregateRawArgs} args - Select which aggregations you would like to apply.
     * @example
     * const familyMember = await prisma.familyMember.aggregateRaw({
     *   pipeline: [
     *     { $match: { status: "registered" } },
     *     { $group: { _id: "$country", total: { $sum: 1 } } }
     *   ]
     * })
     */
    aggregateRaw(args?: FamilyMemberAggregateRawArgs): Prisma.PrismaPromise<JsonObject>


    /**
     * Count the number of FamilyMembers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberCountArgs} args - Arguments to filter FamilyMembers to count.
     * @example
     * // Count the number of FamilyMembers
     * const count = await prisma.familyMember.count({
     *   where: {
     *     // ... the filter for the FamilyMembers we want to count
     *   }
     * })
    **/
    count<T extends FamilyMemberCountArgs>(
      args?: Subset<T, FamilyMemberCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FamilyMemberCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FamilyMember.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FamilyMemberAggregateArgs>(args: Subset<T, FamilyMemberAggregateArgs>): Prisma.PrismaPromise<GetFamilyMemberAggregateType<T>>

    /**
     * Group by FamilyMember.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyMemberGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FamilyMemberGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FamilyMemberGroupByArgs['orderBy'] }
        : { orderBy?: FamilyMemberGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FamilyMemberGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFamilyMemberGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FamilyMember model
   */
  readonly fields: FamilyMemberFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FamilyMember.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FamilyMemberClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    family<T extends FamilyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FamilyDefaultArgs<ExtArgs>>): Prisma__FamilyClient<$Result.GetResult<Prisma.$FamilyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    supportMeasures<T extends FamilyMember$supportMeasuresArgs<ExtArgs> = {}>(args?: Subset<T, FamilyMember$supportMeasuresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupportMeasurePayload<ExtArgs>, T, "findMany"> | Null>
    documents<T extends FamilyMember$documentsArgs<ExtArgs> = {}>(args?: Subset<T, FamilyMember$documentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FamilyMember model
   */ 
  interface FamilyMemberFieldRefs {
    readonly id: FieldRef<"FamilyMember", 'String'>
    readonly familyId: FieldRef<"FamilyMember", 'String'>
    readonly firstName: FieldRef<"FamilyMember", 'String'>
    readonly lastName: FieldRef<"FamilyMember", 'String'>
    readonly middleName: FieldRef<"FamilyMember", 'String'>
    readonly birthDate: FieldRef<"FamilyMember", 'DateTime'>
    readonly gender: FieldRef<"FamilyMember", 'String'>
    readonly relationship: FieldRef<"FamilyMember", 'String'>
    readonly documentType: FieldRef<"FamilyMember", 'String'>
    readonly documentNumber: FieldRef<"FamilyMember", 'String'>
    readonly documentIssueDate: FieldRef<"FamilyMember", 'DateTime'>
    readonly documentExpiryDate: FieldRef<"FamilyMember", 'DateTime'>
    readonly registrationAddress: FieldRef<"FamilyMember", 'String'>
    readonly education: FieldRef<"FamilyMember", 'String'>
    readonly grade: FieldRef<"FamilyMember", 'String'>
    readonly institution: FieldRef<"FamilyMember", 'String'>
    readonly course: FieldRef<"FamilyMember", 'String'>
    readonly funding: FieldRef<"FamilyMember", 'String'>
    readonly meals: FieldRef<"FamilyMember", 'String'>
    readonly notes: FieldRef<"FamilyMember", 'String'>
    readonly status: FieldRef<"FamilyMember", 'String'>
    readonly isActive: FieldRef<"FamilyMember", 'Boolean'>
    readonly citizenship: FieldRef<"FamilyMember", 'String'>
    readonly ethnicity: FieldRef<"FamilyMember", 'String'>
    readonly maritalStatus: FieldRef<"FamilyMember", 'String'>
    readonly phoneNumber: FieldRef<"FamilyMember", 'String'>
    readonly email: FieldRef<"FamilyMember", 'String'>
    readonly employment: FieldRef<"FamilyMember", 'String'>
    readonly healthStatus: FieldRef<"FamilyMember", 'String'>
    readonly disabilities: FieldRef<"FamilyMember", 'String'>
    readonly specialNeeds: FieldRef<"FamilyMember", 'Boolean'>
    readonly isHeadOfHousehold: FieldRef<"FamilyMember", 'Boolean'>
    readonly primaryCaregiver: FieldRef<"FamilyMember", 'Boolean'>
    readonly incomeAmount: FieldRef<"FamilyMember", 'Float'>
    readonly incomeSource: FieldRef<"FamilyMember", 'String'>
    readonly medicalInsurance: FieldRef<"FamilyMember", 'String'>
    readonly chronicConditions: FieldRef<"FamilyMember", 'String[]'>
    readonly allergies: FieldRef<"FamilyMember", 'String[]'>
    readonly medications: FieldRef<"FamilyMember", 'String[]'>
  }
    

  // Custom InputTypes
  /**
   * FamilyMember findUnique
   */
  export type FamilyMemberFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMember to fetch.
     */
    where: FamilyMemberWhereUniqueInput
  }

  /**
   * FamilyMember findUniqueOrThrow
   */
  export type FamilyMemberFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMember to fetch.
     */
    where: FamilyMemberWhereUniqueInput
  }

  /**
   * FamilyMember findFirst
   */
  export type FamilyMemberFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMember to fetch.
     */
    where?: FamilyMemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyMembers to fetch.
     */
    orderBy?: FamilyMemberOrderByWithRelationInput | FamilyMemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FamilyMembers.
     */
    cursor?: FamilyMemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyMembers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyMembers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FamilyMembers.
     */
    distinct?: FamilyMemberScalarFieldEnum | FamilyMemberScalarFieldEnum[]
  }

  /**
   * FamilyMember findFirstOrThrow
   */
  export type FamilyMemberFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMember to fetch.
     */
    where?: FamilyMemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyMembers to fetch.
     */
    orderBy?: FamilyMemberOrderByWithRelationInput | FamilyMemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FamilyMembers.
     */
    cursor?: FamilyMemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyMembers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyMembers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FamilyMembers.
     */
    distinct?: FamilyMemberScalarFieldEnum | FamilyMemberScalarFieldEnum[]
  }

  /**
   * FamilyMember findMany
   */
  export type FamilyMemberFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    /**
     * Filter, which FamilyMembers to fetch.
     */
    where?: FamilyMemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyMembers to fetch.
     */
    orderBy?: FamilyMemberOrderByWithRelationInput | FamilyMemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FamilyMembers.
     */
    cursor?: FamilyMemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyMembers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyMembers.
     */
    skip?: number
    distinct?: FamilyMemberScalarFieldEnum | FamilyMemberScalarFieldEnum[]
  }

  /**
   * FamilyMember create
   */
  export type FamilyMemberCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    /**
     * The data needed to create a FamilyMember.
     */
    data: XOR<FamilyMemberCreateInput, FamilyMemberUncheckedCreateInput>
  }

  /**
   * FamilyMember createMany
   */
  export type FamilyMemberCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FamilyMembers.
     */
    data: FamilyMemberCreateManyInput | FamilyMemberCreateManyInput[]
  }

  /**
   * FamilyMember update
   */
  export type FamilyMemberUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    /**
     * The data needed to update a FamilyMember.
     */
    data: XOR<FamilyMemberUpdateInput, FamilyMemberUncheckedUpdateInput>
    /**
     * Choose, which FamilyMember to update.
     */
    where: FamilyMemberWhereUniqueInput
  }

  /**
   * FamilyMember updateMany
   */
  export type FamilyMemberUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FamilyMembers.
     */
    data: XOR<FamilyMemberUpdateManyMutationInput, FamilyMemberUncheckedUpdateManyInput>
    /**
     * Filter which FamilyMembers to update
     */
    where?: FamilyMemberWhereInput
  }

  /**
   * FamilyMember upsert
   */
  export type FamilyMemberUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    /**
     * The filter to search for the FamilyMember to update in case it exists.
     */
    where: FamilyMemberWhereUniqueInput
    /**
     * In case the FamilyMember found by the `where` argument doesn't exist, create a new FamilyMember with this data.
     */
    create: XOR<FamilyMemberCreateInput, FamilyMemberUncheckedCreateInput>
    /**
     * In case the FamilyMember was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FamilyMemberUpdateInput, FamilyMemberUncheckedUpdateInput>
  }

  /**
   * FamilyMember delete
   */
  export type FamilyMemberDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    /**
     * Filter which FamilyMember to delete.
     */
    where: FamilyMemberWhereUniqueInput
  }

  /**
   * FamilyMember deleteMany
   */
  export type FamilyMemberDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FamilyMembers to delete
     */
    where?: FamilyMemberWhereInput
  }

  /**
   * FamilyMember findRaw
   */
  export type FamilyMemberFindRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The query predicate filter. If unspecified, then all documents in the collection will match the predicate. ${@link https://docs.mongodb.com/manual/reference/operator/query MongoDB Docs}.
     */
    filter?: InputJsonValue
    /**
     * Additional options to pass to the `find` command ${@link https://docs.mongodb.com/manual/reference/command/find/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * FamilyMember aggregateRaw
   */
  export type FamilyMemberAggregateRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * An array of aggregation stages to process and transform the document stream via the aggregation pipeline. ${@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline MongoDB Docs}.
     */
    pipeline?: InputJsonValue[]
    /**
     * Additional options to pass to the `aggregate` command ${@link https://docs.mongodb.com/manual/reference/command/aggregate/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * FamilyMember.supportMeasures
   */
  export type FamilyMember$supportMeasuresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportMeasure
     */
    select?: SupportMeasureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportMeasureInclude<ExtArgs> | null
    where?: SupportMeasureWhereInput
    orderBy?: SupportMeasureOrderByWithRelationInput | SupportMeasureOrderByWithRelationInput[]
    cursor?: SupportMeasureWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SupportMeasureScalarFieldEnum | SupportMeasureScalarFieldEnum[]
  }

  /**
   * FamilyMember.documents
   */
  export type FamilyMember$documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    where?: DocumentWhereInput
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    cursor?: DocumentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * FamilyMember without action
   */
  export type FamilyMemberDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyMemberInclude<ExtArgs> | null
  }


  /**
   * Model SupportMeasure
   */

  export type AggregateSupportMeasure = {
    _count: SupportMeasureCountAggregateOutputType | null
    _avg: SupportMeasureAvgAggregateOutputType | null
    _sum: SupportMeasureSumAggregateOutputType | null
    _min: SupportMeasureMinAggregateOutputType | null
    _max: SupportMeasureMaxAggregateOutputType | null
  }

  export type SupportMeasureAvgAggregateOutputType = {
    cost: number | null
  }

  export type SupportMeasureSumAggregateOutputType = {
    cost: number | null
  }

  export type SupportMeasureMinAggregateOutputType = {
    id: string | null
    familyId: string | null
    memberId: string | null
    type: string | null
    description: string | null
    category: string | null
    startDate: Date | null
    endDate: Date | null
    status: string | null
    provider: string | null
    result: string | null
    notes: string | null
    createdAt: Date | null
    priority: string | null
    cost: number | null
    fundingSource: string | null
    contactPerson: string | null
    contactPhone: string | null
    contactEmail: string | null
    frequency: string | null
    location: string | null
    followUpDate: Date | null
    evaluationDate: Date | null
    effectiveness: string | null
    createdById: string | null
  }

  export type SupportMeasureMaxAggregateOutputType = {
    id: string | null
    familyId: string | null
    memberId: string | null
    type: string | null
    description: string | null
    category: string | null
    startDate: Date | null
    endDate: Date | null
    status: string | null
    provider: string | null
    result: string | null
    notes: string | null
    createdAt: Date | null
    priority: string | null
    cost: number | null
    fundingSource: string | null
    contactPerson: string | null
    contactPhone: string | null
    contactEmail: string | null
    frequency: string | null
    location: string | null
    followUpDate: Date | null
    evaluationDate: Date | null
    effectiveness: string | null
    createdById: string | null
  }

  export type SupportMeasureCountAggregateOutputType = {
    id: number
    familyId: number
    memberId: number
    type: number
    description: number
    category: number
    startDate: number
    endDate: number
    status: number
    provider: number
    result: number
    notes: number
    createdAt: number
    priority: number
    cost: number
    fundingSource: number
    contactPerson: number
    contactPhone: number
    contactEmail: number
    frequency: number
    location: number
    followUpDate: number
    evaluationDate: number
    effectiveness: number
    createdById: number
    _all: number
  }


  export type SupportMeasureAvgAggregateInputType = {
    cost?: true
  }

  export type SupportMeasureSumAggregateInputType = {
    cost?: true
  }

  export type SupportMeasureMinAggregateInputType = {
    id?: true
    familyId?: true
    memberId?: true
    type?: true
    description?: true
    category?: true
    startDate?: true
    endDate?: true
    status?: true
    provider?: true
    result?: true
    notes?: true
    createdAt?: true
    priority?: true
    cost?: true
    fundingSource?: true
    contactPerson?: true
    contactPhone?: true
    contactEmail?: true
    frequency?: true
    location?: true
    followUpDate?: true
    evaluationDate?: true
    effectiveness?: true
    createdById?: true
  }

  export type SupportMeasureMaxAggregateInputType = {
    id?: true
    familyId?: true
    memberId?: true
    type?: true
    description?: true
    category?: true
    startDate?: true
    endDate?: true
    status?: true
    provider?: true
    result?: true
    notes?: true
    createdAt?: true
    priority?: true
    cost?: true
    fundingSource?: true
    contactPerson?: true
    contactPhone?: true
    contactEmail?: true
    frequency?: true
    location?: true
    followUpDate?: true
    evaluationDate?: true
    effectiveness?: true
    createdById?: true
  }

  export type SupportMeasureCountAggregateInputType = {
    id?: true
    familyId?: true
    memberId?: true
    type?: true
    description?: true
    category?: true
    startDate?: true
    endDate?: true
    status?: true
    provider?: true
    result?: true
    notes?: true
    createdAt?: true
    priority?: true
    cost?: true
    fundingSource?: true
    contactPerson?: true
    contactPhone?: true
    contactEmail?: true
    frequency?: true
    location?: true
    followUpDate?: true
    evaluationDate?: true
    effectiveness?: true
    createdById?: true
    _all?: true
  }

  export type SupportMeasureAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupportMeasure to aggregate.
     */
    where?: SupportMeasureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupportMeasures to fetch.
     */
    orderBy?: SupportMeasureOrderByWithRelationInput | SupportMeasureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SupportMeasureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupportMeasures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupportMeasures.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SupportMeasures
    **/
    _count?: true | SupportMeasureCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SupportMeasureAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SupportMeasureSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SupportMeasureMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SupportMeasureMaxAggregateInputType
  }

  export type GetSupportMeasureAggregateType<T extends SupportMeasureAggregateArgs> = {
        [P in keyof T & keyof AggregateSupportMeasure]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSupportMeasure[P]>
      : GetScalarType<T[P], AggregateSupportMeasure[P]>
  }




  export type SupportMeasureGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SupportMeasureWhereInput
    orderBy?: SupportMeasureOrderByWithAggregationInput | SupportMeasureOrderByWithAggregationInput[]
    by: SupportMeasureScalarFieldEnum[] | SupportMeasureScalarFieldEnum
    having?: SupportMeasureScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SupportMeasureCountAggregateInputType | true
    _avg?: SupportMeasureAvgAggregateInputType
    _sum?: SupportMeasureSumAggregateInputType
    _min?: SupportMeasureMinAggregateInputType
    _max?: SupportMeasureMaxAggregateInputType
  }

  export type SupportMeasureGroupByOutputType = {
    id: string
    familyId: string
    memberId: string | null
    type: string
    description: string
    category: string | null
    startDate: Date
    endDate: Date | null
    status: string
    provider: string | null
    result: string | null
    notes: string | null
    createdAt: Date
    priority: string | null
    cost: number | null
    fundingSource: string | null
    contactPerson: string | null
    contactPhone: string | null
    contactEmail: string | null
    frequency: string | null
    location: string | null
    followUpDate: Date | null
    evaluationDate: Date | null
    effectiveness: string | null
    createdById: string
    _count: SupportMeasureCountAggregateOutputType | null
    _avg: SupportMeasureAvgAggregateOutputType | null
    _sum: SupportMeasureSumAggregateOutputType | null
    _min: SupportMeasureMinAggregateOutputType | null
    _max: SupportMeasureMaxAggregateOutputType | null
  }

  type GetSupportMeasureGroupByPayload<T extends SupportMeasureGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SupportMeasureGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SupportMeasureGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SupportMeasureGroupByOutputType[P]>
            : GetScalarType<T[P], SupportMeasureGroupByOutputType[P]>
        }
      >
    >


  export type SupportMeasureSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    familyId?: boolean
    memberId?: boolean
    type?: boolean
    description?: boolean
    category?: boolean
    startDate?: boolean
    endDate?: boolean
    status?: boolean
    provider?: boolean
    result?: boolean
    notes?: boolean
    createdAt?: boolean
    priority?: boolean
    cost?: boolean
    fundingSource?: boolean
    contactPerson?: boolean
    contactPhone?: boolean
    contactEmail?: boolean
    frequency?: boolean
    location?: boolean
    followUpDate?: boolean
    evaluationDate?: boolean
    effectiveness?: boolean
    createdById?: boolean
    family?: boolean | FamilyDefaultArgs<ExtArgs>
    member?: boolean | SupportMeasure$memberArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    documents?: boolean | SupportMeasure$documentsArgs<ExtArgs>
    _count?: boolean | SupportMeasureCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["supportMeasure"]>


  export type SupportMeasureSelectScalar = {
    id?: boolean
    familyId?: boolean
    memberId?: boolean
    type?: boolean
    description?: boolean
    category?: boolean
    startDate?: boolean
    endDate?: boolean
    status?: boolean
    provider?: boolean
    result?: boolean
    notes?: boolean
    createdAt?: boolean
    priority?: boolean
    cost?: boolean
    fundingSource?: boolean
    contactPerson?: boolean
    contactPhone?: boolean
    contactEmail?: boolean
    frequency?: boolean
    location?: boolean
    followUpDate?: boolean
    evaluationDate?: boolean
    effectiveness?: boolean
    createdById?: boolean
  }

  export type SupportMeasureInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    family?: boolean | FamilyDefaultArgs<ExtArgs>
    member?: boolean | SupportMeasure$memberArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    documents?: boolean | SupportMeasure$documentsArgs<ExtArgs>
    _count?: boolean | SupportMeasureCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $SupportMeasurePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SupportMeasure"
    objects: {
      family: Prisma.$FamilyPayload<ExtArgs>
      member: Prisma.$FamilyMemberPayload<ExtArgs> | null
      createdBy: Prisma.$UserPayload<ExtArgs>
      documents: Prisma.$DocumentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      familyId: string
      memberId: string | null
      type: string
      description: string
      category: string | null
      startDate: Date
      endDate: Date | null
      status: string
      provider: string | null
      result: string | null
      notes: string | null
      createdAt: Date
      priority: string | null
      cost: number | null
      fundingSource: string | null
      contactPerson: string | null
      contactPhone: string | null
      contactEmail: string | null
      frequency: string | null
      location: string | null
      followUpDate: Date | null
      evaluationDate: Date | null
      effectiveness: string | null
      createdById: string
    }, ExtArgs["result"]["supportMeasure"]>
    composites: {}
  }

  type SupportMeasureGetPayload<S extends boolean | null | undefined | SupportMeasureDefaultArgs> = $Result.GetResult<Prisma.$SupportMeasurePayload, S>

  type SupportMeasureCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SupportMeasureFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SupportMeasureCountAggregateInputType | true
    }

  export interface SupportMeasureDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SupportMeasure'], meta: { name: 'SupportMeasure' } }
    /**
     * Find zero or one SupportMeasure that matches the filter.
     * @param {SupportMeasureFindUniqueArgs} args - Arguments to find a SupportMeasure
     * @example
     * // Get one SupportMeasure
     * const supportMeasure = await prisma.supportMeasure.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SupportMeasureFindUniqueArgs>(args: SelectSubset<T, SupportMeasureFindUniqueArgs<ExtArgs>>): Prisma__SupportMeasureClient<$Result.GetResult<Prisma.$SupportMeasurePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SupportMeasure that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SupportMeasureFindUniqueOrThrowArgs} args - Arguments to find a SupportMeasure
     * @example
     * // Get one SupportMeasure
     * const supportMeasure = await prisma.supportMeasure.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SupportMeasureFindUniqueOrThrowArgs>(args: SelectSubset<T, SupportMeasureFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SupportMeasureClient<$Result.GetResult<Prisma.$SupportMeasurePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SupportMeasure that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportMeasureFindFirstArgs} args - Arguments to find a SupportMeasure
     * @example
     * // Get one SupportMeasure
     * const supportMeasure = await prisma.supportMeasure.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SupportMeasureFindFirstArgs>(args?: SelectSubset<T, SupportMeasureFindFirstArgs<ExtArgs>>): Prisma__SupportMeasureClient<$Result.GetResult<Prisma.$SupportMeasurePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SupportMeasure that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportMeasureFindFirstOrThrowArgs} args - Arguments to find a SupportMeasure
     * @example
     * // Get one SupportMeasure
     * const supportMeasure = await prisma.supportMeasure.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SupportMeasureFindFirstOrThrowArgs>(args?: SelectSubset<T, SupportMeasureFindFirstOrThrowArgs<ExtArgs>>): Prisma__SupportMeasureClient<$Result.GetResult<Prisma.$SupportMeasurePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SupportMeasures that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportMeasureFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SupportMeasures
     * const supportMeasures = await prisma.supportMeasure.findMany()
     * 
     * // Get first 10 SupportMeasures
     * const supportMeasures = await prisma.supportMeasure.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const supportMeasureWithIdOnly = await prisma.supportMeasure.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SupportMeasureFindManyArgs>(args?: SelectSubset<T, SupportMeasureFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SupportMeasurePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SupportMeasure.
     * @param {SupportMeasureCreateArgs} args - Arguments to create a SupportMeasure.
     * @example
     * // Create one SupportMeasure
     * const SupportMeasure = await prisma.supportMeasure.create({
     *   data: {
     *     // ... data to create a SupportMeasure
     *   }
     * })
     * 
     */
    create<T extends SupportMeasureCreateArgs>(args: SelectSubset<T, SupportMeasureCreateArgs<ExtArgs>>): Prisma__SupportMeasureClient<$Result.GetResult<Prisma.$SupportMeasurePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SupportMeasures.
     * @param {SupportMeasureCreateManyArgs} args - Arguments to create many SupportMeasures.
     * @example
     * // Create many SupportMeasures
     * const supportMeasure = await prisma.supportMeasure.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SupportMeasureCreateManyArgs>(args?: SelectSubset<T, SupportMeasureCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SupportMeasure.
     * @param {SupportMeasureDeleteArgs} args - Arguments to delete one SupportMeasure.
     * @example
     * // Delete one SupportMeasure
     * const SupportMeasure = await prisma.supportMeasure.delete({
     *   where: {
     *     // ... filter to delete one SupportMeasure
     *   }
     * })
     * 
     */
    delete<T extends SupportMeasureDeleteArgs>(args: SelectSubset<T, SupportMeasureDeleteArgs<ExtArgs>>): Prisma__SupportMeasureClient<$Result.GetResult<Prisma.$SupportMeasurePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SupportMeasure.
     * @param {SupportMeasureUpdateArgs} args - Arguments to update one SupportMeasure.
     * @example
     * // Update one SupportMeasure
     * const supportMeasure = await prisma.supportMeasure.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SupportMeasureUpdateArgs>(args: SelectSubset<T, SupportMeasureUpdateArgs<ExtArgs>>): Prisma__SupportMeasureClient<$Result.GetResult<Prisma.$SupportMeasurePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SupportMeasures.
     * @param {SupportMeasureDeleteManyArgs} args - Arguments to filter SupportMeasures to delete.
     * @example
     * // Delete a few SupportMeasures
     * const { count } = await prisma.supportMeasure.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SupportMeasureDeleteManyArgs>(args?: SelectSubset<T, SupportMeasureDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SupportMeasures.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportMeasureUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SupportMeasures
     * const supportMeasure = await prisma.supportMeasure.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SupportMeasureUpdateManyArgs>(args: SelectSubset<T, SupportMeasureUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SupportMeasure.
     * @param {SupportMeasureUpsertArgs} args - Arguments to update or create a SupportMeasure.
     * @example
     * // Update or create a SupportMeasure
     * const supportMeasure = await prisma.supportMeasure.upsert({
     *   create: {
     *     // ... data to create a SupportMeasure
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SupportMeasure we want to update
     *   }
     * })
     */
    upsert<T extends SupportMeasureUpsertArgs>(args: SelectSubset<T, SupportMeasureUpsertArgs<ExtArgs>>): Prisma__SupportMeasureClient<$Result.GetResult<Prisma.$SupportMeasurePayload<ExtArgs>, T, "upsert">, never, ExtArgs>

    /**
     * Find zero or more SupportMeasures that matches the filter.
     * @param {SupportMeasureFindRawArgs} args - Select which filters you would like to apply.
     * @example
     * const supportMeasure = await prisma.supportMeasure.findRaw({
     *   filter: { age: { $gt: 25 } } 
     * })
     */
    findRaw(args?: SupportMeasureFindRawArgs): Prisma.PrismaPromise<JsonObject>

    /**
     * Perform aggregation operations on a SupportMeasure.
     * @param {SupportMeasureAggregateRawArgs} args - Select which aggregations you would like to apply.
     * @example
     * const supportMeasure = await prisma.supportMeasure.aggregateRaw({
     *   pipeline: [
     *     { $match: { status: "registered" } },
     *     { $group: { _id: "$country", total: { $sum: 1 } } }
     *   ]
     * })
     */
    aggregateRaw(args?: SupportMeasureAggregateRawArgs): Prisma.PrismaPromise<JsonObject>


    /**
     * Count the number of SupportMeasures.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportMeasureCountArgs} args - Arguments to filter SupportMeasures to count.
     * @example
     * // Count the number of SupportMeasures
     * const count = await prisma.supportMeasure.count({
     *   where: {
     *     // ... the filter for the SupportMeasures we want to count
     *   }
     * })
    **/
    count<T extends SupportMeasureCountArgs>(
      args?: Subset<T, SupportMeasureCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SupportMeasureCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SupportMeasure.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportMeasureAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SupportMeasureAggregateArgs>(args: Subset<T, SupportMeasureAggregateArgs>): Prisma.PrismaPromise<GetSupportMeasureAggregateType<T>>

    /**
     * Group by SupportMeasure.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SupportMeasureGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SupportMeasureGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SupportMeasureGroupByArgs['orderBy'] }
        : { orderBy?: SupportMeasureGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SupportMeasureGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSupportMeasureGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SupportMeasure model
   */
  readonly fields: SupportMeasureFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SupportMeasure.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SupportMeasureClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    family<T extends FamilyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FamilyDefaultArgs<ExtArgs>>): Prisma__FamilyClient<$Result.GetResult<Prisma.$FamilyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    member<T extends SupportMeasure$memberArgs<ExtArgs> = {}>(args?: Subset<T, SupportMeasure$memberArgs<ExtArgs>>): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    createdBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    documents<T extends SupportMeasure$documentsArgs<ExtArgs> = {}>(args?: Subset<T, SupportMeasure$documentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SupportMeasure model
   */ 
  interface SupportMeasureFieldRefs {
    readonly id: FieldRef<"SupportMeasure", 'String'>
    readonly familyId: FieldRef<"SupportMeasure", 'String'>
    readonly memberId: FieldRef<"SupportMeasure", 'String'>
    readonly type: FieldRef<"SupportMeasure", 'String'>
    readonly description: FieldRef<"SupportMeasure", 'String'>
    readonly category: FieldRef<"SupportMeasure", 'String'>
    readonly startDate: FieldRef<"SupportMeasure", 'DateTime'>
    readonly endDate: FieldRef<"SupportMeasure", 'DateTime'>
    readonly status: FieldRef<"SupportMeasure", 'String'>
    readonly provider: FieldRef<"SupportMeasure", 'String'>
    readonly result: FieldRef<"SupportMeasure", 'String'>
    readonly notes: FieldRef<"SupportMeasure", 'String'>
    readonly createdAt: FieldRef<"SupportMeasure", 'DateTime'>
    readonly priority: FieldRef<"SupportMeasure", 'String'>
    readonly cost: FieldRef<"SupportMeasure", 'Float'>
    readonly fundingSource: FieldRef<"SupportMeasure", 'String'>
    readonly contactPerson: FieldRef<"SupportMeasure", 'String'>
    readonly contactPhone: FieldRef<"SupportMeasure", 'String'>
    readonly contactEmail: FieldRef<"SupportMeasure", 'String'>
    readonly frequency: FieldRef<"SupportMeasure", 'String'>
    readonly location: FieldRef<"SupportMeasure", 'String'>
    readonly followUpDate: FieldRef<"SupportMeasure", 'DateTime'>
    readonly evaluationDate: FieldRef<"SupportMeasure", 'DateTime'>
    readonly effectiveness: FieldRef<"SupportMeasure", 'String'>
    readonly createdById: FieldRef<"SupportMeasure", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SupportMeasure findUnique
   */
  export type SupportMeasureFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportMeasure
     */
    select?: SupportMeasureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportMeasureInclude<ExtArgs> | null
    /**
     * Filter, which SupportMeasure to fetch.
     */
    where: SupportMeasureWhereUniqueInput
  }

  /**
   * SupportMeasure findUniqueOrThrow
   */
  export type SupportMeasureFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportMeasure
     */
    select?: SupportMeasureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportMeasureInclude<ExtArgs> | null
    /**
     * Filter, which SupportMeasure to fetch.
     */
    where: SupportMeasureWhereUniqueInput
  }

  /**
   * SupportMeasure findFirst
   */
  export type SupportMeasureFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportMeasure
     */
    select?: SupportMeasureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportMeasureInclude<ExtArgs> | null
    /**
     * Filter, which SupportMeasure to fetch.
     */
    where?: SupportMeasureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupportMeasures to fetch.
     */
    orderBy?: SupportMeasureOrderByWithRelationInput | SupportMeasureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupportMeasures.
     */
    cursor?: SupportMeasureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupportMeasures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupportMeasures.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupportMeasures.
     */
    distinct?: SupportMeasureScalarFieldEnum | SupportMeasureScalarFieldEnum[]
  }

  /**
   * SupportMeasure findFirstOrThrow
   */
  export type SupportMeasureFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportMeasure
     */
    select?: SupportMeasureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportMeasureInclude<ExtArgs> | null
    /**
     * Filter, which SupportMeasure to fetch.
     */
    where?: SupportMeasureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupportMeasures to fetch.
     */
    orderBy?: SupportMeasureOrderByWithRelationInput | SupportMeasureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SupportMeasures.
     */
    cursor?: SupportMeasureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupportMeasures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupportMeasures.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SupportMeasures.
     */
    distinct?: SupportMeasureScalarFieldEnum | SupportMeasureScalarFieldEnum[]
  }

  /**
   * SupportMeasure findMany
   */
  export type SupportMeasureFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportMeasure
     */
    select?: SupportMeasureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportMeasureInclude<ExtArgs> | null
    /**
     * Filter, which SupportMeasures to fetch.
     */
    where?: SupportMeasureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SupportMeasures to fetch.
     */
    orderBy?: SupportMeasureOrderByWithRelationInput | SupportMeasureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SupportMeasures.
     */
    cursor?: SupportMeasureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SupportMeasures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SupportMeasures.
     */
    skip?: number
    distinct?: SupportMeasureScalarFieldEnum | SupportMeasureScalarFieldEnum[]
  }

  /**
   * SupportMeasure create
   */
  export type SupportMeasureCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportMeasure
     */
    select?: SupportMeasureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportMeasureInclude<ExtArgs> | null
    /**
     * The data needed to create a SupportMeasure.
     */
    data: XOR<SupportMeasureCreateInput, SupportMeasureUncheckedCreateInput>
  }

  /**
   * SupportMeasure createMany
   */
  export type SupportMeasureCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SupportMeasures.
     */
    data: SupportMeasureCreateManyInput | SupportMeasureCreateManyInput[]
  }

  /**
   * SupportMeasure update
   */
  export type SupportMeasureUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportMeasure
     */
    select?: SupportMeasureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportMeasureInclude<ExtArgs> | null
    /**
     * The data needed to update a SupportMeasure.
     */
    data: XOR<SupportMeasureUpdateInput, SupportMeasureUncheckedUpdateInput>
    /**
     * Choose, which SupportMeasure to update.
     */
    where: SupportMeasureWhereUniqueInput
  }

  /**
   * SupportMeasure updateMany
   */
  export type SupportMeasureUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SupportMeasures.
     */
    data: XOR<SupportMeasureUpdateManyMutationInput, SupportMeasureUncheckedUpdateManyInput>
    /**
     * Filter which SupportMeasures to update
     */
    where?: SupportMeasureWhereInput
  }

  /**
   * SupportMeasure upsert
   */
  export type SupportMeasureUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportMeasure
     */
    select?: SupportMeasureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportMeasureInclude<ExtArgs> | null
    /**
     * The filter to search for the SupportMeasure to update in case it exists.
     */
    where: SupportMeasureWhereUniqueInput
    /**
     * In case the SupportMeasure found by the `where` argument doesn't exist, create a new SupportMeasure with this data.
     */
    create: XOR<SupportMeasureCreateInput, SupportMeasureUncheckedCreateInput>
    /**
     * In case the SupportMeasure was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SupportMeasureUpdateInput, SupportMeasureUncheckedUpdateInput>
  }

  /**
   * SupportMeasure delete
   */
  export type SupportMeasureDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportMeasure
     */
    select?: SupportMeasureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportMeasureInclude<ExtArgs> | null
    /**
     * Filter which SupportMeasure to delete.
     */
    where: SupportMeasureWhereUniqueInput
  }

  /**
   * SupportMeasure deleteMany
   */
  export type SupportMeasureDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SupportMeasures to delete
     */
    where?: SupportMeasureWhereInput
  }

  /**
   * SupportMeasure findRaw
   */
  export type SupportMeasureFindRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The query predicate filter. If unspecified, then all documents in the collection will match the predicate. ${@link https://docs.mongodb.com/manual/reference/operator/query MongoDB Docs}.
     */
    filter?: InputJsonValue
    /**
     * Additional options to pass to the `find` command ${@link https://docs.mongodb.com/manual/reference/command/find/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * SupportMeasure aggregateRaw
   */
  export type SupportMeasureAggregateRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * An array of aggregation stages to process and transform the document stream via the aggregation pipeline. ${@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline MongoDB Docs}.
     */
    pipeline?: InputJsonValue[]
    /**
     * Additional options to pass to the `aggregate` command ${@link https://docs.mongodb.com/manual/reference/command/aggregate/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * SupportMeasure.member
   */
  export type SupportMeasure$memberArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    where?: FamilyMemberWhereInput
  }

  /**
   * SupportMeasure.documents
   */
  export type SupportMeasure$documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    where?: DocumentWhereInput
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    cursor?: DocumentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * SupportMeasure without action
   */
  export type SupportMeasureDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportMeasure
     */
    select?: SupportMeasureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportMeasureInclude<ExtArgs> | null
  }


  /**
   * Model Document
   */

  export type AggregateDocument = {
    _count: DocumentCountAggregateOutputType | null
    _avg: DocumentAvgAggregateOutputType | null
    _sum: DocumentSumAggregateOutputType | null
    _min: DocumentMinAggregateOutputType | null
    _max: DocumentMaxAggregateOutputType | null
  }

  export type DocumentAvgAggregateOutputType = {
    fileSize: number | null
  }

  export type DocumentSumAggregateOutputType = {
    fileSize: number | null
  }

  export type DocumentMinAggregateOutputType = {
    id: string | null
    title: string | null
    type: string | null
    fileUrl: string | null
    mimeType: string | null
    fileSize: number | null
    familyId: string | null
    memberId: string | null
    supportId: string | null
    uploadDate: Date | null
    notes: string | null
    category: string | null
    expirationDate: Date | null
    isConfidential: boolean | null
    status: string | null
    uploadedById: string | null
  }

  export type DocumentMaxAggregateOutputType = {
    id: string | null
    title: string | null
    type: string | null
    fileUrl: string | null
    mimeType: string | null
    fileSize: number | null
    familyId: string | null
    memberId: string | null
    supportId: string | null
    uploadDate: Date | null
    notes: string | null
    category: string | null
    expirationDate: Date | null
    isConfidential: boolean | null
    status: string | null
    uploadedById: string | null
  }

  export type DocumentCountAggregateOutputType = {
    id: number
    title: number
    type: number
    fileUrl: number
    mimeType: number
    fileSize: number
    familyId: number
    memberId: number
    supportId: number
    uploadDate: number
    notes: number
    category: number
    expirationDate: number
    isConfidential: number
    tags: number
    status: number
    uploadedById: number
    _all: number
  }


  export type DocumentAvgAggregateInputType = {
    fileSize?: true
  }

  export type DocumentSumAggregateInputType = {
    fileSize?: true
  }

  export type DocumentMinAggregateInputType = {
    id?: true
    title?: true
    type?: true
    fileUrl?: true
    mimeType?: true
    fileSize?: true
    familyId?: true
    memberId?: true
    supportId?: true
    uploadDate?: true
    notes?: true
    category?: true
    expirationDate?: true
    isConfidential?: true
    status?: true
    uploadedById?: true
  }

  export type DocumentMaxAggregateInputType = {
    id?: true
    title?: true
    type?: true
    fileUrl?: true
    mimeType?: true
    fileSize?: true
    familyId?: true
    memberId?: true
    supportId?: true
    uploadDate?: true
    notes?: true
    category?: true
    expirationDate?: true
    isConfidential?: true
    status?: true
    uploadedById?: true
  }

  export type DocumentCountAggregateInputType = {
    id?: true
    title?: true
    type?: true
    fileUrl?: true
    mimeType?: true
    fileSize?: true
    familyId?: true
    memberId?: true
    supportId?: true
    uploadDate?: true
    notes?: true
    category?: true
    expirationDate?: true
    isConfidential?: true
    tags?: true
    status?: true
    uploadedById?: true
    _all?: true
  }

  export type DocumentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Document to aggregate.
     */
    where?: DocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Documents to fetch.
     */
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Documents
    **/
    _count?: true | DocumentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DocumentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DocumentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DocumentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DocumentMaxAggregateInputType
  }

  export type GetDocumentAggregateType<T extends DocumentAggregateArgs> = {
        [P in keyof T & keyof AggregateDocument]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDocument[P]>
      : GetScalarType<T[P], AggregateDocument[P]>
  }




  export type DocumentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocumentWhereInput
    orderBy?: DocumentOrderByWithAggregationInput | DocumentOrderByWithAggregationInput[]
    by: DocumentScalarFieldEnum[] | DocumentScalarFieldEnum
    having?: DocumentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DocumentCountAggregateInputType | true
    _avg?: DocumentAvgAggregateInputType
    _sum?: DocumentSumAggregateInputType
    _min?: DocumentMinAggregateInputType
    _max?: DocumentMaxAggregateInputType
  }

  export type DocumentGroupByOutputType = {
    id: string
    title: string
    type: string
    fileUrl: string
    mimeType: string
    fileSize: number
    familyId: string | null
    memberId: string | null
    supportId: string | null
    uploadDate: Date
    notes: string | null
    category: string | null
    expirationDate: Date | null
    isConfidential: boolean
    tags: string[]
    status: string | null
    uploadedById: string
    _count: DocumentCountAggregateOutputType | null
    _avg: DocumentAvgAggregateOutputType | null
    _sum: DocumentSumAggregateOutputType | null
    _min: DocumentMinAggregateOutputType | null
    _max: DocumentMaxAggregateOutputType | null
  }

  type GetDocumentGroupByPayload<T extends DocumentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DocumentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DocumentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DocumentGroupByOutputType[P]>
            : GetScalarType<T[P], DocumentGroupByOutputType[P]>
        }
      >
    >


  export type DocumentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    type?: boolean
    fileUrl?: boolean
    mimeType?: boolean
    fileSize?: boolean
    familyId?: boolean
    memberId?: boolean
    supportId?: boolean
    uploadDate?: boolean
    notes?: boolean
    category?: boolean
    expirationDate?: boolean
    isConfidential?: boolean
    tags?: boolean
    status?: boolean
    uploadedById?: boolean
    family?: boolean | Document$familyArgs<ExtArgs>
    member?: boolean | Document$memberArgs<ExtArgs>
    supportMeasure?: boolean | Document$supportMeasureArgs<ExtArgs>
    uploadedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["document"]>


  export type DocumentSelectScalar = {
    id?: boolean
    title?: boolean
    type?: boolean
    fileUrl?: boolean
    mimeType?: boolean
    fileSize?: boolean
    familyId?: boolean
    memberId?: boolean
    supportId?: boolean
    uploadDate?: boolean
    notes?: boolean
    category?: boolean
    expirationDate?: boolean
    isConfidential?: boolean
    tags?: boolean
    status?: boolean
    uploadedById?: boolean
  }

  export type DocumentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    family?: boolean | Document$familyArgs<ExtArgs>
    member?: boolean | Document$memberArgs<ExtArgs>
    supportMeasure?: boolean | Document$supportMeasureArgs<ExtArgs>
    uploadedBy?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $DocumentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Document"
    objects: {
      family: Prisma.$FamilyPayload<ExtArgs> | null
      member: Prisma.$FamilyMemberPayload<ExtArgs> | null
      supportMeasure: Prisma.$SupportMeasurePayload<ExtArgs> | null
      uploadedBy: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      type: string
      fileUrl: string
      mimeType: string
      fileSize: number
      familyId: string | null
      memberId: string | null
      supportId: string | null
      uploadDate: Date
      notes: string | null
      category: string | null
      expirationDate: Date | null
      isConfidential: boolean
      tags: string[]
      status: string | null
      uploadedById: string
    }, ExtArgs["result"]["document"]>
    composites: {}
  }

  type DocumentGetPayload<S extends boolean | null | undefined | DocumentDefaultArgs> = $Result.GetResult<Prisma.$DocumentPayload, S>

  type DocumentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DocumentFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DocumentCountAggregateInputType | true
    }

  export interface DocumentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Document'], meta: { name: 'Document' } }
    /**
     * Find zero or one Document that matches the filter.
     * @param {DocumentFindUniqueArgs} args - Arguments to find a Document
     * @example
     * // Get one Document
     * const document = await prisma.document.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DocumentFindUniqueArgs>(args: SelectSubset<T, DocumentFindUniqueArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Document that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DocumentFindUniqueOrThrowArgs} args - Arguments to find a Document
     * @example
     * // Get one Document
     * const document = await prisma.document.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DocumentFindUniqueOrThrowArgs>(args: SelectSubset<T, DocumentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Document that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentFindFirstArgs} args - Arguments to find a Document
     * @example
     * // Get one Document
     * const document = await prisma.document.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DocumentFindFirstArgs>(args?: SelectSubset<T, DocumentFindFirstArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Document that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentFindFirstOrThrowArgs} args - Arguments to find a Document
     * @example
     * // Get one Document
     * const document = await prisma.document.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DocumentFindFirstOrThrowArgs>(args?: SelectSubset<T, DocumentFindFirstOrThrowArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Documents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Documents
     * const documents = await prisma.document.findMany()
     * 
     * // Get first 10 Documents
     * const documents = await prisma.document.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const documentWithIdOnly = await prisma.document.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DocumentFindManyArgs>(args?: SelectSubset<T, DocumentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Document.
     * @param {DocumentCreateArgs} args - Arguments to create a Document.
     * @example
     * // Create one Document
     * const Document = await prisma.document.create({
     *   data: {
     *     // ... data to create a Document
     *   }
     * })
     * 
     */
    create<T extends DocumentCreateArgs>(args: SelectSubset<T, DocumentCreateArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Documents.
     * @param {DocumentCreateManyArgs} args - Arguments to create many Documents.
     * @example
     * // Create many Documents
     * const document = await prisma.document.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DocumentCreateManyArgs>(args?: SelectSubset<T, DocumentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Document.
     * @param {DocumentDeleteArgs} args - Arguments to delete one Document.
     * @example
     * // Delete one Document
     * const Document = await prisma.document.delete({
     *   where: {
     *     // ... filter to delete one Document
     *   }
     * })
     * 
     */
    delete<T extends DocumentDeleteArgs>(args: SelectSubset<T, DocumentDeleteArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Document.
     * @param {DocumentUpdateArgs} args - Arguments to update one Document.
     * @example
     * // Update one Document
     * const document = await prisma.document.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DocumentUpdateArgs>(args: SelectSubset<T, DocumentUpdateArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Documents.
     * @param {DocumentDeleteManyArgs} args - Arguments to filter Documents to delete.
     * @example
     * // Delete a few Documents
     * const { count } = await prisma.document.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DocumentDeleteManyArgs>(args?: SelectSubset<T, DocumentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Documents
     * const document = await prisma.document.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DocumentUpdateManyArgs>(args: SelectSubset<T, DocumentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Document.
     * @param {DocumentUpsertArgs} args - Arguments to update or create a Document.
     * @example
     * // Update or create a Document
     * const document = await prisma.document.upsert({
     *   create: {
     *     // ... data to create a Document
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Document we want to update
     *   }
     * })
     */
    upsert<T extends DocumentUpsertArgs>(args: SelectSubset<T, DocumentUpsertArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "upsert">, never, ExtArgs>

    /**
     * Find zero or more Documents that matches the filter.
     * @param {DocumentFindRawArgs} args - Select which filters you would like to apply.
     * @example
     * const document = await prisma.document.findRaw({
     *   filter: { age: { $gt: 25 } } 
     * })
     */
    findRaw(args?: DocumentFindRawArgs): Prisma.PrismaPromise<JsonObject>

    /**
     * Perform aggregation operations on a Document.
     * @param {DocumentAggregateRawArgs} args - Select which aggregations you would like to apply.
     * @example
     * const document = await prisma.document.aggregateRaw({
     *   pipeline: [
     *     { $match: { status: "registered" } },
     *     { $group: { _id: "$country", total: { $sum: 1 } } }
     *   ]
     * })
     */
    aggregateRaw(args?: DocumentAggregateRawArgs): Prisma.PrismaPromise<JsonObject>


    /**
     * Count the number of Documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentCountArgs} args - Arguments to filter Documents to count.
     * @example
     * // Count the number of Documents
     * const count = await prisma.document.count({
     *   where: {
     *     // ... the filter for the Documents we want to count
     *   }
     * })
    **/
    count<T extends DocumentCountArgs>(
      args?: Subset<T, DocumentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DocumentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Document.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DocumentAggregateArgs>(args: Subset<T, DocumentAggregateArgs>): Prisma.PrismaPromise<GetDocumentAggregateType<T>>

    /**
     * Group by Document.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DocumentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DocumentGroupByArgs['orderBy'] }
        : { orderBy?: DocumentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DocumentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDocumentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Document model
   */
  readonly fields: DocumentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Document.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DocumentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    family<T extends Document$familyArgs<ExtArgs> = {}>(args?: Subset<T, Document$familyArgs<ExtArgs>>): Prisma__FamilyClient<$Result.GetResult<Prisma.$FamilyPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    member<T extends Document$memberArgs<ExtArgs> = {}>(args?: Subset<T, Document$memberArgs<ExtArgs>>): Prisma__FamilyMemberClient<$Result.GetResult<Prisma.$FamilyMemberPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    supportMeasure<T extends Document$supportMeasureArgs<ExtArgs> = {}>(args?: Subset<T, Document$supportMeasureArgs<ExtArgs>>): Prisma__SupportMeasureClient<$Result.GetResult<Prisma.$SupportMeasurePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    uploadedBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Document model
   */ 
  interface DocumentFieldRefs {
    readonly id: FieldRef<"Document", 'String'>
    readonly title: FieldRef<"Document", 'String'>
    readonly type: FieldRef<"Document", 'String'>
    readonly fileUrl: FieldRef<"Document", 'String'>
    readonly mimeType: FieldRef<"Document", 'String'>
    readonly fileSize: FieldRef<"Document", 'Int'>
    readonly familyId: FieldRef<"Document", 'String'>
    readonly memberId: FieldRef<"Document", 'String'>
    readonly supportId: FieldRef<"Document", 'String'>
    readonly uploadDate: FieldRef<"Document", 'DateTime'>
    readonly notes: FieldRef<"Document", 'String'>
    readonly category: FieldRef<"Document", 'String'>
    readonly expirationDate: FieldRef<"Document", 'DateTime'>
    readonly isConfidential: FieldRef<"Document", 'Boolean'>
    readonly tags: FieldRef<"Document", 'String[]'>
    readonly status: FieldRef<"Document", 'String'>
    readonly uploadedById: FieldRef<"Document", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Document findUnique
   */
  export type DocumentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * Filter, which Document to fetch.
     */
    where: DocumentWhereUniqueInput
  }

  /**
   * Document findUniqueOrThrow
   */
  export type DocumentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * Filter, which Document to fetch.
     */
    where: DocumentWhereUniqueInput
  }

  /**
   * Document findFirst
   */
  export type DocumentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * Filter, which Document to fetch.
     */
    where?: DocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Documents to fetch.
     */
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Documents.
     */
    cursor?: DocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Documents.
     */
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * Document findFirstOrThrow
   */
  export type DocumentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * Filter, which Document to fetch.
     */
    where?: DocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Documents to fetch.
     */
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Documents.
     */
    cursor?: DocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Documents.
     */
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * Document findMany
   */
  export type DocumentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * Filter, which Documents to fetch.
     */
    where?: DocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Documents to fetch.
     */
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Documents.
     */
    cursor?: DocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Documents.
     */
    skip?: number
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * Document create
   */
  export type DocumentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * The data needed to create a Document.
     */
    data: XOR<DocumentCreateInput, DocumentUncheckedCreateInput>
  }

  /**
   * Document createMany
   */
  export type DocumentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Documents.
     */
    data: DocumentCreateManyInput | DocumentCreateManyInput[]
  }

  /**
   * Document update
   */
  export type DocumentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * The data needed to update a Document.
     */
    data: XOR<DocumentUpdateInput, DocumentUncheckedUpdateInput>
    /**
     * Choose, which Document to update.
     */
    where: DocumentWhereUniqueInput
  }

  /**
   * Document updateMany
   */
  export type DocumentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Documents.
     */
    data: XOR<DocumentUpdateManyMutationInput, DocumentUncheckedUpdateManyInput>
    /**
     * Filter which Documents to update
     */
    where?: DocumentWhereInput
  }

  /**
   * Document upsert
   */
  export type DocumentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * The filter to search for the Document to update in case it exists.
     */
    where: DocumentWhereUniqueInput
    /**
     * In case the Document found by the `where` argument doesn't exist, create a new Document with this data.
     */
    create: XOR<DocumentCreateInput, DocumentUncheckedCreateInput>
    /**
     * In case the Document was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DocumentUpdateInput, DocumentUncheckedUpdateInput>
  }

  /**
   * Document delete
   */
  export type DocumentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * Filter which Document to delete.
     */
    where: DocumentWhereUniqueInput
  }

  /**
   * Document deleteMany
   */
  export type DocumentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Documents to delete
     */
    where?: DocumentWhereInput
  }

  /**
   * Document findRaw
   */
  export type DocumentFindRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The query predicate filter. If unspecified, then all documents in the collection will match the predicate. ${@link https://docs.mongodb.com/manual/reference/operator/query MongoDB Docs}.
     */
    filter?: InputJsonValue
    /**
     * Additional options to pass to the `find` command ${@link https://docs.mongodb.com/manual/reference/command/find/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * Document aggregateRaw
   */
  export type DocumentAggregateRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * An array of aggregation stages to process and transform the document stream via the aggregation pipeline. ${@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline MongoDB Docs}.
     */
    pipeline?: InputJsonValue[]
    /**
     * Additional options to pass to the `aggregate` command ${@link https://docs.mongodb.com/manual/reference/command/aggregate/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * Document.family
   */
  export type Document$familyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Family
     */
    select?: FamilySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyInclude<ExtArgs> | null
    where?: FamilyWhereInput
  }

  /**
   * Document.member
   */
  export type Document$memberArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyMember
     */
    select?: FamilyMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyMemberInclude<ExtArgs> | null
    where?: FamilyMemberWhereInput
  }

  /**
   * Document.supportMeasure
   */
  export type Document$supportMeasureArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SupportMeasure
     */
    select?: SupportMeasureSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SupportMeasureInclude<ExtArgs> | null
    where?: SupportMeasureWhereInput
  }

  /**
   * Document without action
   */
  export type DocumentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
  }


  /**
   * Model FamilyHistory
   */

  export type AggregateFamilyHistory = {
    _count: FamilyHistoryCountAggregateOutputType | null
    _min: FamilyHistoryMinAggregateOutputType | null
    _max: FamilyHistoryMaxAggregateOutputType | null
  }

  export type FamilyHistoryMinAggregateOutputType = {
    id: string | null
    familyId: string | null
    action: string | null
    description: string | null
    timestamp: Date | null
    userId: string | null
    ipAddress: string | null
    userAgent: string | null
  }

  export type FamilyHistoryMaxAggregateOutputType = {
    id: string | null
    familyId: string | null
    action: string | null
    description: string | null
    timestamp: Date | null
    userId: string | null
    ipAddress: string | null
    userAgent: string | null
  }

  export type FamilyHistoryCountAggregateOutputType = {
    id: number
    familyId: number
    action: number
    description: number
    timestamp: number
    userId: number
    changedFields: number
    previousValues: number
    newValues: number
    ipAddress: number
    userAgent: number
    _all: number
  }


  export type FamilyHistoryMinAggregateInputType = {
    id?: true
    familyId?: true
    action?: true
    description?: true
    timestamp?: true
    userId?: true
    ipAddress?: true
    userAgent?: true
  }

  export type FamilyHistoryMaxAggregateInputType = {
    id?: true
    familyId?: true
    action?: true
    description?: true
    timestamp?: true
    userId?: true
    ipAddress?: true
    userAgent?: true
  }

  export type FamilyHistoryCountAggregateInputType = {
    id?: true
    familyId?: true
    action?: true
    description?: true
    timestamp?: true
    userId?: true
    changedFields?: true
    previousValues?: true
    newValues?: true
    ipAddress?: true
    userAgent?: true
    _all?: true
  }

  export type FamilyHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FamilyHistory to aggregate.
     */
    where?: FamilyHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyHistories to fetch.
     */
    orderBy?: FamilyHistoryOrderByWithRelationInput | FamilyHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FamilyHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FamilyHistories
    **/
    _count?: true | FamilyHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FamilyHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FamilyHistoryMaxAggregateInputType
  }

  export type GetFamilyHistoryAggregateType<T extends FamilyHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateFamilyHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFamilyHistory[P]>
      : GetScalarType<T[P], AggregateFamilyHistory[P]>
  }




  export type FamilyHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FamilyHistoryWhereInput
    orderBy?: FamilyHistoryOrderByWithAggregationInput | FamilyHistoryOrderByWithAggregationInput[]
    by: FamilyHistoryScalarFieldEnum[] | FamilyHistoryScalarFieldEnum
    having?: FamilyHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FamilyHistoryCountAggregateInputType | true
    _min?: FamilyHistoryMinAggregateInputType
    _max?: FamilyHistoryMaxAggregateInputType
  }

  export type FamilyHistoryGroupByOutputType = {
    id: string
    familyId: string
    action: string
    description: string
    timestamp: Date
    userId: string
    changedFields: string[]
    previousValues: JsonValue | null
    newValues: JsonValue | null
    ipAddress: string | null
    userAgent: string | null
    _count: FamilyHistoryCountAggregateOutputType | null
    _min: FamilyHistoryMinAggregateOutputType | null
    _max: FamilyHistoryMaxAggregateOutputType | null
  }

  type GetFamilyHistoryGroupByPayload<T extends FamilyHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FamilyHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FamilyHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FamilyHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], FamilyHistoryGroupByOutputType[P]>
        }
      >
    >


  export type FamilyHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    familyId?: boolean
    action?: boolean
    description?: boolean
    timestamp?: boolean
    userId?: boolean
    changedFields?: boolean
    previousValues?: boolean
    newValues?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    family?: boolean | FamilyDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["familyHistory"]>


  export type FamilyHistorySelectScalar = {
    id?: boolean
    familyId?: boolean
    action?: boolean
    description?: boolean
    timestamp?: boolean
    userId?: boolean
    changedFields?: boolean
    previousValues?: boolean
    newValues?: boolean
    ipAddress?: boolean
    userAgent?: boolean
  }

  export type FamilyHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    family?: boolean | FamilyDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $FamilyHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FamilyHistory"
    objects: {
      family: Prisma.$FamilyPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      familyId: string
      action: string
      description: string
      timestamp: Date
      userId: string
      changedFields: string[]
      previousValues: Prisma.JsonValue | null
      newValues: Prisma.JsonValue | null
      ipAddress: string | null
      userAgent: string | null
    }, ExtArgs["result"]["familyHistory"]>
    composites: {}
  }

  type FamilyHistoryGetPayload<S extends boolean | null | undefined | FamilyHistoryDefaultArgs> = $Result.GetResult<Prisma.$FamilyHistoryPayload, S>

  type FamilyHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FamilyHistoryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FamilyHistoryCountAggregateInputType | true
    }

  export interface FamilyHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FamilyHistory'], meta: { name: 'FamilyHistory' } }
    /**
     * Find zero or one FamilyHistory that matches the filter.
     * @param {FamilyHistoryFindUniqueArgs} args - Arguments to find a FamilyHistory
     * @example
     * // Get one FamilyHistory
     * const familyHistory = await prisma.familyHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FamilyHistoryFindUniqueArgs>(args: SelectSubset<T, FamilyHistoryFindUniqueArgs<ExtArgs>>): Prisma__FamilyHistoryClient<$Result.GetResult<Prisma.$FamilyHistoryPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one FamilyHistory that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FamilyHistoryFindUniqueOrThrowArgs} args - Arguments to find a FamilyHistory
     * @example
     * // Get one FamilyHistory
     * const familyHistory = await prisma.familyHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FamilyHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, FamilyHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FamilyHistoryClient<$Result.GetResult<Prisma.$FamilyHistoryPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first FamilyHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyHistoryFindFirstArgs} args - Arguments to find a FamilyHistory
     * @example
     * // Get one FamilyHistory
     * const familyHistory = await prisma.familyHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FamilyHistoryFindFirstArgs>(args?: SelectSubset<T, FamilyHistoryFindFirstArgs<ExtArgs>>): Prisma__FamilyHistoryClient<$Result.GetResult<Prisma.$FamilyHistoryPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first FamilyHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyHistoryFindFirstOrThrowArgs} args - Arguments to find a FamilyHistory
     * @example
     * // Get one FamilyHistory
     * const familyHistory = await prisma.familyHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FamilyHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, FamilyHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__FamilyHistoryClient<$Result.GetResult<Prisma.$FamilyHistoryPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more FamilyHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FamilyHistories
     * const familyHistories = await prisma.familyHistory.findMany()
     * 
     * // Get first 10 FamilyHistories
     * const familyHistories = await prisma.familyHistory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const familyHistoryWithIdOnly = await prisma.familyHistory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FamilyHistoryFindManyArgs>(args?: SelectSubset<T, FamilyHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FamilyHistoryPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a FamilyHistory.
     * @param {FamilyHistoryCreateArgs} args - Arguments to create a FamilyHistory.
     * @example
     * // Create one FamilyHistory
     * const FamilyHistory = await prisma.familyHistory.create({
     *   data: {
     *     // ... data to create a FamilyHistory
     *   }
     * })
     * 
     */
    create<T extends FamilyHistoryCreateArgs>(args: SelectSubset<T, FamilyHistoryCreateArgs<ExtArgs>>): Prisma__FamilyHistoryClient<$Result.GetResult<Prisma.$FamilyHistoryPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many FamilyHistories.
     * @param {FamilyHistoryCreateManyArgs} args - Arguments to create many FamilyHistories.
     * @example
     * // Create many FamilyHistories
     * const familyHistory = await prisma.familyHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FamilyHistoryCreateManyArgs>(args?: SelectSubset<T, FamilyHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a FamilyHistory.
     * @param {FamilyHistoryDeleteArgs} args - Arguments to delete one FamilyHistory.
     * @example
     * // Delete one FamilyHistory
     * const FamilyHistory = await prisma.familyHistory.delete({
     *   where: {
     *     // ... filter to delete one FamilyHistory
     *   }
     * })
     * 
     */
    delete<T extends FamilyHistoryDeleteArgs>(args: SelectSubset<T, FamilyHistoryDeleteArgs<ExtArgs>>): Prisma__FamilyHistoryClient<$Result.GetResult<Prisma.$FamilyHistoryPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one FamilyHistory.
     * @param {FamilyHistoryUpdateArgs} args - Arguments to update one FamilyHistory.
     * @example
     * // Update one FamilyHistory
     * const familyHistory = await prisma.familyHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FamilyHistoryUpdateArgs>(args: SelectSubset<T, FamilyHistoryUpdateArgs<ExtArgs>>): Prisma__FamilyHistoryClient<$Result.GetResult<Prisma.$FamilyHistoryPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more FamilyHistories.
     * @param {FamilyHistoryDeleteManyArgs} args - Arguments to filter FamilyHistories to delete.
     * @example
     * // Delete a few FamilyHistories
     * const { count } = await prisma.familyHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FamilyHistoryDeleteManyArgs>(args?: SelectSubset<T, FamilyHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FamilyHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FamilyHistories
     * const familyHistory = await prisma.familyHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FamilyHistoryUpdateManyArgs>(args: SelectSubset<T, FamilyHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FamilyHistory.
     * @param {FamilyHistoryUpsertArgs} args - Arguments to update or create a FamilyHistory.
     * @example
     * // Update or create a FamilyHistory
     * const familyHistory = await prisma.familyHistory.upsert({
     *   create: {
     *     // ... data to create a FamilyHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FamilyHistory we want to update
     *   }
     * })
     */
    upsert<T extends FamilyHistoryUpsertArgs>(args: SelectSubset<T, FamilyHistoryUpsertArgs<ExtArgs>>): Prisma__FamilyHistoryClient<$Result.GetResult<Prisma.$FamilyHistoryPayload<ExtArgs>, T, "upsert">, never, ExtArgs>

    /**
     * Find zero or more FamilyHistories that matches the filter.
     * @param {FamilyHistoryFindRawArgs} args - Select which filters you would like to apply.
     * @example
     * const familyHistory = await prisma.familyHistory.findRaw({
     *   filter: { age: { $gt: 25 } } 
     * })
     */
    findRaw(args?: FamilyHistoryFindRawArgs): Prisma.PrismaPromise<JsonObject>

    /**
     * Perform aggregation operations on a FamilyHistory.
     * @param {FamilyHistoryAggregateRawArgs} args - Select which aggregations you would like to apply.
     * @example
     * const familyHistory = await prisma.familyHistory.aggregateRaw({
     *   pipeline: [
     *     { $match: { status: "registered" } },
     *     { $group: { _id: "$country", total: { $sum: 1 } } }
     *   ]
     * })
     */
    aggregateRaw(args?: FamilyHistoryAggregateRawArgs): Prisma.PrismaPromise<JsonObject>


    /**
     * Count the number of FamilyHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyHistoryCountArgs} args - Arguments to filter FamilyHistories to count.
     * @example
     * // Count the number of FamilyHistories
     * const count = await prisma.familyHistory.count({
     *   where: {
     *     // ... the filter for the FamilyHistories we want to count
     *   }
     * })
    **/
    count<T extends FamilyHistoryCountArgs>(
      args?: Subset<T, FamilyHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FamilyHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FamilyHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FamilyHistoryAggregateArgs>(args: Subset<T, FamilyHistoryAggregateArgs>): Prisma.PrismaPromise<GetFamilyHistoryAggregateType<T>>

    /**
     * Group by FamilyHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FamilyHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FamilyHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FamilyHistoryGroupByArgs['orderBy'] }
        : { orderBy?: FamilyHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FamilyHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFamilyHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FamilyHistory model
   */
  readonly fields: FamilyHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FamilyHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FamilyHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    family<T extends FamilyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FamilyDefaultArgs<ExtArgs>>): Prisma__FamilyClient<$Result.GetResult<Prisma.$FamilyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FamilyHistory model
   */ 
  interface FamilyHistoryFieldRefs {
    readonly id: FieldRef<"FamilyHistory", 'String'>
    readonly familyId: FieldRef<"FamilyHistory", 'String'>
    readonly action: FieldRef<"FamilyHistory", 'String'>
    readonly description: FieldRef<"FamilyHistory", 'String'>
    readonly timestamp: FieldRef<"FamilyHistory", 'DateTime'>
    readonly userId: FieldRef<"FamilyHistory", 'String'>
    readonly changedFields: FieldRef<"FamilyHistory", 'String[]'>
    readonly previousValues: FieldRef<"FamilyHistory", 'Json'>
    readonly newValues: FieldRef<"FamilyHistory", 'Json'>
    readonly ipAddress: FieldRef<"FamilyHistory", 'String'>
    readonly userAgent: FieldRef<"FamilyHistory", 'String'>
  }
    

  // Custom InputTypes
  /**
   * FamilyHistory findUnique
   */
  export type FamilyHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyHistory
     */
    select?: FamilyHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyHistoryInclude<ExtArgs> | null
    /**
     * Filter, which FamilyHistory to fetch.
     */
    where: FamilyHistoryWhereUniqueInput
  }

  /**
   * FamilyHistory findUniqueOrThrow
   */
  export type FamilyHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyHistory
     */
    select?: FamilyHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyHistoryInclude<ExtArgs> | null
    /**
     * Filter, which FamilyHistory to fetch.
     */
    where: FamilyHistoryWhereUniqueInput
  }

  /**
   * FamilyHistory findFirst
   */
  export type FamilyHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyHistory
     */
    select?: FamilyHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyHistoryInclude<ExtArgs> | null
    /**
     * Filter, which FamilyHistory to fetch.
     */
    where?: FamilyHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyHistories to fetch.
     */
    orderBy?: FamilyHistoryOrderByWithRelationInput | FamilyHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FamilyHistories.
     */
    cursor?: FamilyHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FamilyHistories.
     */
    distinct?: FamilyHistoryScalarFieldEnum | FamilyHistoryScalarFieldEnum[]
  }

  /**
   * FamilyHistory findFirstOrThrow
   */
  export type FamilyHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyHistory
     */
    select?: FamilyHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyHistoryInclude<ExtArgs> | null
    /**
     * Filter, which FamilyHistory to fetch.
     */
    where?: FamilyHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyHistories to fetch.
     */
    orderBy?: FamilyHistoryOrderByWithRelationInput | FamilyHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FamilyHistories.
     */
    cursor?: FamilyHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FamilyHistories.
     */
    distinct?: FamilyHistoryScalarFieldEnum | FamilyHistoryScalarFieldEnum[]
  }

  /**
   * FamilyHistory findMany
   */
  export type FamilyHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyHistory
     */
    select?: FamilyHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyHistoryInclude<ExtArgs> | null
    /**
     * Filter, which FamilyHistories to fetch.
     */
    where?: FamilyHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FamilyHistories to fetch.
     */
    orderBy?: FamilyHistoryOrderByWithRelationInput | FamilyHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FamilyHistories.
     */
    cursor?: FamilyHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FamilyHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FamilyHistories.
     */
    skip?: number
    distinct?: FamilyHistoryScalarFieldEnum | FamilyHistoryScalarFieldEnum[]
  }

  /**
   * FamilyHistory create
   */
  export type FamilyHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyHistory
     */
    select?: FamilyHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a FamilyHistory.
     */
    data: XOR<FamilyHistoryCreateInput, FamilyHistoryUncheckedCreateInput>
  }

  /**
   * FamilyHistory createMany
   */
  export type FamilyHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FamilyHistories.
     */
    data: FamilyHistoryCreateManyInput | FamilyHistoryCreateManyInput[]
  }

  /**
   * FamilyHistory update
   */
  export type FamilyHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyHistory
     */
    select?: FamilyHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a FamilyHistory.
     */
    data: XOR<FamilyHistoryUpdateInput, FamilyHistoryUncheckedUpdateInput>
    /**
     * Choose, which FamilyHistory to update.
     */
    where: FamilyHistoryWhereUniqueInput
  }

  /**
   * FamilyHistory updateMany
   */
  export type FamilyHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FamilyHistories.
     */
    data: XOR<FamilyHistoryUpdateManyMutationInput, FamilyHistoryUncheckedUpdateManyInput>
    /**
     * Filter which FamilyHistories to update
     */
    where?: FamilyHistoryWhereInput
  }

  /**
   * FamilyHistory upsert
   */
  export type FamilyHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyHistory
     */
    select?: FamilyHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the FamilyHistory to update in case it exists.
     */
    where: FamilyHistoryWhereUniqueInput
    /**
     * In case the FamilyHistory found by the `where` argument doesn't exist, create a new FamilyHistory with this data.
     */
    create: XOR<FamilyHistoryCreateInput, FamilyHistoryUncheckedCreateInput>
    /**
     * In case the FamilyHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FamilyHistoryUpdateInput, FamilyHistoryUncheckedUpdateInput>
  }

  /**
   * FamilyHistory delete
   */
  export type FamilyHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyHistory
     */
    select?: FamilyHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyHistoryInclude<ExtArgs> | null
    /**
     * Filter which FamilyHistory to delete.
     */
    where: FamilyHistoryWhereUniqueInput
  }

  /**
   * FamilyHistory deleteMany
   */
  export type FamilyHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FamilyHistories to delete
     */
    where?: FamilyHistoryWhereInput
  }

  /**
   * FamilyHistory findRaw
   */
  export type FamilyHistoryFindRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The query predicate filter. If unspecified, then all documents in the collection will match the predicate. ${@link https://docs.mongodb.com/manual/reference/operator/query MongoDB Docs}.
     */
    filter?: InputJsonValue
    /**
     * Additional options to pass to the `find` command ${@link https://docs.mongodb.com/manual/reference/command/find/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * FamilyHistory aggregateRaw
   */
  export type FamilyHistoryAggregateRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * An array of aggregation stages to process and transform the document stream via the aggregation pipeline. ${@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline MongoDB Docs}.
     */
    pipeline?: InputJsonValue[]
    /**
     * Additional options to pass to the `aggregate` command ${@link https://docs.mongodb.com/manual/reference/command/aggregate/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * FamilyHistory without action
   */
  export type FamilyHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FamilyHistory
     */
    select?: FamilyHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FamilyHistoryInclude<ExtArgs> | null
  }


  /**
   * Model Notification
   */

  export type AggregateNotification = {
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  export type NotificationMinAggregateOutputType = {
    id: string | null
    title: string | null
    message: string | null
    type: string | null
    isRead: boolean | null
    createdAt: Date | null
    priority: string | null
    category: string | null
    expiresAt: Date | null
    actionUrl: string | null
    actionLabel: string | null
    isArchived: boolean | null
    creatorId: string | null
    recipientId: string | null
  }

  export type NotificationMaxAggregateOutputType = {
    id: string | null
    title: string | null
    message: string | null
    type: string | null
    isRead: boolean | null
    createdAt: Date | null
    priority: string | null
    category: string | null
    expiresAt: Date | null
    actionUrl: string | null
    actionLabel: string | null
    isArchived: boolean | null
    creatorId: string | null
    recipientId: string | null
  }

  export type NotificationCountAggregateOutputType = {
    id: number
    title: number
    message: number
    type: number
    isRead: number
    createdAt: number
    priority: number
    category: number
    expiresAt: number
    actionUrl: number
    actionLabel: number
    isArchived: number
    creatorId: number
    recipientId: number
    _all: number
  }


  export type NotificationMinAggregateInputType = {
    id?: true
    title?: true
    message?: true
    type?: true
    isRead?: true
    createdAt?: true
    priority?: true
    category?: true
    expiresAt?: true
    actionUrl?: true
    actionLabel?: true
    isArchived?: true
    creatorId?: true
    recipientId?: true
  }

  export type NotificationMaxAggregateInputType = {
    id?: true
    title?: true
    message?: true
    type?: true
    isRead?: true
    createdAt?: true
    priority?: true
    category?: true
    expiresAt?: true
    actionUrl?: true
    actionLabel?: true
    isArchived?: true
    creatorId?: true
    recipientId?: true
  }

  export type NotificationCountAggregateInputType = {
    id?: true
    title?: true
    message?: true
    type?: true
    isRead?: true
    createdAt?: true
    priority?: true
    category?: true
    expiresAt?: true
    actionUrl?: true
    actionLabel?: true
    isArchived?: true
    creatorId?: true
    recipientId?: true
    _all?: true
  }

  export type NotificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notification to aggregate.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notifications
    **/
    _count?: true | NotificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationMaxAggregateInputType
  }

  export type GetNotificationAggregateType<T extends NotificationAggregateArgs> = {
        [P in keyof T & keyof AggregateNotification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotification[P]>
      : GetScalarType<T[P], AggregateNotification[P]>
  }




  export type NotificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithAggregationInput | NotificationOrderByWithAggregationInput[]
    by: NotificationScalarFieldEnum[] | NotificationScalarFieldEnum
    having?: NotificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationCountAggregateInputType | true
    _min?: NotificationMinAggregateInputType
    _max?: NotificationMaxAggregateInputType
  }

  export type NotificationGroupByOutputType = {
    id: string
    title: string
    message: string
    type: string
    isRead: boolean
    createdAt: Date
    priority: string | null
    category: string | null
    expiresAt: Date | null
    actionUrl: string | null
    actionLabel: string | null
    isArchived: boolean
    creatorId: string
    recipientId: string
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  type GetNotificationGroupByPayload<T extends NotificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationGroupByOutputType[P]>
        }
      >
    >


  export type NotificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    message?: boolean
    type?: boolean
    isRead?: boolean
    createdAt?: boolean
    priority?: boolean
    category?: boolean
    expiresAt?: boolean
    actionUrl?: boolean
    actionLabel?: boolean
    isArchived?: boolean
    creatorId?: boolean
    recipientId?: boolean
    creator?: boolean | UserDefaultArgs<ExtArgs>
    recipient?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>


  export type NotificationSelectScalar = {
    id?: boolean
    title?: boolean
    message?: boolean
    type?: boolean
    isRead?: boolean
    createdAt?: boolean
    priority?: boolean
    category?: boolean
    expiresAt?: boolean
    actionUrl?: boolean
    actionLabel?: boolean
    isArchived?: boolean
    creatorId?: boolean
    recipientId?: boolean
  }

  export type NotificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creator?: boolean | UserDefaultArgs<ExtArgs>
    recipient?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $NotificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Notification"
    objects: {
      creator: Prisma.$UserPayload<ExtArgs>
      recipient: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      message: string
      type: string
      isRead: boolean
      createdAt: Date
      priority: string | null
      category: string | null
      expiresAt: Date | null
      actionUrl: string | null
      actionLabel: string | null
      isArchived: boolean
      creatorId: string
      recipientId: string
    }, ExtArgs["result"]["notification"]>
    composites: {}
  }

  type NotificationGetPayload<S extends boolean | null | undefined | NotificationDefaultArgs> = $Result.GetResult<Prisma.$NotificationPayload, S>

  type NotificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<NotificationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: NotificationCountAggregateInputType | true
    }

  export interface NotificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Notification'], meta: { name: 'Notification' } }
    /**
     * Find zero or one Notification that matches the filter.
     * @param {NotificationFindUniqueArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotificationFindUniqueArgs>(args: SelectSubset<T, NotificationFindUniqueArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Notification that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {NotificationFindUniqueOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotificationFindUniqueOrThrowArgs>(args: SelectSubset<T, NotificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Notification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotificationFindFirstArgs>(args?: SelectSubset<T, NotificationFindFirstArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Notification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotificationFindFirstOrThrowArgs>(args?: SelectSubset<T, NotificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notification.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificationWithIdOnly = await prisma.notification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NotificationFindManyArgs>(args?: SelectSubset<T, NotificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Notification.
     * @param {NotificationCreateArgs} args - Arguments to create a Notification.
     * @example
     * // Create one Notification
     * const Notification = await prisma.notification.create({
     *   data: {
     *     // ... data to create a Notification
     *   }
     * })
     * 
     */
    create<T extends NotificationCreateArgs>(args: SelectSubset<T, NotificationCreateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Notifications.
     * @param {NotificationCreateManyArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotificationCreateManyArgs>(args?: SelectSubset<T, NotificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Notification.
     * @param {NotificationDeleteArgs} args - Arguments to delete one Notification.
     * @example
     * // Delete one Notification
     * const Notification = await prisma.notification.delete({
     *   where: {
     *     // ... filter to delete one Notification
     *   }
     * })
     * 
     */
    delete<T extends NotificationDeleteArgs>(args: SelectSubset<T, NotificationDeleteArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Notification.
     * @param {NotificationUpdateArgs} args - Arguments to update one Notification.
     * @example
     * // Update one Notification
     * const notification = await prisma.notification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotificationUpdateArgs>(args: SelectSubset<T, NotificationUpdateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Notifications.
     * @param {NotificationDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotificationDeleteManyArgs>(args?: SelectSubset<T, NotificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotificationUpdateManyArgs>(args: SelectSubset<T, NotificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Notification.
     * @param {NotificationUpsertArgs} args - Arguments to update or create a Notification.
     * @example
     * // Update or create a Notification
     * const notification = await prisma.notification.upsert({
     *   create: {
     *     // ... data to create a Notification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notification we want to update
     *   }
     * })
     */
    upsert<T extends NotificationUpsertArgs>(args: SelectSubset<T, NotificationUpsertArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "upsert">, never, ExtArgs>

    /**
     * Find zero or more Notifications that matches the filter.
     * @param {NotificationFindRawArgs} args - Select which filters you would like to apply.
     * @example
     * const notification = await prisma.notification.findRaw({
     *   filter: { age: { $gt: 25 } } 
     * })
     */
    findRaw(args?: NotificationFindRawArgs): Prisma.PrismaPromise<JsonObject>

    /**
     * Perform aggregation operations on a Notification.
     * @param {NotificationAggregateRawArgs} args - Select which aggregations you would like to apply.
     * @example
     * const notification = await prisma.notification.aggregateRaw({
     *   pipeline: [
     *     { $match: { status: "registered" } },
     *     { $group: { _id: "$country", total: { $sum: 1 } } }
     *   ]
     * })
     */
    aggregateRaw(args?: NotificationAggregateRawArgs): Prisma.PrismaPromise<JsonObject>


    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notification.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends NotificationCountArgs>(
      args?: Subset<T, NotificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationAggregateArgs>(args: Subset<T, NotificationAggregateArgs>): Prisma.PrismaPromise<GetNotificationAggregateType<T>>

    /**
     * Group by Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificationGroupByArgs['orderBy'] }
        : { orderBy?: NotificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Notification model
   */
  readonly fields: NotificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Notification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    creator<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    recipient<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Notification model
   */ 
  interface NotificationFieldRefs {
    readonly id: FieldRef<"Notification", 'String'>
    readonly title: FieldRef<"Notification", 'String'>
    readonly message: FieldRef<"Notification", 'String'>
    readonly type: FieldRef<"Notification", 'String'>
    readonly isRead: FieldRef<"Notification", 'Boolean'>
    readonly createdAt: FieldRef<"Notification", 'DateTime'>
    readonly priority: FieldRef<"Notification", 'String'>
    readonly category: FieldRef<"Notification", 'String'>
    readonly expiresAt: FieldRef<"Notification", 'DateTime'>
    readonly actionUrl: FieldRef<"Notification", 'String'>
    readonly actionLabel: FieldRef<"Notification", 'String'>
    readonly isArchived: FieldRef<"Notification", 'Boolean'>
    readonly creatorId: FieldRef<"Notification", 'String'>
    readonly recipientId: FieldRef<"Notification", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Notification findUnique
   */
  export type NotificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findUniqueOrThrow
   */
  export type NotificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findFirst
   */
  export type NotificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findFirstOrThrow
   */
  export type NotificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findMany
   */
  export type NotificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notifications to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification create
   */
  export type NotificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to create a Notification.
     */
    data: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
  }

  /**
   * Notification createMany
   */
  export type NotificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
  }

  /**
   * Notification update
   */
  export type NotificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to update a Notification.
     */
    data: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
    /**
     * Choose, which Notification to update.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification updateMany
   */
  export type NotificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notifications.
     */
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyInput>
    /**
     * Filter which Notifications to update
     */
    where?: NotificationWhereInput
  }

  /**
   * Notification upsert
   */
  export type NotificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The filter to search for the Notification to update in case it exists.
     */
    where: NotificationWhereUniqueInput
    /**
     * In case the Notification found by the `where` argument doesn't exist, create a new Notification with this data.
     */
    create: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
    /**
     * In case the Notification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
  }

  /**
   * Notification delete
   */
  export type NotificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter which Notification to delete.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification deleteMany
   */
  export type NotificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notifications to delete
     */
    where?: NotificationWhereInput
  }

  /**
   * Notification findRaw
   */
  export type NotificationFindRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The query predicate filter. If unspecified, then all documents in the collection will match the predicate. ${@link https://docs.mongodb.com/manual/reference/operator/query MongoDB Docs}.
     */
    filter?: InputJsonValue
    /**
     * Additional options to pass to the `find` command ${@link https://docs.mongodb.com/manual/reference/command/find/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * Notification aggregateRaw
   */
  export type NotificationAggregateRawArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * An array of aggregation stages to process and transform the document stream via the aggregation pipeline. ${@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline MongoDB Docs}.
     */
    pipeline?: InputJsonValue[]
    /**
     * Additional options to pass to the `aggregate` command ${@link https://docs.mongodb.com/manual/reference/command/aggregate/#command-fields MongoDB Docs}.
     */
    options?: InputJsonValue
  }

  /**
   * Notification without action
   */
  export type NotificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const UserScalarFieldEnum: {
    id: 'id',
    iin: 'iin',
    password: 'password',
    fullName: 'fullName',
    phone: 'phone',
    role: 'role',
    region: 'region',
    district: 'district',
    city: 'city',
    position: 'position',
    isActive: 'isActive',
    lastLogin: 'lastLogin',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const FamilyScalarFieldEnum: {
    id: 'id',
    caseNumber: 'caseNumber',
    familyName: 'familyName',
    address: 'address',
    region: 'region',
    registrationAddress: 'registrationAddress',
    district: 'district',
    city: 'city',
    status: 'status',
    riskLevel: 'riskLevel',
    riskFactors: 'riskFactors',
    registrationDate: 'registrationDate',
    lastUpdate: 'lastUpdate',
    isActive: 'isActive',
    inactiveReason: 'inactiveReason',
    notes: 'notes',
    children: 'children',
    settingReason: 'settingReason',
    inspectionStatus: 'inspectionStatus',
    familyType: 'familyType',
    housingType: 'housingType',
    employment: 'employment',
    workplace: 'workplace',
    tzhsReason: 'tzhsReason',
    nbReason: 'nbReason',
    familyIncome: 'familyIncome',
    needsSupport: 'needsSupport',
    needsEducation: 'needsEducation',
    needsHealth: 'needsHealth',
    needsPolice: 'needsPolice',
    hasDisability: 'hasDisability',
    contactPhone: 'contactPhone',
    contactEmail: 'contactEmail',
    incomeSource: 'incomeSource',
    monthlyIncome: 'monthlyIncome',
    socialBenefits: 'socialBenefits',
    referralSource: 'referralSource',
    primaryLanguage: 'primaryLanguage',
    hasInterpreterNeeded: 'hasInterpreterNeeded',
    createdById: 'createdById',
    updatedById: 'updatedById'
  };

  export type FamilyScalarFieldEnum = (typeof FamilyScalarFieldEnum)[keyof typeof FamilyScalarFieldEnum]


  export const FamilyMemberScalarFieldEnum: {
    id: 'id',
    familyId: 'familyId',
    firstName: 'firstName',
    lastName: 'lastName',
    middleName: 'middleName',
    birthDate: 'birthDate',
    gender: 'gender',
    relationship: 'relationship',
    documentType: 'documentType',
    documentNumber: 'documentNumber',
    documentIssueDate: 'documentIssueDate',
    documentExpiryDate: 'documentExpiryDate',
    registrationAddress: 'registrationAddress',
    education: 'education',
    grade: 'grade',
    institution: 'institution',
    course: 'course',
    funding: 'funding',
    meals: 'meals',
    notes: 'notes',
    status: 'status',
    isActive: 'isActive',
    citizenship: 'citizenship',
    ethnicity: 'ethnicity',
    maritalStatus: 'maritalStatus',
    phoneNumber: 'phoneNumber',
    email: 'email',
    employment: 'employment',
    healthStatus: 'healthStatus',
    disabilities: 'disabilities',
    specialNeeds: 'specialNeeds',
    isHeadOfHousehold: 'isHeadOfHousehold',
    primaryCaregiver: 'primaryCaregiver',
    incomeAmount: 'incomeAmount',
    incomeSource: 'incomeSource',
    medicalInsurance: 'medicalInsurance',
    chronicConditions: 'chronicConditions',
    allergies: 'allergies',
    medications: 'medications'
  };

  export type FamilyMemberScalarFieldEnum = (typeof FamilyMemberScalarFieldEnum)[keyof typeof FamilyMemberScalarFieldEnum]


  export const SupportMeasureScalarFieldEnum: {
    id: 'id',
    familyId: 'familyId',
    memberId: 'memberId',
    type: 'type',
    description: 'description',
    category: 'category',
    startDate: 'startDate',
    endDate: 'endDate',
    status: 'status',
    provider: 'provider',
    result: 'result',
    notes: 'notes',
    createdAt: 'createdAt',
    priority: 'priority',
    cost: 'cost',
    fundingSource: 'fundingSource',
    contactPerson: 'contactPerson',
    contactPhone: 'contactPhone',
    contactEmail: 'contactEmail',
    frequency: 'frequency',
    location: 'location',
    followUpDate: 'followUpDate',
    evaluationDate: 'evaluationDate',
    effectiveness: 'effectiveness',
    createdById: 'createdById'
  };

  export type SupportMeasureScalarFieldEnum = (typeof SupportMeasureScalarFieldEnum)[keyof typeof SupportMeasureScalarFieldEnum]


  export const DocumentScalarFieldEnum: {
    id: 'id',
    title: 'title',
    type: 'type',
    fileUrl: 'fileUrl',
    mimeType: 'mimeType',
    fileSize: 'fileSize',
    familyId: 'familyId',
    memberId: 'memberId',
    supportId: 'supportId',
    uploadDate: 'uploadDate',
    notes: 'notes',
    category: 'category',
    expirationDate: 'expirationDate',
    isConfidential: 'isConfidential',
    tags: 'tags',
    status: 'status',
    uploadedById: 'uploadedById'
  };

  export type DocumentScalarFieldEnum = (typeof DocumentScalarFieldEnum)[keyof typeof DocumentScalarFieldEnum]


  export const FamilyHistoryScalarFieldEnum: {
    id: 'id',
    familyId: 'familyId',
    action: 'action',
    description: 'description',
    timestamp: 'timestamp',
    userId: 'userId',
    changedFields: 'changedFields',
    previousValues: 'previousValues',
    newValues: 'newValues',
    ipAddress: 'ipAddress',
    userAgent: 'userAgent'
  };

  export type FamilyHistoryScalarFieldEnum = (typeof FamilyHistoryScalarFieldEnum)[keyof typeof FamilyHistoryScalarFieldEnum]


  export const NotificationScalarFieldEnum: {
    id: 'id',
    title: 'title',
    message: 'message',
    type: 'type',
    isRead: 'isRead',
    createdAt: 'createdAt',
    priority: 'priority',
    category: 'category',
    expiresAt: 'expiresAt',
    actionUrl: 'actionUrl',
    actionLabel: 'actionLabel',
    isArchived: 'isArchived',
    creatorId: 'creatorId',
    recipientId: 'recipientId'
  };

  export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    iin?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    fullName?: StringFilter<"User"> | string
    phone?: StringNullableFilter<"User"> | string | null
    role?: StringFilter<"User"> | string
    region?: StringNullableFilter<"User"> | string | null
    district?: StringNullableFilter<"User"> | string | null
    city?: StringNullableFilter<"User"> | string | null
    position?: StringNullableFilter<"User"> | string | null
    isActive?: BoolFilter<"User"> | boolean
    lastLogin?: DateTimeNullableFilter<"User"> | Date | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    createdFamilies?: FamilyListRelationFilter
    updatedFamilies?: FamilyListRelationFilter
    createdSupportMeasures?: SupportMeasureListRelationFilter
    documents?: DocumentListRelationFilter
    notifications?: NotificationListRelationFilter
    notificationsReceived?: NotificationListRelationFilter
    FamilyHistory?: FamilyHistoryListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    iin?: SortOrder
    password?: SortOrder
    fullName?: SortOrder
    phone?: SortOrder
    role?: SortOrder
    region?: SortOrder
    district?: SortOrder
    city?: SortOrder
    position?: SortOrder
    isActive?: SortOrder
    lastLogin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdFamilies?: FamilyOrderByRelationAggregateInput
    updatedFamilies?: FamilyOrderByRelationAggregateInput
    createdSupportMeasures?: SupportMeasureOrderByRelationAggregateInput
    documents?: DocumentOrderByRelationAggregateInput
    notifications?: NotificationOrderByRelationAggregateInput
    notificationsReceived?: NotificationOrderByRelationAggregateInput
    FamilyHistory?: FamilyHistoryOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    iin?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    password?: StringFilter<"User"> | string
    fullName?: StringFilter<"User"> | string
    phone?: StringNullableFilter<"User"> | string | null
    role?: StringFilter<"User"> | string
    region?: StringNullableFilter<"User"> | string | null
    district?: StringNullableFilter<"User"> | string | null
    city?: StringNullableFilter<"User"> | string | null
    position?: StringNullableFilter<"User"> | string | null
    isActive?: BoolFilter<"User"> | boolean
    lastLogin?: DateTimeNullableFilter<"User"> | Date | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    createdFamilies?: FamilyListRelationFilter
    updatedFamilies?: FamilyListRelationFilter
    createdSupportMeasures?: SupportMeasureListRelationFilter
    documents?: DocumentListRelationFilter
    notifications?: NotificationListRelationFilter
    notificationsReceived?: NotificationListRelationFilter
    FamilyHistory?: FamilyHistoryListRelationFilter
  }, "id" | "iin">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    iin?: SortOrder
    password?: SortOrder
    fullName?: SortOrder
    phone?: SortOrder
    role?: SortOrder
    region?: SortOrder
    district?: SortOrder
    city?: SortOrder
    position?: SortOrder
    isActive?: SortOrder
    lastLogin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    iin?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    fullName?: StringWithAggregatesFilter<"User"> | string
    phone?: StringNullableWithAggregatesFilter<"User"> | string | null
    role?: StringWithAggregatesFilter<"User"> | string
    region?: StringNullableWithAggregatesFilter<"User"> | string | null
    district?: StringNullableWithAggregatesFilter<"User"> | string | null
    city?: StringNullableWithAggregatesFilter<"User"> | string | null
    position?: StringNullableWithAggregatesFilter<"User"> | string | null
    isActive?: BoolWithAggregatesFilter<"User"> | boolean
    lastLogin?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type FamilyWhereInput = {
    AND?: FamilyWhereInput | FamilyWhereInput[]
    OR?: FamilyWhereInput[]
    NOT?: FamilyWhereInput | FamilyWhereInput[]
    id?: StringFilter<"Family"> | string
    caseNumber?: StringFilter<"Family"> | string
    familyName?: StringFilter<"Family"> | string
    address?: StringFilter<"Family"> | string
    region?: StringFilter<"Family"> | string
    registrationAddress?: StringNullableFilter<"Family"> | string | null
    district?: StringFilter<"Family"> | string
    city?: StringNullableFilter<"Family"> | string | null
    status?: StringFilter<"Family"> | string
    riskLevel?: StringFilter<"Family"> | string
    riskFactors?: StringNullableListFilter<"Family">
    registrationDate?: DateTimeFilter<"Family"> | Date | string
    lastUpdate?: DateTimeFilter<"Family"> | Date | string
    isActive?: BoolFilter<"Family"> | boolean
    inactiveReason?: StringNullableFilter<"Family"> | string | null
    notes?: StringNullableFilter<"Family"> | string | null
    children?: IntNullableFilter<"Family"> | number | null
    settingReason?: StringNullableFilter<"Family"> | string | null
    inspectionStatus?: StringNullableFilter<"Family"> | string | null
    familyType?: StringNullableFilter<"Family"> | string | null
    housingType?: StringNullableFilter<"Family"> | string | null
    employment?: StringNullableFilter<"Family"> | string | null
    workplace?: StringNullableFilter<"Family"> | string | null
    tzhsReason?: StringNullableFilter<"Family"> | string | null
    nbReason?: StringNullableFilter<"Family"> | string | null
    familyIncome?: StringNullableFilter<"Family"> | string | null
    needsSupport?: BoolFilter<"Family"> | boolean
    needsEducation?: BoolFilter<"Family"> | boolean
    needsHealth?: BoolFilter<"Family"> | boolean
    needsPolice?: BoolFilter<"Family"> | boolean
    hasDisability?: BoolFilter<"Family"> | boolean
    contactPhone?: StringNullableFilter<"Family"> | string | null
    contactEmail?: StringNullableFilter<"Family"> | string | null
    incomeSource?: StringNullableFilter<"Family"> | string | null
    monthlyIncome?: FloatNullableFilter<"Family"> | number | null
    socialBenefits?: StringNullableListFilter<"Family">
    referralSource?: StringNullableFilter<"Family"> | string | null
    primaryLanguage?: StringNullableFilter<"Family"> | string | null
    hasInterpreterNeeded?: BoolFilter<"Family"> | boolean
    createdById?: StringFilter<"Family"> | string
    updatedById?: StringFilter<"Family"> | string
    createdBy?: XOR<UserRelationFilter, UserWhereInput>
    updatedBy?: XOR<UserRelationFilter, UserWhereInput>
    members?: FamilyMemberListRelationFilter
    supportMeasures?: SupportMeasureListRelationFilter
    documents?: DocumentListRelationFilter
    history?: FamilyHistoryListRelationFilter
  }

  export type FamilyOrderByWithRelationInput = {
    id?: SortOrder
    caseNumber?: SortOrder
    familyName?: SortOrder
    address?: SortOrder
    region?: SortOrder
    registrationAddress?: SortOrder
    district?: SortOrder
    city?: SortOrder
    status?: SortOrder
    riskLevel?: SortOrder
    riskFactors?: SortOrder
    registrationDate?: SortOrder
    lastUpdate?: SortOrder
    isActive?: SortOrder
    inactiveReason?: SortOrder
    notes?: SortOrder
    children?: SortOrder
    settingReason?: SortOrder
    inspectionStatus?: SortOrder
    familyType?: SortOrder
    housingType?: SortOrder
    employment?: SortOrder
    workplace?: SortOrder
    tzhsReason?: SortOrder
    nbReason?: SortOrder
    familyIncome?: SortOrder
    needsSupport?: SortOrder
    needsEducation?: SortOrder
    needsHealth?: SortOrder
    needsPolice?: SortOrder
    hasDisability?: SortOrder
    contactPhone?: SortOrder
    contactEmail?: SortOrder
    incomeSource?: SortOrder
    monthlyIncome?: SortOrder
    socialBenefits?: SortOrder
    referralSource?: SortOrder
    primaryLanguage?: SortOrder
    hasInterpreterNeeded?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    members?: FamilyMemberOrderByRelationAggregateInput
    supportMeasures?: SupportMeasureOrderByRelationAggregateInput
    documents?: DocumentOrderByRelationAggregateInput
    history?: FamilyHistoryOrderByRelationAggregateInput
  }

  export type FamilyWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    caseNumber?: string
    AND?: FamilyWhereInput | FamilyWhereInput[]
    OR?: FamilyWhereInput[]
    NOT?: FamilyWhereInput | FamilyWhereInput[]
    familyName?: StringFilter<"Family"> | string
    address?: StringFilter<"Family"> | string
    region?: StringFilter<"Family"> | string
    registrationAddress?: StringNullableFilter<"Family"> | string | null
    district?: StringFilter<"Family"> | string
    city?: StringNullableFilter<"Family"> | string | null
    status?: StringFilter<"Family"> | string
    riskLevel?: StringFilter<"Family"> | string
    riskFactors?: StringNullableListFilter<"Family">
    registrationDate?: DateTimeFilter<"Family"> | Date | string
    lastUpdate?: DateTimeFilter<"Family"> | Date | string
    isActive?: BoolFilter<"Family"> | boolean
    inactiveReason?: StringNullableFilter<"Family"> | string | null
    notes?: StringNullableFilter<"Family"> | string | null
    children?: IntNullableFilter<"Family"> | number | null
    settingReason?: StringNullableFilter<"Family"> | string | null
    inspectionStatus?: StringNullableFilter<"Family"> | string | null
    familyType?: StringNullableFilter<"Family"> | string | null
    housingType?: StringNullableFilter<"Family"> | string | null
    employment?: StringNullableFilter<"Family"> | string | null
    workplace?: StringNullableFilter<"Family"> | string | null
    tzhsReason?: StringNullableFilter<"Family"> | string | null
    nbReason?: StringNullableFilter<"Family"> | string | null
    familyIncome?: StringNullableFilter<"Family"> | string | null
    needsSupport?: BoolFilter<"Family"> | boolean
    needsEducation?: BoolFilter<"Family"> | boolean
    needsHealth?: BoolFilter<"Family"> | boolean
    needsPolice?: BoolFilter<"Family"> | boolean
    hasDisability?: BoolFilter<"Family"> | boolean
    contactPhone?: StringNullableFilter<"Family"> | string | null
    contactEmail?: StringNullableFilter<"Family"> | string | null
    incomeSource?: StringNullableFilter<"Family"> | string | null
    monthlyIncome?: FloatNullableFilter<"Family"> | number | null
    socialBenefits?: StringNullableListFilter<"Family">
    referralSource?: StringNullableFilter<"Family"> | string | null
    primaryLanguage?: StringNullableFilter<"Family"> | string | null
    hasInterpreterNeeded?: BoolFilter<"Family"> | boolean
    createdById?: StringFilter<"Family"> | string
    updatedById?: StringFilter<"Family"> | string
    createdBy?: XOR<UserRelationFilter, UserWhereInput>
    updatedBy?: XOR<UserRelationFilter, UserWhereInput>
    members?: FamilyMemberListRelationFilter
    supportMeasures?: SupportMeasureListRelationFilter
    documents?: DocumentListRelationFilter
    history?: FamilyHistoryListRelationFilter
  }, "id" | "caseNumber">

  export type FamilyOrderByWithAggregationInput = {
    id?: SortOrder
    caseNumber?: SortOrder
    familyName?: SortOrder
    address?: SortOrder
    region?: SortOrder
    registrationAddress?: SortOrder
    district?: SortOrder
    city?: SortOrder
    status?: SortOrder
    riskLevel?: SortOrder
    riskFactors?: SortOrder
    registrationDate?: SortOrder
    lastUpdate?: SortOrder
    isActive?: SortOrder
    inactiveReason?: SortOrder
    notes?: SortOrder
    children?: SortOrder
    settingReason?: SortOrder
    inspectionStatus?: SortOrder
    familyType?: SortOrder
    housingType?: SortOrder
    employment?: SortOrder
    workplace?: SortOrder
    tzhsReason?: SortOrder
    nbReason?: SortOrder
    familyIncome?: SortOrder
    needsSupport?: SortOrder
    needsEducation?: SortOrder
    needsHealth?: SortOrder
    needsPolice?: SortOrder
    hasDisability?: SortOrder
    contactPhone?: SortOrder
    contactEmail?: SortOrder
    incomeSource?: SortOrder
    monthlyIncome?: SortOrder
    socialBenefits?: SortOrder
    referralSource?: SortOrder
    primaryLanguage?: SortOrder
    hasInterpreterNeeded?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    _count?: FamilyCountOrderByAggregateInput
    _avg?: FamilyAvgOrderByAggregateInput
    _max?: FamilyMaxOrderByAggregateInput
    _min?: FamilyMinOrderByAggregateInput
    _sum?: FamilySumOrderByAggregateInput
  }

  export type FamilyScalarWhereWithAggregatesInput = {
    AND?: FamilyScalarWhereWithAggregatesInput | FamilyScalarWhereWithAggregatesInput[]
    OR?: FamilyScalarWhereWithAggregatesInput[]
    NOT?: FamilyScalarWhereWithAggregatesInput | FamilyScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Family"> | string
    caseNumber?: StringWithAggregatesFilter<"Family"> | string
    familyName?: StringWithAggregatesFilter<"Family"> | string
    address?: StringWithAggregatesFilter<"Family"> | string
    region?: StringWithAggregatesFilter<"Family"> | string
    registrationAddress?: StringNullableWithAggregatesFilter<"Family"> | string | null
    district?: StringWithAggregatesFilter<"Family"> | string
    city?: StringNullableWithAggregatesFilter<"Family"> | string | null
    status?: StringWithAggregatesFilter<"Family"> | string
    riskLevel?: StringWithAggregatesFilter<"Family"> | string
    riskFactors?: StringNullableListFilter<"Family">
    registrationDate?: DateTimeWithAggregatesFilter<"Family"> | Date | string
    lastUpdate?: DateTimeWithAggregatesFilter<"Family"> | Date | string
    isActive?: BoolWithAggregatesFilter<"Family"> | boolean
    inactiveReason?: StringNullableWithAggregatesFilter<"Family"> | string | null
    notes?: StringNullableWithAggregatesFilter<"Family"> | string | null
    children?: IntNullableWithAggregatesFilter<"Family"> | number | null
    settingReason?: StringNullableWithAggregatesFilter<"Family"> | string | null
    inspectionStatus?: StringNullableWithAggregatesFilter<"Family"> | string | null
    familyType?: StringNullableWithAggregatesFilter<"Family"> | string | null
    housingType?: StringNullableWithAggregatesFilter<"Family"> | string | null
    employment?: StringNullableWithAggregatesFilter<"Family"> | string | null
    workplace?: StringNullableWithAggregatesFilter<"Family"> | string | null
    tzhsReason?: StringNullableWithAggregatesFilter<"Family"> | string | null
    nbReason?: StringNullableWithAggregatesFilter<"Family"> | string | null
    familyIncome?: StringNullableWithAggregatesFilter<"Family"> | string | null
    needsSupport?: BoolWithAggregatesFilter<"Family"> | boolean
    needsEducation?: BoolWithAggregatesFilter<"Family"> | boolean
    needsHealth?: BoolWithAggregatesFilter<"Family"> | boolean
    needsPolice?: BoolWithAggregatesFilter<"Family"> | boolean
    hasDisability?: BoolWithAggregatesFilter<"Family"> | boolean
    contactPhone?: StringNullableWithAggregatesFilter<"Family"> | string | null
    contactEmail?: StringNullableWithAggregatesFilter<"Family"> | string | null
    incomeSource?: StringNullableWithAggregatesFilter<"Family"> | string | null
    monthlyIncome?: FloatNullableWithAggregatesFilter<"Family"> | number | null
    socialBenefits?: StringNullableListFilter<"Family">
    referralSource?: StringNullableWithAggregatesFilter<"Family"> | string | null
    primaryLanguage?: StringNullableWithAggregatesFilter<"Family"> | string | null
    hasInterpreterNeeded?: BoolWithAggregatesFilter<"Family"> | boolean
    createdById?: StringWithAggregatesFilter<"Family"> | string
    updatedById?: StringWithAggregatesFilter<"Family"> | string
  }

  export type FamilyMemberWhereInput = {
    AND?: FamilyMemberWhereInput | FamilyMemberWhereInput[]
    OR?: FamilyMemberWhereInput[]
    NOT?: FamilyMemberWhereInput | FamilyMemberWhereInput[]
    id?: StringFilter<"FamilyMember"> | string
    familyId?: StringFilter<"FamilyMember"> | string
    firstName?: StringFilter<"FamilyMember"> | string
    lastName?: StringFilter<"FamilyMember"> | string
    middleName?: StringNullableFilter<"FamilyMember"> | string | null
    birthDate?: DateTimeNullableFilter<"FamilyMember"> | Date | string | null
    gender?: StringNullableFilter<"FamilyMember"> | string | null
    relationship?: StringFilter<"FamilyMember"> | string
    documentType?: StringNullableFilter<"FamilyMember"> | string | null
    documentNumber?: StringNullableFilter<"FamilyMember"> | string | null
    documentIssueDate?: DateTimeNullableFilter<"FamilyMember"> | Date | string | null
    documentExpiryDate?: DateTimeNullableFilter<"FamilyMember"> | Date | string | null
    registrationAddress?: StringNullableFilter<"FamilyMember"> | string | null
    education?: StringNullableFilter<"FamilyMember"> | string | null
    grade?: StringNullableFilter<"FamilyMember"> | string | null
    institution?: StringNullableFilter<"FamilyMember"> | string | null
    course?: StringNullableFilter<"FamilyMember"> | string | null
    funding?: StringNullableFilter<"FamilyMember"> | string | null
    meals?: StringNullableFilter<"FamilyMember"> | string | null
    notes?: StringNullableFilter<"FamilyMember"> | string | null
    status?: StringNullableFilter<"FamilyMember"> | string | null
    isActive?: BoolFilter<"FamilyMember"> | boolean
    citizenship?: StringNullableFilter<"FamilyMember"> | string | null
    ethnicity?: StringNullableFilter<"FamilyMember"> | string | null
    maritalStatus?: StringNullableFilter<"FamilyMember"> | string | null
    phoneNumber?: StringNullableFilter<"FamilyMember"> | string | null
    email?: StringNullableFilter<"FamilyMember"> | string | null
    employment?: StringNullableFilter<"FamilyMember"> | string | null
    healthStatus?: StringNullableFilter<"FamilyMember"> | string | null
    disabilities?: StringNullableFilter<"FamilyMember"> | string | null
    specialNeeds?: BoolFilter<"FamilyMember"> | boolean
    isHeadOfHousehold?: BoolFilter<"FamilyMember"> | boolean
    primaryCaregiver?: BoolFilter<"FamilyMember"> | boolean
    incomeAmount?: FloatNullableFilter<"FamilyMember"> | number | null
    incomeSource?: StringNullableFilter<"FamilyMember"> | string | null
    medicalInsurance?: StringNullableFilter<"FamilyMember"> | string | null
    chronicConditions?: StringNullableListFilter<"FamilyMember">
    allergies?: StringNullableListFilter<"FamilyMember">
    medications?: StringNullableListFilter<"FamilyMember">
    family?: XOR<FamilyRelationFilter, FamilyWhereInput>
    supportMeasures?: SupportMeasureListRelationFilter
    documents?: DocumentListRelationFilter
  }

  export type FamilyMemberOrderByWithRelationInput = {
    id?: SortOrder
    familyId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    middleName?: SortOrder
    birthDate?: SortOrder
    gender?: SortOrder
    relationship?: SortOrder
    documentType?: SortOrder
    documentNumber?: SortOrder
    documentIssueDate?: SortOrder
    documentExpiryDate?: SortOrder
    registrationAddress?: SortOrder
    education?: SortOrder
    grade?: SortOrder
    institution?: SortOrder
    course?: SortOrder
    funding?: SortOrder
    meals?: SortOrder
    notes?: SortOrder
    status?: SortOrder
    isActive?: SortOrder
    citizenship?: SortOrder
    ethnicity?: SortOrder
    maritalStatus?: SortOrder
    phoneNumber?: SortOrder
    email?: SortOrder
    employment?: SortOrder
    healthStatus?: SortOrder
    disabilities?: SortOrder
    specialNeeds?: SortOrder
    isHeadOfHousehold?: SortOrder
    primaryCaregiver?: SortOrder
    incomeAmount?: SortOrder
    incomeSource?: SortOrder
    medicalInsurance?: SortOrder
    chronicConditions?: SortOrder
    allergies?: SortOrder
    medications?: SortOrder
    family?: FamilyOrderByWithRelationInput
    supportMeasures?: SupportMeasureOrderByRelationAggregateInput
    documents?: DocumentOrderByRelationAggregateInput
  }

  export type FamilyMemberWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    documentNumber?: string
    AND?: FamilyMemberWhereInput | FamilyMemberWhereInput[]
    OR?: FamilyMemberWhereInput[]
    NOT?: FamilyMemberWhereInput | FamilyMemberWhereInput[]
    familyId?: StringFilter<"FamilyMember"> | string
    firstName?: StringFilter<"FamilyMember"> | string
    lastName?: StringFilter<"FamilyMember"> | string
    middleName?: StringNullableFilter<"FamilyMember"> | string | null
    birthDate?: DateTimeNullableFilter<"FamilyMember"> | Date | string | null
    gender?: StringNullableFilter<"FamilyMember"> | string | null
    relationship?: StringFilter<"FamilyMember"> | string
    documentType?: StringNullableFilter<"FamilyMember"> | string | null
    documentIssueDate?: DateTimeNullableFilter<"FamilyMember"> | Date | string | null
    documentExpiryDate?: DateTimeNullableFilter<"FamilyMember"> | Date | string | null
    registrationAddress?: StringNullableFilter<"FamilyMember"> | string | null
    education?: StringNullableFilter<"FamilyMember"> | string | null
    grade?: StringNullableFilter<"FamilyMember"> | string | null
    institution?: StringNullableFilter<"FamilyMember"> | string | null
    course?: StringNullableFilter<"FamilyMember"> | string | null
    funding?: StringNullableFilter<"FamilyMember"> | string | null
    meals?: StringNullableFilter<"FamilyMember"> | string | null
    notes?: StringNullableFilter<"FamilyMember"> | string | null
    status?: StringNullableFilter<"FamilyMember"> | string | null
    isActive?: BoolFilter<"FamilyMember"> | boolean
    citizenship?: StringNullableFilter<"FamilyMember"> | string | null
    ethnicity?: StringNullableFilter<"FamilyMember"> | string | null
    maritalStatus?: StringNullableFilter<"FamilyMember"> | string | null
    phoneNumber?: StringNullableFilter<"FamilyMember"> | string | null
    email?: StringNullableFilter<"FamilyMember"> | string | null
    employment?: StringNullableFilter<"FamilyMember"> | string | null
    healthStatus?: StringNullableFilter<"FamilyMember"> | string | null
    disabilities?: StringNullableFilter<"FamilyMember"> | string | null
    specialNeeds?: BoolFilter<"FamilyMember"> | boolean
    isHeadOfHousehold?: BoolFilter<"FamilyMember"> | boolean
    primaryCaregiver?: BoolFilter<"FamilyMember"> | boolean
    incomeAmount?: FloatNullableFilter<"FamilyMember"> | number | null
    incomeSource?: StringNullableFilter<"FamilyMember"> | string | null
    medicalInsurance?: StringNullableFilter<"FamilyMember"> | string | null
    chronicConditions?: StringNullableListFilter<"FamilyMember">
    allergies?: StringNullableListFilter<"FamilyMember">
    medications?: StringNullableListFilter<"FamilyMember">
    family?: XOR<FamilyRelationFilter, FamilyWhereInput>
    supportMeasures?: SupportMeasureListRelationFilter
    documents?: DocumentListRelationFilter
  }, "id" | "documentNumber">

  export type FamilyMemberOrderByWithAggregationInput = {
    id?: SortOrder
    familyId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    middleName?: SortOrder
    birthDate?: SortOrder
    gender?: SortOrder
    relationship?: SortOrder
    documentType?: SortOrder
    documentNumber?: SortOrder
    documentIssueDate?: SortOrder
    documentExpiryDate?: SortOrder
    registrationAddress?: SortOrder
    education?: SortOrder
    grade?: SortOrder
    institution?: SortOrder
    course?: SortOrder
    funding?: SortOrder
    meals?: SortOrder
    notes?: SortOrder
    status?: SortOrder
    isActive?: SortOrder
    citizenship?: SortOrder
    ethnicity?: SortOrder
    maritalStatus?: SortOrder
    phoneNumber?: SortOrder
    email?: SortOrder
    employment?: SortOrder
    healthStatus?: SortOrder
    disabilities?: SortOrder
    specialNeeds?: SortOrder
    isHeadOfHousehold?: SortOrder
    primaryCaregiver?: SortOrder
    incomeAmount?: SortOrder
    incomeSource?: SortOrder
    medicalInsurance?: SortOrder
    chronicConditions?: SortOrder
    allergies?: SortOrder
    medications?: SortOrder
    _count?: FamilyMemberCountOrderByAggregateInput
    _avg?: FamilyMemberAvgOrderByAggregateInput
    _max?: FamilyMemberMaxOrderByAggregateInput
    _min?: FamilyMemberMinOrderByAggregateInput
    _sum?: FamilyMemberSumOrderByAggregateInput
  }

  export type FamilyMemberScalarWhereWithAggregatesInput = {
    AND?: FamilyMemberScalarWhereWithAggregatesInput | FamilyMemberScalarWhereWithAggregatesInput[]
    OR?: FamilyMemberScalarWhereWithAggregatesInput[]
    NOT?: FamilyMemberScalarWhereWithAggregatesInput | FamilyMemberScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"FamilyMember"> | string
    familyId?: StringWithAggregatesFilter<"FamilyMember"> | string
    firstName?: StringWithAggregatesFilter<"FamilyMember"> | string
    lastName?: StringWithAggregatesFilter<"FamilyMember"> | string
    middleName?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    birthDate?: DateTimeNullableWithAggregatesFilter<"FamilyMember"> | Date | string | null
    gender?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    relationship?: StringWithAggregatesFilter<"FamilyMember"> | string
    documentType?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    documentNumber?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    documentIssueDate?: DateTimeNullableWithAggregatesFilter<"FamilyMember"> | Date | string | null
    documentExpiryDate?: DateTimeNullableWithAggregatesFilter<"FamilyMember"> | Date | string | null
    registrationAddress?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    education?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    grade?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    institution?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    course?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    funding?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    meals?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    notes?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    status?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    isActive?: BoolWithAggregatesFilter<"FamilyMember"> | boolean
    citizenship?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    ethnicity?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    maritalStatus?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    phoneNumber?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    email?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    employment?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    healthStatus?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    disabilities?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    specialNeeds?: BoolWithAggregatesFilter<"FamilyMember"> | boolean
    isHeadOfHousehold?: BoolWithAggregatesFilter<"FamilyMember"> | boolean
    primaryCaregiver?: BoolWithAggregatesFilter<"FamilyMember"> | boolean
    incomeAmount?: FloatNullableWithAggregatesFilter<"FamilyMember"> | number | null
    incomeSource?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    medicalInsurance?: StringNullableWithAggregatesFilter<"FamilyMember"> | string | null
    chronicConditions?: StringNullableListFilter<"FamilyMember">
    allergies?: StringNullableListFilter<"FamilyMember">
    medications?: StringNullableListFilter<"FamilyMember">
  }

  export type SupportMeasureWhereInput = {
    AND?: SupportMeasureWhereInput | SupportMeasureWhereInput[]
    OR?: SupportMeasureWhereInput[]
    NOT?: SupportMeasureWhereInput | SupportMeasureWhereInput[]
    id?: StringFilter<"SupportMeasure"> | string
    familyId?: StringFilter<"SupportMeasure"> | string
    memberId?: StringNullableFilter<"SupportMeasure"> | string | null
    type?: StringFilter<"SupportMeasure"> | string
    description?: StringFilter<"SupportMeasure"> | string
    category?: StringNullableFilter<"SupportMeasure"> | string | null
    startDate?: DateTimeFilter<"SupportMeasure"> | Date | string
    endDate?: DateTimeNullableFilter<"SupportMeasure"> | Date | string | null
    status?: StringFilter<"SupportMeasure"> | string
    provider?: StringNullableFilter<"SupportMeasure"> | string | null
    result?: StringNullableFilter<"SupportMeasure"> | string | null
    notes?: StringNullableFilter<"SupportMeasure"> | string | null
    createdAt?: DateTimeFilter<"SupportMeasure"> | Date | string
    priority?: StringNullableFilter<"SupportMeasure"> | string | null
    cost?: FloatNullableFilter<"SupportMeasure"> | number | null
    fundingSource?: StringNullableFilter<"SupportMeasure"> | string | null
    contactPerson?: StringNullableFilter<"SupportMeasure"> | string | null
    contactPhone?: StringNullableFilter<"SupportMeasure"> | string | null
    contactEmail?: StringNullableFilter<"SupportMeasure"> | string | null
    frequency?: StringNullableFilter<"SupportMeasure"> | string | null
    location?: StringNullableFilter<"SupportMeasure"> | string | null
    followUpDate?: DateTimeNullableFilter<"SupportMeasure"> | Date | string | null
    evaluationDate?: DateTimeNullableFilter<"SupportMeasure"> | Date | string | null
    effectiveness?: StringNullableFilter<"SupportMeasure"> | string | null
    createdById?: StringFilter<"SupportMeasure"> | string
    family?: XOR<FamilyRelationFilter, FamilyWhereInput>
    member?: XOR<FamilyMemberNullableRelationFilter, FamilyMemberWhereInput> | null
    createdBy?: XOR<UserRelationFilter, UserWhereInput>
    documents?: DocumentListRelationFilter
  }

  export type SupportMeasureOrderByWithRelationInput = {
    id?: SortOrder
    familyId?: SortOrder
    memberId?: SortOrder
    type?: SortOrder
    description?: SortOrder
    category?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    status?: SortOrder
    provider?: SortOrder
    result?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    priority?: SortOrder
    cost?: SortOrder
    fundingSource?: SortOrder
    contactPerson?: SortOrder
    contactPhone?: SortOrder
    contactEmail?: SortOrder
    frequency?: SortOrder
    location?: SortOrder
    followUpDate?: SortOrder
    evaluationDate?: SortOrder
    effectiveness?: SortOrder
    createdById?: SortOrder
    family?: FamilyOrderByWithRelationInput
    member?: FamilyMemberOrderByWithRelationInput
    createdBy?: UserOrderByWithRelationInput
    documents?: DocumentOrderByRelationAggregateInput
  }

  export type SupportMeasureWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SupportMeasureWhereInput | SupportMeasureWhereInput[]
    OR?: SupportMeasureWhereInput[]
    NOT?: SupportMeasureWhereInput | SupportMeasureWhereInput[]
    familyId?: StringFilter<"SupportMeasure"> | string
    memberId?: StringNullableFilter<"SupportMeasure"> | string | null
    type?: StringFilter<"SupportMeasure"> | string
    description?: StringFilter<"SupportMeasure"> | string
    category?: StringNullableFilter<"SupportMeasure"> | string | null
    startDate?: DateTimeFilter<"SupportMeasure"> | Date | string
    endDate?: DateTimeNullableFilter<"SupportMeasure"> | Date | string | null
    status?: StringFilter<"SupportMeasure"> | string
    provider?: StringNullableFilter<"SupportMeasure"> | string | null
    result?: StringNullableFilter<"SupportMeasure"> | string | null
    notes?: StringNullableFilter<"SupportMeasure"> | string | null
    createdAt?: DateTimeFilter<"SupportMeasure"> | Date | string
    priority?: StringNullableFilter<"SupportMeasure"> | string | null
    cost?: FloatNullableFilter<"SupportMeasure"> | number | null
    fundingSource?: StringNullableFilter<"SupportMeasure"> | string | null
    contactPerson?: StringNullableFilter<"SupportMeasure"> | string | null
    contactPhone?: StringNullableFilter<"SupportMeasure"> | string | null
    contactEmail?: StringNullableFilter<"SupportMeasure"> | string | null
    frequency?: StringNullableFilter<"SupportMeasure"> | string | null
    location?: StringNullableFilter<"SupportMeasure"> | string | null
    followUpDate?: DateTimeNullableFilter<"SupportMeasure"> | Date | string | null
    evaluationDate?: DateTimeNullableFilter<"SupportMeasure"> | Date | string | null
    effectiveness?: StringNullableFilter<"SupportMeasure"> | string | null
    createdById?: StringFilter<"SupportMeasure"> | string
    family?: XOR<FamilyRelationFilter, FamilyWhereInput>
    member?: XOR<FamilyMemberNullableRelationFilter, FamilyMemberWhereInput> | null
    createdBy?: XOR<UserRelationFilter, UserWhereInput>
    documents?: DocumentListRelationFilter
  }, "id">

  export type SupportMeasureOrderByWithAggregationInput = {
    id?: SortOrder
    familyId?: SortOrder
    memberId?: SortOrder
    type?: SortOrder
    description?: SortOrder
    category?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    status?: SortOrder
    provider?: SortOrder
    result?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    priority?: SortOrder
    cost?: SortOrder
    fundingSource?: SortOrder
    contactPerson?: SortOrder
    contactPhone?: SortOrder
    contactEmail?: SortOrder
    frequency?: SortOrder
    location?: SortOrder
    followUpDate?: SortOrder
    evaluationDate?: SortOrder
    effectiveness?: SortOrder
    createdById?: SortOrder
    _count?: SupportMeasureCountOrderByAggregateInput
    _avg?: SupportMeasureAvgOrderByAggregateInput
    _max?: SupportMeasureMaxOrderByAggregateInput
    _min?: SupportMeasureMinOrderByAggregateInput
    _sum?: SupportMeasureSumOrderByAggregateInput
  }

  export type SupportMeasureScalarWhereWithAggregatesInput = {
    AND?: SupportMeasureScalarWhereWithAggregatesInput | SupportMeasureScalarWhereWithAggregatesInput[]
    OR?: SupportMeasureScalarWhereWithAggregatesInput[]
    NOT?: SupportMeasureScalarWhereWithAggregatesInput | SupportMeasureScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SupportMeasure"> | string
    familyId?: StringWithAggregatesFilter<"SupportMeasure"> | string
    memberId?: StringNullableWithAggregatesFilter<"SupportMeasure"> | string | null
    type?: StringWithAggregatesFilter<"SupportMeasure"> | string
    description?: StringWithAggregatesFilter<"SupportMeasure"> | string
    category?: StringNullableWithAggregatesFilter<"SupportMeasure"> | string | null
    startDate?: DateTimeWithAggregatesFilter<"SupportMeasure"> | Date | string
    endDate?: DateTimeNullableWithAggregatesFilter<"SupportMeasure"> | Date | string | null
    status?: StringWithAggregatesFilter<"SupportMeasure"> | string
    provider?: StringNullableWithAggregatesFilter<"SupportMeasure"> | string | null
    result?: StringNullableWithAggregatesFilter<"SupportMeasure"> | string | null
    notes?: StringNullableWithAggregatesFilter<"SupportMeasure"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"SupportMeasure"> | Date | string
    priority?: StringNullableWithAggregatesFilter<"SupportMeasure"> | string | null
    cost?: FloatNullableWithAggregatesFilter<"SupportMeasure"> | number | null
    fundingSource?: StringNullableWithAggregatesFilter<"SupportMeasure"> | string | null
    contactPerson?: StringNullableWithAggregatesFilter<"SupportMeasure"> | string | null
    contactPhone?: StringNullableWithAggregatesFilter<"SupportMeasure"> | string | null
    contactEmail?: StringNullableWithAggregatesFilter<"SupportMeasure"> | string | null
    frequency?: StringNullableWithAggregatesFilter<"SupportMeasure"> | string | null
    location?: StringNullableWithAggregatesFilter<"SupportMeasure"> | string | null
    followUpDate?: DateTimeNullableWithAggregatesFilter<"SupportMeasure"> | Date | string | null
    evaluationDate?: DateTimeNullableWithAggregatesFilter<"SupportMeasure"> | Date | string | null
    effectiveness?: StringNullableWithAggregatesFilter<"SupportMeasure"> | string | null
    createdById?: StringWithAggregatesFilter<"SupportMeasure"> | string
  }

  export type DocumentWhereInput = {
    AND?: DocumentWhereInput | DocumentWhereInput[]
    OR?: DocumentWhereInput[]
    NOT?: DocumentWhereInput | DocumentWhereInput[]
    id?: StringFilter<"Document"> | string
    title?: StringFilter<"Document"> | string
    type?: StringFilter<"Document"> | string
    fileUrl?: StringFilter<"Document"> | string
    mimeType?: StringFilter<"Document"> | string
    fileSize?: IntFilter<"Document"> | number
    familyId?: StringNullableFilter<"Document"> | string | null
    memberId?: StringNullableFilter<"Document"> | string | null
    supportId?: StringNullableFilter<"Document"> | string | null
    uploadDate?: DateTimeFilter<"Document"> | Date | string
    notes?: StringNullableFilter<"Document"> | string | null
    category?: StringNullableFilter<"Document"> | string | null
    expirationDate?: DateTimeNullableFilter<"Document"> | Date | string | null
    isConfidential?: BoolFilter<"Document"> | boolean
    tags?: StringNullableListFilter<"Document">
    status?: StringNullableFilter<"Document"> | string | null
    uploadedById?: StringFilter<"Document"> | string
    family?: XOR<FamilyNullableRelationFilter, FamilyWhereInput> | null
    member?: XOR<FamilyMemberNullableRelationFilter, FamilyMemberWhereInput> | null
    supportMeasure?: XOR<SupportMeasureNullableRelationFilter, SupportMeasureWhereInput> | null
    uploadedBy?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type DocumentOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    type?: SortOrder
    fileUrl?: SortOrder
    mimeType?: SortOrder
    fileSize?: SortOrder
    familyId?: SortOrder
    memberId?: SortOrder
    supportId?: SortOrder
    uploadDate?: SortOrder
    notes?: SortOrder
    category?: SortOrder
    expirationDate?: SortOrder
    isConfidential?: SortOrder
    tags?: SortOrder
    status?: SortOrder
    uploadedById?: SortOrder
    family?: FamilyOrderByWithRelationInput
    member?: FamilyMemberOrderByWithRelationInput
    supportMeasure?: SupportMeasureOrderByWithRelationInput
    uploadedBy?: UserOrderByWithRelationInput
  }

  export type DocumentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: DocumentWhereInput | DocumentWhereInput[]
    OR?: DocumentWhereInput[]
    NOT?: DocumentWhereInput | DocumentWhereInput[]
    title?: StringFilter<"Document"> | string
    type?: StringFilter<"Document"> | string
    fileUrl?: StringFilter<"Document"> | string
    mimeType?: StringFilter<"Document"> | string
    fileSize?: IntFilter<"Document"> | number
    familyId?: StringNullableFilter<"Document"> | string | null
    memberId?: StringNullableFilter<"Document"> | string | null
    supportId?: StringNullableFilter<"Document"> | string | null
    uploadDate?: DateTimeFilter<"Document"> | Date | string
    notes?: StringNullableFilter<"Document"> | string | null
    category?: StringNullableFilter<"Document"> | string | null
    expirationDate?: DateTimeNullableFilter<"Document"> | Date | string | null
    isConfidential?: BoolFilter<"Document"> | boolean
    tags?: StringNullableListFilter<"Document">
    status?: StringNullableFilter<"Document"> | string | null
    uploadedById?: StringFilter<"Document"> | string
    family?: XOR<FamilyNullableRelationFilter, FamilyWhereInput> | null
    member?: XOR<FamilyMemberNullableRelationFilter, FamilyMemberWhereInput> | null
    supportMeasure?: XOR<SupportMeasureNullableRelationFilter, SupportMeasureWhereInput> | null
    uploadedBy?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type DocumentOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    type?: SortOrder
    fileUrl?: SortOrder
    mimeType?: SortOrder
    fileSize?: SortOrder
    familyId?: SortOrder
    memberId?: SortOrder
    supportId?: SortOrder
    uploadDate?: SortOrder
    notes?: SortOrder
    category?: SortOrder
    expirationDate?: SortOrder
    isConfidential?: SortOrder
    tags?: SortOrder
    status?: SortOrder
    uploadedById?: SortOrder
    _count?: DocumentCountOrderByAggregateInput
    _avg?: DocumentAvgOrderByAggregateInput
    _max?: DocumentMaxOrderByAggregateInput
    _min?: DocumentMinOrderByAggregateInput
    _sum?: DocumentSumOrderByAggregateInput
  }

  export type DocumentScalarWhereWithAggregatesInput = {
    AND?: DocumentScalarWhereWithAggregatesInput | DocumentScalarWhereWithAggregatesInput[]
    OR?: DocumentScalarWhereWithAggregatesInput[]
    NOT?: DocumentScalarWhereWithAggregatesInput | DocumentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Document"> | string
    title?: StringWithAggregatesFilter<"Document"> | string
    type?: StringWithAggregatesFilter<"Document"> | string
    fileUrl?: StringWithAggregatesFilter<"Document"> | string
    mimeType?: StringWithAggregatesFilter<"Document"> | string
    fileSize?: IntWithAggregatesFilter<"Document"> | number
    familyId?: StringNullableWithAggregatesFilter<"Document"> | string | null
    memberId?: StringNullableWithAggregatesFilter<"Document"> | string | null
    supportId?: StringNullableWithAggregatesFilter<"Document"> | string | null
    uploadDate?: DateTimeWithAggregatesFilter<"Document"> | Date | string
    notes?: StringNullableWithAggregatesFilter<"Document"> | string | null
    category?: StringNullableWithAggregatesFilter<"Document"> | string | null
    expirationDate?: DateTimeNullableWithAggregatesFilter<"Document"> | Date | string | null
    isConfidential?: BoolWithAggregatesFilter<"Document"> | boolean
    tags?: StringNullableListFilter<"Document">
    status?: StringNullableWithAggregatesFilter<"Document"> | string | null
    uploadedById?: StringWithAggregatesFilter<"Document"> | string
  }

  export type FamilyHistoryWhereInput = {
    AND?: FamilyHistoryWhereInput | FamilyHistoryWhereInput[]
    OR?: FamilyHistoryWhereInput[]
    NOT?: FamilyHistoryWhereInput | FamilyHistoryWhereInput[]
    id?: StringFilter<"FamilyHistory"> | string
    familyId?: StringFilter<"FamilyHistory"> | string
    action?: StringFilter<"FamilyHistory"> | string
    description?: StringFilter<"FamilyHistory"> | string
    timestamp?: DateTimeFilter<"FamilyHistory"> | Date | string
    userId?: StringFilter<"FamilyHistory"> | string
    changedFields?: StringNullableListFilter<"FamilyHistory">
    previousValues?: JsonNullableFilter<"FamilyHistory">
    newValues?: JsonNullableFilter<"FamilyHistory">
    ipAddress?: StringNullableFilter<"FamilyHistory"> | string | null
    userAgent?: StringNullableFilter<"FamilyHistory"> | string | null
    family?: XOR<FamilyRelationFilter, FamilyWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type FamilyHistoryOrderByWithRelationInput = {
    id?: SortOrder
    familyId?: SortOrder
    action?: SortOrder
    description?: SortOrder
    timestamp?: SortOrder
    userId?: SortOrder
    changedFields?: SortOrder
    previousValues?: SortOrder
    newValues?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    family?: FamilyOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type FamilyHistoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FamilyHistoryWhereInput | FamilyHistoryWhereInput[]
    OR?: FamilyHistoryWhereInput[]
    NOT?: FamilyHistoryWhereInput | FamilyHistoryWhereInput[]
    familyId?: StringFilter<"FamilyHistory"> | string
    action?: StringFilter<"FamilyHistory"> | string
    description?: StringFilter<"FamilyHistory"> | string
    timestamp?: DateTimeFilter<"FamilyHistory"> | Date | string
    userId?: StringFilter<"FamilyHistory"> | string
    changedFields?: StringNullableListFilter<"FamilyHistory">
    previousValues?: JsonNullableFilter<"FamilyHistory">
    newValues?: JsonNullableFilter<"FamilyHistory">
    ipAddress?: StringNullableFilter<"FamilyHistory"> | string | null
    userAgent?: StringNullableFilter<"FamilyHistory"> | string | null
    family?: XOR<FamilyRelationFilter, FamilyWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type FamilyHistoryOrderByWithAggregationInput = {
    id?: SortOrder
    familyId?: SortOrder
    action?: SortOrder
    description?: SortOrder
    timestamp?: SortOrder
    userId?: SortOrder
    changedFields?: SortOrder
    previousValues?: SortOrder
    newValues?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    _count?: FamilyHistoryCountOrderByAggregateInput
    _max?: FamilyHistoryMaxOrderByAggregateInput
    _min?: FamilyHistoryMinOrderByAggregateInput
  }

  export type FamilyHistoryScalarWhereWithAggregatesInput = {
    AND?: FamilyHistoryScalarWhereWithAggregatesInput | FamilyHistoryScalarWhereWithAggregatesInput[]
    OR?: FamilyHistoryScalarWhereWithAggregatesInput[]
    NOT?: FamilyHistoryScalarWhereWithAggregatesInput | FamilyHistoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"FamilyHistory"> | string
    familyId?: StringWithAggregatesFilter<"FamilyHistory"> | string
    action?: StringWithAggregatesFilter<"FamilyHistory"> | string
    description?: StringWithAggregatesFilter<"FamilyHistory"> | string
    timestamp?: DateTimeWithAggregatesFilter<"FamilyHistory"> | Date | string
    userId?: StringWithAggregatesFilter<"FamilyHistory"> | string
    changedFields?: StringNullableListFilter<"FamilyHistory">
    previousValues?: JsonNullableWithAggregatesFilter<"FamilyHistory">
    newValues?: JsonNullableWithAggregatesFilter<"FamilyHistory">
    ipAddress?: StringNullableWithAggregatesFilter<"FamilyHistory"> | string | null
    userAgent?: StringNullableWithAggregatesFilter<"FamilyHistory"> | string | null
  }

  export type NotificationWhereInput = {
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    id?: StringFilter<"Notification"> | string
    title?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    type?: StringFilter<"Notification"> | string
    isRead?: BoolFilter<"Notification"> | boolean
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    priority?: StringNullableFilter<"Notification"> | string | null
    category?: StringNullableFilter<"Notification"> | string | null
    expiresAt?: DateTimeNullableFilter<"Notification"> | Date | string | null
    actionUrl?: StringNullableFilter<"Notification"> | string | null
    actionLabel?: StringNullableFilter<"Notification"> | string | null
    isArchived?: BoolFilter<"Notification"> | boolean
    creatorId?: StringFilter<"Notification"> | string
    recipientId?: StringFilter<"Notification"> | string
    creator?: XOR<UserRelationFilter, UserWhereInput>
    recipient?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type NotificationOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    isRead?: SortOrder
    createdAt?: SortOrder
    priority?: SortOrder
    category?: SortOrder
    expiresAt?: SortOrder
    actionUrl?: SortOrder
    actionLabel?: SortOrder
    isArchived?: SortOrder
    creatorId?: SortOrder
    recipientId?: SortOrder
    creator?: UserOrderByWithRelationInput
    recipient?: UserOrderByWithRelationInput
  }

  export type NotificationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    title?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    type?: StringFilter<"Notification"> | string
    isRead?: BoolFilter<"Notification"> | boolean
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    priority?: StringNullableFilter<"Notification"> | string | null
    category?: StringNullableFilter<"Notification"> | string | null
    expiresAt?: DateTimeNullableFilter<"Notification"> | Date | string | null
    actionUrl?: StringNullableFilter<"Notification"> | string | null
    actionLabel?: StringNullableFilter<"Notification"> | string | null
    isArchived?: BoolFilter<"Notification"> | boolean
    creatorId?: StringFilter<"Notification"> | string
    recipientId?: StringFilter<"Notification"> | string
    creator?: XOR<UserRelationFilter, UserWhereInput>
    recipient?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type NotificationOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    isRead?: SortOrder
    createdAt?: SortOrder
    priority?: SortOrder
    category?: SortOrder
    expiresAt?: SortOrder
    actionUrl?: SortOrder
    actionLabel?: SortOrder
    isArchived?: SortOrder
    creatorId?: SortOrder
    recipientId?: SortOrder
    _count?: NotificationCountOrderByAggregateInput
    _max?: NotificationMaxOrderByAggregateInput
    _min?: NotificationMinOrderByAggregateInput
  }

  export type NotificationScalarWhereWithAggregatesInput = {
    AND?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    OR?: NotificationScalarWhereWithAggregatesInput[]
    NOT?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Notification"> | string
    title?: StringWithAggregatesFilter<"Notification"> | string
    message?: StringWithAggregatesFilter<"Notification"> | string
    type?: StringWithAggregatesFilter<"Notification"> | string
    isRead?: BoolWithAggregatesFilter<"Notification"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Notification"> | Date | string
    priority?: StringNullableWithAggregatesFilter<"Notification"> | string | null
    category?: StringNullableWithAggregatesFilter<"Notification"> | string | null
    expiresAt?: DateTimeNullableWithAggregatesFilter<"Notification"> | Date | string | null
    actionUrl?: StringNullableWithAggregatesFilter<"Notification"> | string | null
    actionLabel?: StringNullableWithAggregatesFilter<"Notification"> | string | null
    isArchived?: BoolWithAggregatesFilter<"Notification"> | boolean
    creatorId?: StringWithAggregatesFilter<"Notification"> | string
    recipientId?: StringWithAggregatesFilter<"Notification"> | string
  }

  export type UserCreateInput = {
    id?: string
    iin: string
    password: string
    fullName: string
    phone?: string | null
    role: string
    region?: string | null
    district?: string | null
    city?: string | null
    position?: string | null
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdFamilies?: FamilyCreateNestedManyWithoutCreatedByInput
    updatedFamilies?: FamilyCreateNestedManyWithoutUpdatedByInput
    createdSupportMeasures?: SupportMeasureCreateNestedManyWithoutCreatedByInput
    documents?: DocumentCreateNestedManyWithoutUploadedByInput
    notifications?: NotificationCreateNestedManyWithoutCreatorInput
    notificationsReceived?: NotificationCreateNestedManyWithoutRecipientInput
    FamilyHistory?: FamilyHistoryCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    iin: string
    password: string
    fullName: string
    phone?: string | null
    role: string
    region?: string | null
    district?: string | null
    city?: string | null
    position?: string | null
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdFamilies?: FamilyUncheckedCreateNestedManyWithoutCreatedByInput
    updatedFamilies?: FamilyUncheckedCreateNestedManyWithoutUpdatedByInput
    createdSupportMeasures?: SupportMeasureUncheckedCreateNestedManyWithoutCreatedByInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUploadedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutCreatorInput
    notificationsReceived?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    FamilyHistory?: FamilyHistoryUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    iin?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdFamilies?: FamilyUpdateManyWithoutCreatedByNestedInput
    updatedFamilies?: FamilyUpdateManyWithoutUpdatedByNestedInput
    createdSupportMeasures?: SupportMeasureUpdateManyWithoutCreatedByNestedInput
    documents?: DocumentUpdateManyWithoutUploadedByNestedInput
    notifications?: NotificationUpdateManyWithoutCreatorNestedInput
    notificationsReceived?: NotificationUpdateManyWithoutRecipientNestedInput
    FamilyHistory?: FamilyHistoryUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    iin?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdFamilies?: FamilyUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedFamilies?: FamilyUncheckedUpdateManyWithoutUpdatedByNestedInput
    createdSupportMeasures?: SupportMeasureUncheckedUpdateManyWithoutCreatedByNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUploadedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutCreatorNestedInput
    notificationsReceived?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    FamilyHistory?: FamilyHistoryUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    iin: string
    password: string
    fullName: string
    phone?: string | null
    role: string
    region?: string | null
    district?: string | null
    city?: string | null
    position?: string | null
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    iin?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    iin?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FamilyCreateInput = {
    id?: string
    caseNumber: string
    familyName: string
    address: string
    region: string
    registrationAddress?: string | null
    district: string
    city?: string | null
    status: string
    riskLevel: string
    riskFactors?: FamilyCreateriskFactorsInput | string[]
    registrationDate: Date | string
    lastUpdate?: Date | string
    isActive?: boolean
    inactiveReason?: string | null
    notes?: string | null
    children?: number | null
    settingReason?: string | null
    inspectionStatus?: string | null
    familyType?: string | null
    housingType?: string | null
    employment?: string | null
    workplace?: string | null
    tzhsReason?: string | null
    nbReason?: string | null
    familyIncome?: string | null
    needsSupport?: boolean
    needsEducation?: boolean
    needsHealth?: boolean
    needsPolice?: boolean
    hasDisability?: boolean
    contactPhone?: string | null
    contactEmail?: string | null
    incomeSource?: string | null
    monthlyIncome?: number | null
    socialBenefits?: FamilyCreatesocialBenefitsInput | string[]
    referralSource?: string | null
    primaryLanguage?: string | null
    hasInterpreterNeeded?: boolean
    createdBy: UserCreateNestedOneWithoutCreatedFamiliesInput
    updatedBy: UserCreateNestedOneWithoutUpdatedFamiliesInput
    members?: FamilyMemberCreateNestedManyWithoutFamilyInput
    supportMeasures?: SupportMeasureCreateNestedManyWithoutFamilyInput
    documents?: DocumentCreateNestedManyWithoutFamilyInput
    history?: FamilyHistoryCreateNestedManyWithoutFamilyInput
  }

  export type FamilyUncheckedCreateInput = {
    id?: string
    caseNumber: string
    familyName: string
    address: string
    region: string
    registrationAddress?: string | null
    district: string
    city?: string | null
    status: string
    riskLevel: string
    riskFactors?: FamilyCreateriskFactorsInput | string[]
    registrationDate: Date | string
    lastUpdate?: Date | string
    isActive?: boolean
    inactiveReason?: string | null
    notes?: string | null
    children?: number | null
    settingReason?: string | null
    inspectionStatus?: string | null
    familyType?: string | null
    housingType?: string | null
    employment?: string | null
    workplace?: string | null
    tzhsReason?: string | null
    nbReason?: string | null
    familyIncome?: string | null
    needsSupport?: boolean
    needsEducation?: boolean
    needsHealth?: boolean
    needsPolice?: boolean
    hasDisability?: boolean
    contactPhone?: string | null
    contactEmail?: string | null
    incomeSource?: string | null
    monthlyIncome?: number | null
    socialBenefits?: FamilyCreatesocialBenefitsInput | string[]
    referralSource?: string | null
    primaryLanguage?: string | null
    hasInterpreterNeeded?: boolean
    createdById: string
    updatedById: string
    members?: FamilyMemberUncheckedCreateNestedManyWithoutFamilyInput
    supportMeasures?: SupportMeasureUncheckedCreateNestedManyWithoutFamilyInput
    documents?: DocumentUncheckedCreateNestedManyWithoutFamilyInput
    history?: FamilyHistoryUncheckedCreateNestedManyWithoutFamilyInput
  }

  export type FamilyUpdateInput = {
    caseNumber?: StringFieldUpdateOperationsInput | string
    familyName?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    district?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    riskLevel?: StringFieldUpdateOperationsInput | string
    riskFactors?: FamilyUpdateriskFactorsInput | string[]
    registrationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    inactiveReason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    children?: NullableIntFieldUpdateOperationsInput | number | null
    settingReason?: NullableStringFieldUpdateOperationsInput | string | null
    inspectionStatus?: NullableStringFieldUpdateOperationsInput | string | null
    familyType?: NullableStringFieldUpdateOperationsInput | string | null
    housingType?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    workplace?: NullableStringFieldUpdateOperationsInput | string | null
    tzhsReason?: NullableStringFieldUpdateOperationsInput | string | null
    nbReason?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableStringFieldUpdateOperationsInput | string | null
    needsSupport?: BoolFieldUpdateOperationsInput | boolean
    needsEducation?: BoolFieldUpdateOperationsInput | boolean
    needsHealth?: BoolFieldUpdateOperationsInput | boolean
    needsPolice?: BoolFieldUpdateOperationsInput | boolean
    hasDisability?: BoolFieldUpdateOperationsInput | boolean
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    socialBenefits?: FamilyUpdatesocialBenefitsInput | string[]
    referralSource?: NullableStringFieldUpdateOperationsInput | string | null
    primaryLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    hasInterpreterNeeded?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: UserUpdateOneRequiredWithoutCreatedFamiliesNestedInput
    updatedBy?: UserUpdateOneRequiredWithoutUpdatedFamiliesNestedInput
    members?: FamilyMemberUpdateManyWithoutFamilyNestedInput
    supportMeasures?: SupportMeasureUpdateManyWithoutFamilyNestedInput
    documents?: DocumentUpdateManyWithoutFamilyNestedInput
    history?: FamilyHistoryUpdateManyWithoutFamilyNestedInput
  }

  export type FamilyUncheckedUpdateInput = {
    caseNumber?: StringFieldUpdateOperationsInput | string
    familyName?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    district?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    riskLevel?: StringFieldUpdateOperationsInput | string
    riskFactors?: FamilyUpdateriskFactorsInput | string[]
    registrationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    inactiveReason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    children?: NullableIntFieldUpdateOperationsInput | number | null
    settingReason?: NullableStringFieldUpdateOperationsInput | string | null
    inspectionStatus?: NullableStringFieldUpdateOperationsInput | string | null
    familyType?: NullableStringFieldUpdateOperationsInput | string | null
    housingType?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    workplace?: NullableStringFieldUpdateOperationsInput | string | null
    tzhsReason?: NullableStringFieldUpdateOperationsInput | string | null
    nbReason?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableStringFieldUpdateOperationsInput | string | null
    needsSupport?: BoolFieldUpdateOperationsInput | boolean
    needsEducation?: BoolFieldUpdateOperationsInput | boolean
    needsHealth?: BoolFieldUpdateOperationsInput | boolean
    needsPolice?: BoolFieldUpdateOperationsInput | boolean
    hasDisability?: BoolFieldUpdateOperationsInput | boolean
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    socialBenefits?: FamilyUpdatesocialBenefitsInput | string[]
    referralSource?: NullableStringFieldUpdateOperationsInput | string | null
    primaryLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    hasInterpreterNeeded?: BoolFieldUpdateOperationsInput | boolean
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    members?: FamilyMemberUncheckedUpdateManyWithoutFamilyNestedInput
    supportMeasures?: SupportMeasureUncheckedUpdateManyWithoutFamilyNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutFamilyNestedInput
    history?: FamilyHistoryUncheckedUpdateManyWithoutFamilyNestedInput
  }

  export type FamilyCreateManyInput = {
    id?: string
    caseNumber: string
    familyName: string
    address: string
    region: string
    registrationAddress?: string | null
    district: string
    city?: string | null
    status: string
    riskLevel: string
    riskFactors?: FamilyCreateriskFactorsInput | string[]
    registrationDate: Date | string
    lastUpdate?: Date | string
    isActive?: boolean
    inactiveReason?: string | null
    notes?: string | null
    children?: number | null
    settingReason?: string | null
    inspectionStatus?: string | null
    familyType?: string | null
    housingType?: string | null
    employment?: string | null
    workplace?: string | null
    tzhsReason?: string | null
    nbReason?: string | null
    familyIncome?: string | null
    needsSupport?: boolean
    needsEducation?: boolean
    needsHealth?: boolean
    needsPolice?: boolean
    hasDisability?: boolean
    contactPhone?: string | null
    contactEmail?: string | null
    incomeSource?: string | null
    monthlyIncome?: number | null
    socialBenefits?: FamilyCreatesocialBenefitsInput | string[]
    referralSource?: string | null
    primaryLanguage?: string | null
    hasInterpreterNeeded?: boolean
    createdById: string
    updatedById: string
  }

  export type FamilyUpdateManyMutationInput = {
    caseNumber?: StringFieldUpdateOperationsInput | string
    familyName?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    district?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    riskLevel?: StringFieldUpdateOperationsInput | string
    riskFactors?: FamilyUpdateriskFactorsInput | string[]
    registrationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    inactiveReason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    children?: NullableIntFieldUpdateOperationsInput | number | null
    settingReason?: NullableStringFieldUpdateOperationsInput | string | null
    inspectionStatus?: NullableStringFieldUpdateOperationsInput | string | null
    familyType?: NullableStringFieldUpdateOperationsInput | string | null
    housingType?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    workplace?: NullableStringFieldUpdateOperationsInput | string | null
    tzhsReason?: NullableStringFieldUpdateOperationsInput | string | null
    nbReason?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableStringFieldUpdateOperationsInput | string | null
    needsSupport?: BoolFieldUpdateOperationsInput | boolean
    needsEducation?: BoolFieldUpdateOperationsInput | boolean
    needsHealth?: BoolFieldUpdateOperationsInput | boolean
    needsPolice?: BoolFieldUpdateOperationsInput | boolean
    hasDisability?: BoolFieldUpdateOperationsInput | boolean
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    socialBenefits?: FamilyUpdatesocialBenefitsInput | string[]
    referralSource?: NullableStringFieldUpdateOperationsInput | string | null
    primaryLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    hasInterpreterNeeded?: BoolFieldUpdateOperationsInput | boolean
  }

  export type FamilyUncheckedUpdateManyInput = {
    caseNumber?: StringFieldUpdateOperationsInput | string
    familyName?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    district?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    riskLevel?: StringFieldUpdateOperationsInput | string
    riskFactors?: FamilyUpdateriskFactorsInput | string[]
    registrationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    inactiveReason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    children?: NullableIntFieldUpdateOperationsInput | number | null
    settingReason?: NullableStringFieldUpdateOperationsInput | string | null
    inspectionStatus?: NullableStringFieldUpdateOperationsInput | string | null
    familyType?: NullableStringFieldUpdateOperationsInput | string | null
    housingType?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    workplace?: NullableStringFieldUpdateOperationsInput | string | null
    tzhsReason?: NullableStringFieldUpdateOperationsInput | string | null
    nbReason?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableStringFieldUpdateOperationsInput | string | null
    needsSupport?: BoolFieldUpdateOperationsInput | boolean
    needsEducation?: BoolFieldUpdateOperationsInput | boolean
    needsHealth?: BoolFieldUpdateOperationsInput | boolean
    needsPolice?: BoolFieldUpdateOperationsInput | boolean
    hasDisability?: BoolFieldUpdateOperationsInput | boolean
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    socialBenefits?: FamilyUpdatesocialBenefitsInput | string[]
    referralSource?: NullableStringFieldUpdateOperationsInput | string | null
    primaryLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    hasInterpreterNeeded?: BoolFieldUpdateOperationsInput | boolean
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
  }

  export type FamilyMemberCreateInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    relationship: string
    documentType?: string | null
    documentNumber?: string | null
    documentIssueDate?: Date | string | null
    documentExpiryDate?: Date | string | null
    registrationAddress?: string | null
    education?: string | null
    grade?: string | null
    institution?: string | null
    course?: string | null
    funding?: string | null
    meals?: string | null
    notes?: string | null
    status?: string | null
    isActive?: boolean
    citizenship?: string | null
    ethnicity?: string | null
    maritalStatus?: string | null
    phoneNumber?: string | null
    email?: string | null
    employment?: string | null
    healthStatus?: string | null
    disabilities?: string | null
    specialNeeds?: boolean
    isHeadOfHousehold?: boolean
    primaryCaregiver?: boolean
    incomeAmount?: number | null
    incomeSource?: string | null
    medicalInsurance?: string | null
    chronicConditions?: FamilyMemberCreatechronicConditionsInput | string[]
    allergies?: FamilyMemberCreateallergiesInput | string[]
    medications?: FamilyMemberCreatemedicationsInput | string[]
    family: FamilyCreateNestedOneWithoutMembersInput
    supportMeasures?: SupportMeasureCreateNestedManyWithoutMemberInput
    documents?: DocumentCreateNestedManyWithoutMemberInput
  }

  export type FamilyMemberUncheckedCreateInput = {
    id?: string
    familyId: string
    firstName: string
    lastName: string
    middleName?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    relationship: string
    documentType?: string | null
    documentNumber?: string | null
    documentIssueDate?: Date | string | null
    documentExpiryDate?: Date | string | null
    registrationAddress?: string | null
    education?: string | null
    grade?: string | null
    institution?: string | null
    course?: string | null
    funding?: string | null
    meals?: string | null
    notes?: string | null
    status?: string | null
    isActive?: boolean
    citizenship?: string | null
    ethnicity?: string | null
    maritalStatus?: string | null
    phoneNumber?: string | null
    email?: string | null
    employment?: string | null
    healthStatus?: string | null
    disabilities?: string | null
    specialNeeds?: boolean
    isHeadOfHousehold?: boolean
    primaryCaregiver?: boolean
    incomeAmount?: number | null
    incomeSource?: string | null
    medicalInsurance?: string | null
    chronicConditions?: FamilyMemberCreatechronicConditionsInput | string[]
    allergies?: FamilyMemberCreateallergiesInput | string[]
    medications?: FamilyMemberCreatemedicationsInput | string[]
    supportMeasures?: SupportMeasureUncheckedCreateNestedManyWithoutMemberInput
    documents?: DocumentUncheckedCreateNestedManyWithoutMemberInput
  }

  export type FamilyMemberUpdateInput = {
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: StringFieldUpdateOperationsInput | string
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentIssueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    institution?: NullableStringFieldUpdateOperationsInput | string | null
    course?: NullableStringFieldUpdateOperationsInput | string | null
    funding?: NullableStringFieldUpdateOperationsInput | string | null
    meals?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    citizenship?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    disabilities?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: BoolFieldUpdateOperationsInput | boolean
    isHeadOfHousehold?: BoolFieldUpdateOperationsInput | boolean
    primaryCaregiver?: BoolFieldUpdateOperationsInput | boolean
    incomeAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    medicalInsurance?: NullableStringFieldUpdateOperationsInput | string | null
    chronicConditions?: FamilyMemberUpdatechronicConditionsInput | string[]
    allergies?: FamilyMemberUpdateallergiesInput | string[]
    medications?: FamilyMemberUpdatemedicationsInput | string[]
    family?: FamilyUpdateOneRequiredWithoutMembersNestedInput
    supportMeasures?: SupportMeasureUpdateManyWithoutMemberNestedInput
    documents?: DocumentUpdateManyWithoutMemberNestedInput
  }

  export type FamilyMemberUncheckedUpdateInput = {
    familyId?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: StringFieldUpdateOperationsInput | string
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentIssueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    institution?: NullableStringFieldUpdateOperationsInput | string | null
    course?: NullableStringFieldUpdateOperationsInput | string | null
    funding?: NullableStringFieldUpdateOperationsInput | string | null
    meals?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    citizenship?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    disabilities?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: BoolFieldUpdateOperationsInput | boolean
    isHeadOfHousehold?: BoolFieldUpdateOperationsInput | boolean
    primaryCaregiver?: BoolFieldUpdateOperationsInput | boolean
    incomeAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    medicalInsurance?: NullableStringFieldUpdateOperationsInput | string | null
    chronicConditions?: FamilyMemberUpdatechronicConditionsInput | string[]
    allergies?: FamilyMemberUpdateallergiesInput | string[]
    medications?: FamilyMemberUpdatemedicationsInput | string[]
    supportMeasures?: SupportMeasureUncheckedUpdateManyWithoutMemberNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutMemberNestedInput
  }

  export type FamilyMemberCreateManyInput = {
    id?: string
    familyId: string
    firstName: string
    lastName: string
    middleName?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    relationship: string
    documentType?: string | null
    documentNumber?: string | null
    documentIssueDate?: Date | string | null
    documentExpiryDate?: Date | string | null
    registrationAddress?: string | null
    education?: string | null
    grade?: string | null
    institution?: string | null
    course?: string | null
    funding?: string | null
    meals?: string | null
    notes?: string | null
    status?: string | null
    isActive?: boolean
    citizenship?: string | null
    ethnicity?: string | null
    maritalStatus?: string | null
    phoneNumber?: string | null
    email?: string | null
    employment?: string | null
    healthStatus?: string | null
    disabilities?: string | null
    specialNeeds?: boolean
    isHeadOfHousehold?: boolean
    primaryCaregiver?: boolean
    incomeAmount?: number | null
    incomeSource?: string | null
    medicalInsurance?: string | null
    chronicConditions?: FamilyMemberCreatechronicConditionsInput | string[]
    allergies?: FamilyMemberCreateallergiesInput | string[]
    medications?: FamilyMemberCreatemedicationsInput | string[]
  }

  export type FamilyMemberUpdateManyMutationInput = {
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: StringFieldUpdateOperationsInput | string
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentIssueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    institution?: NullableStringFieldUpdateOperationsInput | string | null
    course?: NullableStringFieldUpdateOperationsInput | string | null
    funding?: NullableStringFieldUpdateOperationsInput | string | null
    meals?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    citizenship?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    disabilities?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: BoolFieldUpdateOperationsInput | boolean
    isHeadOfHousehold?: BoolFieldUpdateOperationsInput | boolean
    primaryCaregiver?: BoolFieldUpdateOperationsInput | boolean
    incomeAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    medicalInsurance?: NullableStringFieldUpdateOperationsInput | string | null
    chronicConditions?: FamilyMemberUpdatechronicConditionsInput | string[]
    allergies?: FamilyMemberUpdateallergiesInput | string[]
    medications?: FamilyMemberUpdatemedicationsInput | string[]
  }

  export type FamilyMemberUncheckedUpdateManyInput = {
    familyId?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: StringFieldUpdateOperationsInput | string
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentIssueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    institution?: NullableStringFieldUpdateOperationsInput | string | null
    course?: NullableStringFieldUpdateOperationsInput | string | null
    funding?: NullableStringFieldUpdateOperationsInput | string | null
    meals?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    citizenship?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    disabilities?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: BoolFieldUpdateOperationsInput | boolean
    isHeadOfHousehold?: BoolFieldUpdateOperationsInput | boolean
    primaryCaregiver?: BoolFieldUpdateOperationsInput | boolean
    incomeAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    medicalInsurance?: NullableStringFieldUpdateOperationsInput | string | null
    chronicConditions?: FamilyMemberUpdatechronicConditionsInput | string[]
    allergies?: FamilyMemberUpdateallergiesInput | string[]
    medications?: FamilyMemberUpdatemedicationsInput | string[]
  }

  export type SupportMeasureCreateInput = {
    id?: string
    type: string
    description: string
    category?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    status: string
    provider?: string | null
    result?: string | null
    notes?: string | null
    createdAt?: Date | string
    priority?: string | null
    cost?: number | null
    fundingSource?: string | null
    contactPerson?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    frequency?: string | null
    location?: string | null
    followUpDate?: Date | string | null
    evaluationDate?: Date | string | null
    effectiveness?: string | null
    family: FamilyCreateNestedOneWithoutSupportMeasuresInput
    member?: FamilyMemberCreateNestedOneWithoutSupportMeasuresInput
    createdBy: UserCreateNestedOneWithoutCreatedSupportMeasuresInput
    documents?: DocumentCreateNestedManyWithoutSupportMeasureInput
  }

  export type SupportMeasureUncheckedCreateInput = {
    id?: string
    familyId: string
    memberId?: string | null
    type: string
    description: string
    category?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    status: string
    provider?: string | null
    result?: string | null
    notes?: string | null
    createdAt?: Date | string
    priority?: string | null
    cost?: number | null
    fundingSource?: string | null
    contactPerson?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    frequency?: string | null
    location?: string | null
    followUpDate?: Date | string | null
    evaluationDate?: Date | string | null
    effectiveness?: string | null
    createdById: string
    documents?: DocumentUncheckedCreateNestedManyWithoutSupportMeasureInput
  }

  export type SupportMeasureUpdateInput = {
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    fundingSource?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    evaluationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    effectiveness?: NullableStringFieldUpdateOperationsInput | string | null
    family?: FamilyUpdateOneRequiredWithoutSupportMeasuresNestedInput
    member?: FamilyMemberUpdateOneWithoutSupportMeasuresNestedInput
    createdBy?: UserUpdateOneRequiredWithoutCreatedSupportMeasuresNestedInput
    documents?: DocumentUpdateManyWithoutSupportMeasureNestedInput
  }

  export type SupportMeasureUncheckedUpdateInput = {
    familyId?: StringFieldUpdateOperationsInput | string
    memberId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    fundingSource?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    evaluationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    effectiveness?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: StringFieldUpdateOperationsInput | string
    documents?: DocumentUncheckedUpdateManyWithoutSupportMeasureNestedInput
  }

  export type SupportMeasureCreateManyInput = {
    id?: string
    familyId: string
    memberId?: string | null
    type: string
    description: string
    category?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    status: string
    provider?: string | null
    result?: string | null
    notes?: string | null
    createdAt?: Date | string
    priority?: string | null
    cost?: number | null
    fundingSource?: string | null
    contactPerson?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    frequency?: string | null
    location?: string | null
    followUpDate?: Date | string | null
    evaluationDate?: Date | string | null
    effectiveness?: string | null
    createdById: string
  }

  export type SupportMeasureUpdateManyMutationInput = {
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    fundingSource?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    evaluationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    effectiveness?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupportMeasureUncheckedUpdateManyInput = {
    familyId?: StringFieldUpdateOperationsInput | string
    memberId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    fundingSource?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    evaluationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    effectiveness?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: StringFieldUpdateOperationsInput | string
  }

  export type DocumentCreateInput = {
    id?: string
    title: string
    type: string
    fileUrl: string
    mimeType: string
    fileSize: number
    uploadDate?: Date | string
    notes?: string | null
    category?: string | null
    expirationDate?: Date | string | null
    isConfidential?: boolean
    tags?: DocumentCreatetagsInput | string[]
    status?: string | null
    family?: FamilyCreateNestedOneWithoutDocumentsInput
    member?: FamilyMemberCreateNestedOneWithoutDocumentsInput
    supportMeasure?: SupportMeasureCreateNestedOneWithoutDocumentsInput
    uploadedBy: UserCreateNestedOneWithoutDocumentsInput
  }

  export type DocumentUncheckedCreateInput = {
    id?: string
    title: string
    type: string
    fileUrl: string
    mimeType: string
    fileSize: number
    familyId?: string | null
    memberId?: string | null
    supportId?: string | null
    uploadDate?: Date | string
    notes?: string | null
    category?: string | null
    expirationDate?: Date | string | null
    isConfidential?: boolean
    tags?: DocumentCreatetagsInput | string[]
    status?: string | null
    uploadedById: string
  }

  export type DocumentUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    mimeType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    uploadDate?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isConfidential?: BoolFieldUpdateOperationsInput | boolean
    tags?: DocumentUpdatetagsInput | string[]
    status?: NullableStringFieldUpdateOperationsInput | string | null
    family?: FamilyUpdateOneWithoutDocumentsNestedInput
    member?: FamilyMemberUpdateOneWithoutDocumentsNestedInput
    supportMeasure?: SupportMeasureUpdateOneWithoutDocumentsNestedInput
    uploadedBy?: UserUpdateOneRequiredWithoutDocumentsNestedInput
  }

  export type DocumentUncheckedUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    mimeType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    familyId?: NullableStringFieldUpdateOperationsInput | string | null
    memberId?: NullableStringFieldUpdateOperationsInput | string | null
    supportId?: NullableStringFieldUpdateOperationsInput | string | null
    uploadDate?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isConfidential?: BoolFieldUpdateOperationsInput | boolean
    tags?: DocumentUpdatetagsInput | string[]
    status?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedById?: StringFieldUpdateOperationsInput | string
  }

  export type DocumentCreateManyInput = {
    id?: string
    title: string
    type: string
    fileUrl: string
    mimeType: string
    fileSize: number
    familyId?: string | null
    memberId?: string | null
    supportId?: string | null
    uploadDate?: Date | string
    notes?: string | null
    category?: string | null
    expirationDate?: Date | string | null
    isConfidential?: boolean
    tags?: DocumentCreatetagsInput | string[]
    status?: string | null
    uploadedById: string
  }

  export type DocumentUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    mimeType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    uploadDate?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isConfidential?: BoolFieldUpdateOperationsInput | boolean
    tags?: DocumentUpdatetagsInput | string[]
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DocumentUncheckedUpdateManyInput = {
    title?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    mimeType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    familyId?: NullableStringFieldUpdateOperationsInput | string | null
    memberId?: NullableStringFieldUpdateOperationsInput | string | null
    supportId?: NullableStringFieldUpdateOperationsInput | string | null
    uploadDate?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isConfidential?: BoolFieldUpdateOperationsInput | boolean
    tags?: DocumentUpdatetagsInput | string[]
    status?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedById?: StringFieldUpdateOperationsInput | string
  }

  export type FamilyHistoryCreateInput = {
    id?: string
    action: string
    description: string
    timestamp?: Date | string
    changedFields?: FamilyHistoryCreatechangedFieldsInput | string[]
    previousValues?: InputJsonValue | null
    newValues?: InputJsonValue | null
    ipAddress?: string | null
    userAgent?: string | null
    family: FamilyCreateNestedOneWithoutHistoryInput
    user: UserCreateNestedOneWithoutFamilyHistoryInput
  }

  export type FamilyHistoryUncheckedCreateInput = {
    id?: string
    familyId: string
    action: string
    description: string
    timestamp?: Date | string
    userId: string
    changedFields?: FamilyHistoryCreatechangedFieldsInput | string[]
    previousValues?: InputJsonValue | null
    newValues?: InputJsonValue | null
    ipAddress?: string | null
    userAgent?: string | null
  }

  export type FamilyHistoryUpdateInput = {
    action?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    changedFields?: FamilyHistoryUpdatechangedFieldsInput | string[]
    previousValues?: InputJsonValue | InputJsonValue | null
    newValues?: InputJsonValue | InputJsonValue | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    family?: FamilyUpdateOneRequiredWithoutHistoryNestedInput
    user?: UserUpdateOneRequiredWithoutFamilyHistoryNestedInput
  }

  export type FamilyHistoryUncheckedUpdateInput = {
    familyId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    changedFields?: FamilyHistoryUpdatechangedFieldsInput | string[]
    previousValues?: InputJsonValue | InputJsonValue | null
    newValues?: InputJsonValue | InputJsonValue | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FamilyHistoryCreateManyInput = {
    id?: string
    familyId: string
    action: string
    description: string
    timestamp?: Date | string
    userId: string
    changedFields?: FamilyHistoryCreatechangedFieldsInput | string[]
    previousValues?: InputJsonValue | null
    newValues?: InputJsonValue | null
    ipAddress?: string | null
    userAgent?: string | null
  }

  export type FamilyHistoryUpdateManyMutationInput = {
    action?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    changedFields?: FamilyHistoryUpdatechangedFieldsInput | string[]
    previousValues?: InputJsonValue | InputJsonValue | null
    newValues?: InputJsonValue | InputJsonValue | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FamilyHistoryUncheckedUpdateManyInput = {
    familyId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    changedFields?: FamilyHistoryUpdatechangedFieldsInput | string[]
    previousValues?: InputJsonValue | InputJsonValue | null
    newValues?: InputJsonValue | InputJsonValue | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationCreateInput = {
    id?: string
    title: string
    message: string
    type: string
    isRead?: boolean
    createdAt?: Date | string
    priority?: string | null
    category?: string | null
    expiresAt?: Date | string | null
    actionUrl?: string | null
    actionLabel?: string | null
    isArchived?: boolean
    creator: UserCreateNestedOneWithoutNotificationsInput
    recipient: UserCreateNestedOneWithoutNotificationsReceivedInput
  }

  export type NotificationUncheckedCreateInput = {
    id?: string
    title: string
    message: string
    type: string
    isRead?: boolean
    createdAt?: Date | string
    priority?: string | null
    category?: string | null
    expiresAt?: Date | string | null
    actionUrl?: string | null
    actionLabel?: string | null
    isArchived?: boolean
    creatorId: string
    recipientId: string
  }

  export type NotificationUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionLabel?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    creator?: UserUpdateOneRequiredWithoutNotificationsNestedInput
    recipient?: UserUpdateOneRequiredWithoutNotificationsReceivedNestedInput
  }

  export type NotificationUncheckedUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionLabel?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    creatorId?: StringFieldUpdateOperationsInput | string
    recipientId?: StringFieldUpdateOperationsInput | string
  }

  export type NotificationCreateManyInput = {
    id?: string
    title: string
    message: string
    type: string
    isRead?: boolean
    createdAt?: Date | string
    priority?: string | null
    category?: string | null
    expiresAt?: Date | string | null
    actionUrl?: string | null
    actionLabel?: string | null
    isArchived?: boolean
    creatorId: string
    recipientId: string
  }

  export type NotificationUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionLabel?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
  }

  export type NotificationUncheckedUpdateManyInput = {
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionLabel?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    creatorId?: StringFieldUpdateOperationsInput | string
    recipientId?: StringFieldUpdateOperationsInput | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
    isSet?: boolean
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
    isSet?: boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type FamilyListRelationFilter = {
    every?: FamilyWhereInput
    some?: FamilyWhereInput
    none?: FamilyWhereInput
  }

  export type SupportMeasureListRelationFilter = {
    every?: SupportMeasureWhereInput
    some?: SupportMeasureWhereInput
    none?: SupportMeasureWhereInput
  }

  export type DocumentListRelationFilter = {
    every?: DocumentWhereInput
    some?: DocumentWhereInput
    none?: DocumentWhereInput
  }

  export type NotificationListRelationFilter = {
    every?: NotificationWhereInput
    some?: NotificationWhereInput
    none?: NotificationWhereInput
  }

  export type FamilyHistoryListRelationFilter = {
    every?: FamilyHistoryWhereInput
    some?: FamilyHistoryWhereInput
    none?: FamilyHistoryWhereInput
  }

  export type FamilyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SupportMeasureOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DocumentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NotificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FamilyHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    iin?: SortOrder
    password?: SortOrder
    fullName?: SortOrder
    phone?: SortOrder
    role?: SortOrder
    region?: SortOrder
    district?: SortOrder
    city?: SortOrder
    position?: SortOrder
    isActive?: SortOrder
    lastLogin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    iin?: SortOrder
    password?: SortOrder
    fullName?: SortOrder
    phone?: SortOrder
    role?: SortOrder
    region?: SortOrder
    district?: SortOrder
    city?: SortOrder
    position?: SortOrder
    isActive?: SortOrder
    lastLogin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    iin?: SortOrder
    password?: SortOrder
    fullName?: SortOrder
    phone?: SortOrder
    role?: SortOrder
    region?: SortOrder
    district?: SortOrder
    city?: SortOrder
    position?: SortOrder
    isActive?: SortOrder
    lastLogin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
    isSet?: boolean
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
    isSet?: boolean
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
    isSet?: boolean
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
    isSet?: boolean
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type FamilyMemberListRelationFilter = {
    every?: FamilyMemberWhereInput
    some?: FamilyMemberWhereInput
    none?: FamilyMemberWhereInput
  }

  export type FamilyMemberOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FamilyCountOrderByAggregateInput = {
    id?: SortOrder
    caseNumber?: SortOrder
    familyName?: SortOrder
    address?: SortOrder
    region?: SortOrder
    registrationAddress?: SortOrder
    district?: SortOrder
    city?: SortOrder
    status?: SortOrder
    riskLevel?: SortOrder
    riskFactors?: SortOrder
    registrationDate?: SortOrder
    lastUpdate?: SortOrder
    isActive?: SortOrder
    inactiveReason?: SortOrder
    notes?: SortOrder
    children?: SortOrder
    settingReason?: SortOrder
    inspectionStatus?: SortOrder
    familyType?: SortOrder
    housingType?: SortOrder
    employment?: SortOrder
    workplace?: SortOrder
    tzhsReason?: SortOrder
    nbReason?: SortOrder
    familyIncome?: SortOrder
    needsSupport?: SortOrder
    needsEducation?: SortOrder
    needsHealth?: SortOrder
    needsPolice?: SortOrder
    hasDisability?: SortOrder
    contactPhone?: SortOrder
    contactEmail?: SortOrder
    incomeSource?: SortOrder
    monthlyIncome?: SortOrder
    socialBenefits?: SortOrder
    referralSource?: SortOrder
    primaryLanguage?: SortOrder
    hasInterpreterNeeded?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type FamilyAvgOrderByAggregateInput = {
    children?: SortOrder
    monthlyIncome?: SortOrder
  }

  export type FamilyMaxOrderByAggregateInput = {
    id?: SortOrder
    caseNumber?: SortOrder
    familyName?: SortOrder
    address?: SortOrder
    region?: SortOrder
    registrationAddress?: SortOrder
    district?: SortOrder
    city?: SortOrder
    status?: SortOrder
    riskLevel?: SortOrder
    registrationDate?: SortOrder
    lastUpdate?: SortOrder
    isActive?: SortOrder
    inactiveReason?: SortOrder
    notes?: SortOrder
    children?: SortOrder
    settingReason?: SortOrder
    inspectionStatus?: SortOrder
    familyType?: SortOrder
    housingType?: SortOrder
    employment?: SortOrder
    workplace?: SortOrder
    tzhsReason?: SortOrder
    nbReason?: SortOrder
    familyIncome?: SortOrder
    needsSupport?: SortOrder
    needsEducation?: SortOrder
    needsHealth?: SortOrder
    needsPolice?: SortOrder
    hasDisability?: SortOrder
    contactPhone?: SortOrder
    contactEmail?: SortOrder
    incomeSource?: SortOrder
    monthlyIncome?: SortOrder
    referralSource?: SortOrder
    primaryLanguage?: SortOrder
    hasInterpreterNeeded?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type FamilyMinOrderByAggregateInput = {
    id?: SortOrder
    caseNumber?: SortOrder
    familyName?: SortOrder
    address?: SortOrder
    region?: SortOrder
    registrationAddress?: SortOrder
    district?: SortOrder
    city?: SortOrder
    status?: SortOrder
    riskLevel?: SortOrder
    registrationDate?: SortOrder
    lastUpdate?: SortOrder
    isActive?: SortOrder
    inactiveReason?: SortOrder
    notes?: SortOrder
    children?: SortOrder
    settingReason?: SortOrder
    inspectionStatus?: SortOrder
    familyType?: SortOrder
    housingType?: SortOrder
    employment?: SortOrder
    workplace?: SortOrder
    tzhsReason?: SortOrder
    nbReason?: SortOrder
    familyIncome?: SortOrder
    needsSupport?: SortOrder
    needsEducation?: SortOrder
    needsHealth?: SortOrder
    needsPolice?: SortOrder
    hasDisability?: SortOrder
    contactPhone?: SortOrder
    contactEmail?: SortOrder
    incomeSource?: SortOrder
    monthlyIncome?: SortOrder
    referralSource?: SortOrder
    primaryLanguage?: SortOrder
    hasInterpreterNeeded?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
  }

  export type FamilySumOrderByAggregateInput = {
    children?: SortOrder
    monthlyIncome?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
    isSet?: boolean
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
    isSet?: boolean
  }

  export type FamilyRelationFilter = {
    is?: FamilyWhereInput
    isNot?: FamilyWhereInput
  }

  export type FamilyMemberCountOrderByAggregateInput = {
    id?: SortOrder
    familyId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    middleName?: SortOrder
    birthDate?: SortOrder
    gender?: SortOrder
    relationship?: SortOrder
    documentType?: SortOrder
    documentNumber?: SortOrder
    documentIssueDate?: SortOrder
    documentExpiryDate?: SortOrder
    registrationAddress?: SortOrder
    education?: SortOrder
    grade?: SortOrder
    institution?: SortOrder
    course?: SortOrder
    funding?: SortOrder
    meals?: SortOrder
    notes?: SortOrder
    status?: SortOrder
    isActive?: SortOrder
    citizenship?: SortOrder
    ethnicity?: SortOrder
    maritalStatus?: SortOrder
    phoneNumber?: SortOrder
    email?: SortOrder
    employment?: SortOrder
    healthStatus?: SortOrder
    disabilities?: SortOrder
    specialNeeds?: SortOrder
    isHeadOfHousehold?: SortOrder
    primaryCaregiver?: SortOrder
    incomeAmount?: SortOrder
    incomeSource?: SortOrder
    medicalInsurance?: SortOrder
    chronicConditions?: SortOrder
    allergies?: SortOrder
    medications?: SortOrder
  }

  export type FamilyMemberAvgOrderByAggregateInput = {
    incomeAmount?: SortOrder
  }

  export type FamilyMemberMaxOrderByAggregateInput = {
    id?: SortOrder
    familyId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    middleName?: SortOrder
    birthDate?: SortOrder
    gender?: SortOrder
    relationship?: SortOrder
    documentType?: SortOrder
    documentNumber?: SortOrder
    documentIssueDate?: SortOrder
    documentExpiryDate?: SortOrder
    registrationAddress?: SortOrder
    education?: SortOrder
    grade?: SortOrder
    institution?: SortOrder
    course?: SortOrder
    funding?: SortOrder
    meals?: SortOrder
    notes?: SortOrder
    status?: SortOrder
    isActive?: SortOrder
    citizenship?: SortOrder
    ethnicity?: SortOrder
    maritalStatus?: SortOrder
    phoneNumber?: SortOrder
    email?: SortOrder
    employment?: SortOrder
    healthStatus?: SortOrder
    disabilities?: SortOrder
    specialNeeds?: SortOrder
    isHeadOfHousehold?: SortOrder
    primaryCaregiver?: SortOrder
    incomeAmount?: SortOrder
    incomeSource?: SortOrder
    medicalInsurance?: SortOrder
  }

  export type FamilyMemberMinOrderByAggregateInput = {
    id?: SortOrder
    familyId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    middleName?: SortOrder
    birthDate?: SortOrder
    gender?: SortOrder
    relationship?: SortOrder
    documentType?: SortOrder
    documentNumber?: SortOrder
    documentIssueDate?: SortOrder
    documentExpiryDate?: SortOrder
    registrationAddress?: SortOrder
    education?: SortOrder
    grade?: SortOrder
    institution?: SortOrder
    course?: SortOrder
    funding?: SortOrder
    meals?: SortOrder
    notes?: SortOrder
    status?: SortOrder
    isActive?: SortOrder
    citizenship?: SortOrder
    ethnicity?: SortOrder
    maritalStatus?: SortOrder
    phoneNumber?: SortOrder
    email?: SortOrder
    employment?: SortOrder
    healthStatus?: SortOrder
    disabilities?: SortOrder
    specialNeeds?: SortOrder
    isHeadOfHousehold?: SortOrder
    primaryCaregiver?: SortOrder
    incomeAmount?: SortOrder
    incomeSource?: SortOrder
    medicalInsurance?: SortOrder
  }

  export type FamilyMemberSumOrderByAggregateInput = {
    incomeAmount?: SortOrder
  }

  export type FamilyMemberNullableRelationFilter = {
    is?: FamilyMemberWhereInput | null
    isNot?: FamilyMemberWhereInput | null
  }

  export type SupportMeasureCountOrderByAggregateInput = {
    id?: SortOrder
    familyId?: SortOrder
    memberId?: SortOrder
    type?: SortOrder
    description?: SortOrder
    category?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    status?: SortOrder
    provider?: SortOrder
    result?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    priority?: SortOrder
    cost?: SortOrder
    fundingSource?: SortOrder
    contactPerson?: SortOrder
    contactPhone?: SortOrder
    contactEmail?: SortOrder
    frequency?: SortOrder
    location?: SortOrder
    followUpDate?: SortOrder
    evaluationDate?: SortOrder
    effectiveness?: SortOrder
    createdById?: SortOrder
  }

  export type SupportMeasureAvgOrderByAggregateInput = {
    cost?: SortOrder
  }

  export type SupportMeasureMaxOrderByAggregateInput = {
    id?: SortOrder
    familyId?: SortOrder
    memberId?: SortOrder
    type?: SortOrder
    description?: SortOrder
    category?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    status?: SortOrder
    provider?: SortOrder
    result?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    priority?: SortOrder
    cost?: SortOrder
    fundingSource?: SortOrder
    contactPerson?: SortOrder
    contactPhone?: SortOrder
    contactEmail?: SortOrder
    frequency?: SortOrder
    location?: SortOrder
    followUpDate?: SortOrder
    evaluationDate?: SortOrder
    effectiveness?: SortOrder
    createdById?: SortOrder
  }

  export type SupportMeasureMinOrderByAggregateInput = {
    id?: SortOrder
    familyId?: SortOrder
    memberId?: SortOrder
    type?: SortOrder
    description?: SortOrder
    category?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    status?: SortOrder
    provider?: SortOrder
    result?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    priority?: SortOrder
    cost?: SortOrder
    fundingSource?: SortOrder
    contactPerson?: SortOrder
    contactPhone?: SortOrder
    contactEmail?: SortOrder
    frequency?: SortOrder
    location?: SortOrder
    followUpDate?: SortOrder
    evaluationDate?: SortOrder
    effectiveness?: SortOrder
    createdById?: SortOrder
  }

  export type SupportMeasureSumOrderByAggregateInput = {
    cost?: SortOrder
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type FamilyNullableRelationFilter = {
    is?: FamilyWhereInput | null
    isNot?: FamilyWhereInput | null
  }

  export type SupportMeasureNullableRelationFilter = {
    is?: SupportMeasureWhereInput | null
    isNot?: SupportMeasureWhereInput | null
  }

  export type DocumentCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    type?: SortOrder
    fileUrl?: SortOrder
    mimeType?: SortOrder
    fileSize?: SortOrder
    familyId?: SortOrder
    memberId?: SortOrder
    supportId?: SortOrder
    uploadDate?: SortOrder
    notes?: SortOrder
    category?: SortOrder
    expirationDate?: SortOrder
    isConfidential?: SortOrder
    tags?: SortOrder
    status?: SortOrder
    uploadedById?: SortOrder
  }

  export type DocumentAvgOrderByAggregateInput = {
    fileSize?: SortOrder
  }

  export type DocumentMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    type?: SortOrder
    fileUrl?: SortOrder
    mimeType?: SortOrder
    fileSize?: SortOrder
    familyId?: SortOrder
    memberId?: SortOrder
    supportId?: SortOrder
    uploadDate?: SortOrder
    notes?: SortOrder
    category?: SortOrder
    expirationDate?: SortOrder
    isConfidential?: SortOrder
    status?: SortOrder
    uploadedById?: SortOrder
  }

  export type DocumentMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    type?: SortOrder
    fileUrl?: SortOrder
    mimeType?: SortOrder
    fileSize?: SortOrder
    familyId?: SortOrder
    memberId?: SortOrder
    supportId?: SortOrder
    uploadDate?: SortOrder
    notes?: SortOrder
    category?: SortOrder
    expirationDate?: SortOrder
    isConfidential?: SortOrder
    status?: SortOrder
    uploadedById?: SortOrder
  }

  export type DocumentSumOrderByAggregateInput = {
    fileSize?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    isSet?: boolean
  }

  export type FamilyHistoryCountOrderByAggregateInput = {
    id?: SortOrder
    familyId?: SortOrder
    action?: SortOrder
    description?: SortOrder
    timestamp?: SortOrder
    userId?: SortOrder
    changedFields?: SortOrder
    previousValues?: SortOrder
    newValues?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
  }

  export type FamilyHistoryMaxOrderByAggregateInput = {
    id?: SortOrder
    familyId?: SortOrder
    action?: SortOrder
    description?: SortOrder
    timestamp?: SortOrder
    userId?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
  }

  export type FamilyHistoryMinOrderByAggregateInput = {
    id?: SortOrder
    familyId?: SortOrder
    action?: SortOrder
    description?: SortOrder
    timestamp?: SortOrder
    userId?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
    isSet?: boolean
  }

  export type NotificationCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    isRead?: SortOrder
    createdAt?: SortOrder
    priority?: SortOrder
    category?: SortOrder
    expiresAt?: SortOrder
    actionUrl?: SortOrder
    actionLabel?: SortOrder
    isArchived?: SortOrder
    creatorId?: SortOrder
    recipientId?: SortOrder
  }

  export type NotificationMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    isRead?: SortOrder
    createdAt?: SortOrder
    priority?: SortOrder
    category?: SortOrder
    expiresAt?: SortOrder
    actionUrl?: SortOrder
    actionLabel?: SortOrder
    isArchived?: SortOrder
    creatorId?: SortOrder
    recipientId?: SortOrder
  }

  export type NotificationMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    isRead?: SortOrder
    createdAt?: SortOrder
    priority?: SortOrder
    category?: SortOrder
    expiresAt?: SortOrder
    actionUrl?: SortOrder
    actionLabel?: SortOrder
    isArchived?: SortOrder
    creatorId?: SortOrder
    recipientId?: SortOrder
  }

  export type FamilyCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<FamilyCreateWithoutCreatedByInput, FamilyUncheckedCreateWithoutCreatedByInput> | FamilyCreateWithoutCreatedByInput[] | FamilyUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: FamilyCreateOrConnectWithoutCreatedByInput | FamilyCreateOrConnectWithoutCreatedByInput[]
    createMany?: FamilyCreateManyCreatedByInputEnvelope
    connect?: FamilyWhereUniqueInput | FamilyWhereUniqueInput[]
  }

  export type FamilyCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<FamilyCreateWithoutUpdatedByInput, FamilyUncheckedCreateWithoutUpdatedByInput> | FamilyCreateWithoutUpdatedByInput[] | FamilyUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: FamilyCreateOrConnectWithoutUpdatedByInput | FamilyCreateOrConnectWithoutUpdatedByInput[]
    createMany?: FamilyCreateManyUpdatedByInputEnvelope
    connect?: FamilyWhereUniqueInput | FamilyWhereUniqueInput[]
  }

  export type SupportMeasureCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<SupportMeasureCreateWithoutCreatedByInput, SupportMeasureUncheckedCreateWithoutCreatedByInput> | SupportMeasureCreateWithoutCreatedByInput[] | SupportMeasureUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: SupportMeasureCreateOrConnectWithoutCreatedByInput | SupportMeasureCreateOrConnectWithoutCreatedByInput[]
    createMany?: SupportMeasureCreateManyCreatedByInputEnvelope
    connect?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
  }

  export type DocumentCreateNestedManyWithoutUploadedByInput = {
    create?: XOR<DocumentCreateWithoutUploadedByInput, DocumentUncheckedCreateWithoutUploadedByInput> | DocumentCreateWithoutUploadedByInput[] | DocumentUncheckedCreateWithoutUploadedByInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutUploadedByInput | DocumentCreateOrConnectWithoutUploadedByInput[]
    createMany?: DocumentCreateManyUploadedByInputEnvelope
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutCreatorInput = {
    create?: XOR<NotificationCreateWithoutCreatorInput, NotificationUncheckedCreateWithoutCreatorInput> | NotificationCreateWithoutCreatorInput[] | NotificationUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutCreatorInput | NotificationCreateOrConnectWithoutCreatorInput[]
    createMany?: NotificationCreateManyCreatorInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutRecipientInput = {
    create?: XOR<NotificationCreateWithoutRecipientInput, NotificationUncheckedCreateWithoutRecipientInput> | NotificationCreateWithoutRecipientInput[] | NotificationUncheckedCreateWithoutRecipientInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRecipientInput | NotificationCreateOrConnectWithoutRecipientInput[]
    createMany?: NotificationCreateManyRecipientInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type FamilyHistoryCreateNestedManyWithoutUserInput = {
    create?: XOR<FamilyHistoryCreateWithoutUserInput, FamilyHistoryUncheckedCreateWithoutUserInput> | FamilyHistoryCreateWithoutUserInput[] | FamilyHistoryUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FamilyHistoryCreateOrConnectWithoutUserInput | FamilyHistoryCreateOrConnectWithoutUserInput[]
    createMany?: FamilyHistoryCreateManyUserInputEnvelope
    connect?: FamilyHistoryWhereUniqueInput | FamilyHistoryWhereUniqueInput[]
  }

  export type FamilyUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<FamilyCreateWithoutCreatedByInput, FamilyUncheckedCreateWithoutCreatedByInput> | FamilyCreateWithoutCreatedByInput[] | FamilyUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: FamilyCreateOrConnectWithoutCreatedByInput | FamilyCreateOrConnectWithoutCreatedByInput[]
    createMany?: FamilyCreateManyCreatedByInputEnvelope
    connect?: FamilyWhereUniqueInput | FamilyWhereUniqueInput[]
  }

  export type FamilyUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<FamilyCreateWithoutUpdatedByInput, FamilyUncheckedCreateWithoutUpdatedByInput> | FamilyCreateWithoutUpdatedByInput[] | FamilyUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: FamilyCreateOrConnectWithoutUpdatedByInput | FamilyCreateOrConnectWithoutUpdatedByInput[]
    createMany?: FamilyCreateManyUpdatedByInputEnvelope
    connect?: FamilyWhereUniqueInput | FamilyWhereUniqueInput[]
  }

  export type SupportMeasureUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<SupportMeasureCreateWithoutCreatedByInput, SupportMeasureUncheckedCreateWithoutCreatedByInput> | SupportMeasureCreateWithoutCreatedByInput[] | SupportMeasureUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: SupportMeasureCreateOrConnectWithoutCreatedByInput | SupportMeasureCreateOrConnectWithoutCreatedByInput[]
    createMany?: SupportMeasureCreateManyCreatedByInputEnvelope
    connect?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
  }

  export type DocumentUncheckedCreateNestedManyWithoutUploadedByInput = {
    create?: XOR<DocumentCreateWithoutUploadedByInput, DocumentUncheckedCreateWithoutUploadedByInput> | DocumentCreateWithoutUploadedByInput[] | DocumentUncheckedCreateWithoutUploadedByInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutUploadedByInput | DocumentCreateOrConnectWithoutUploadedByInput[]
    createMany?: DocumentCreateManyUploadedByInputEnvelope
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutCreatorInput = {
    create?: XOR<NotificationCreateWithoutCreatorInput, NotificationUncheckedCreateWithoutCreatorInput> | NotificationCreateWithoutCreatorInput[] | NotificationUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutCreatorInput | NotificationCreateOrConnectWithoutCreatorInput[]
    createMany?: NotificationCreateManyCreatorInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutRecipientInput = {
    create?: XOR<NotificationCreateWithoutRecipientInput, NotificationUncheckedCreateWithoutRecipientInput> | NotificationCreateWithoutRecipientInput[] | NotificationUncheckedCreateWithoutRecipientInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRecipientInput | NotificationCreateOrConnectWithoutRecipientInput[]
    createMany?: NotificationCreateManyRecipientInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type FamilyHistoryUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<FamilyHistoryCreateWithoutUserInput, FamilyHistoryUncheckedCreateWithoutUserInput> | FamilyHistoryCreateWithoutUserInput[] | FamilyHistoryUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FamilyHistoryCreateOrConnectWithoutUserInput | FamilyHistoryCreateOrConnectWithoutUserInput[]
    createMany?: FamilyHistoryCreateManyUserInputEnvelope
    connect?: FamilyHistoryWhereUniqueInput | FamilyHistoryWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
    unset?: boolean
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
    unset?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type FamilyUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<FamilyCreateWithoutCreatedByInput, FamilyUncheckedCreateWithoutCreatedByInput> | FamilyCreateWithoutCreatedByInput[] | FamilyUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: FamilyCreateOrConnectWithoutCreatedByInput | FamilyCreateOrConnectWithoutCreatedByInput[]
    upsert?: FamilyUpsertWithWhereUniqueWithoutCreatedByInput | FamilyUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: FamilyCreateManyCreatedByInputEnvelope
    set?: FamilyWhereUniqueInput | FamilyWhereUniqueInput[]
    disconnect?: FamilyWhereUniqueInput | FamilyWhereUniqueInput[]
    delete?: FamilyWhereUniqueInput | FamilyWhereUniqueInput[]
    connect?: FamilyWhereUniqueInput | FamilyWhereUniqueInput[]
    update?: FamilyUpdateWithWhereUniqueWithoutCreatedByInput | FamilyUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: FamilyUpdateManyWithWhereWithoutCreatedByInput | FamilyUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: FamilyScalarWhereInput | FamilyScalarWhereInput[]
  }

  export type FamilyUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<FamilyCreateWithoutUpdatedByInput, FamilyUncheckedCreateWithoutUpdatedByInput> | FamilyCreateWithoutUpdatedByInput[] | FamilyUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: FamilyCreateOrConnectWithoutUpdatedByInput | FamilyCreateOrConnectWithoutUpdatedByInput[]
    upsert?: FamilyUpsertWithWhereUniqueWithoutUpdatedByInput | FamilyUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: FamilyCreateManyUpdatedByInputEnvelope
    set?: FamilyWhereUniqueInput | FamilyWhereUniqueInput[]
    disconnect?: FamilyWhereUniqueInput | FamilyWhereUniqueInput[]
    delete?: FamilyWhereUniqueInput | FamilyWhereUniqueInput[]
    connect?: FamilyWhereUniqueInput | FamilyWhereUniqueInput[]
    update?: FamilyUpdateWithWhereUniqueWithoutUpdatedByInput | FamilyUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: FamilyUpdateManyWithWhereWithoutUpdatedByInput | FamilyUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: FamilyScalarWhereInput | FamilyScalarWhereInput[]
  }

  export type SupportMeasureUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<SupportMeasureCreateWithoutCreatedByInput, SupportMeasureUncheckedCreateWithoutCreatedByInput> | SupportMeasureCreateWithoutCreatedByInput[] | SupportMeasureUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: SupportMeasureCreateOrConnectWithoutCreatedByInput | SupportMeasureCreateOrConnectWithoutCreatedByInput[]
    upsert?: SupportMeasureUpsertWithWhereUniqueWithoutCreatedByInput | SupportMeasureUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: SupportMeasureCreateManyCreatedByInputEnvelope
    set?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
    disconnect?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
    delete?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
    connect?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
    update?: SupportMeasureUpdateWithWhereUniqueWithoutCreatedByInput | SupportMeasureUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: SupportMeasureUpdateManyWithWhereWithoutCreatedByInput | SupportMeasureUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: SupportMeasureScalarWhereInput | SupportMeasureScalarWhereInput[]
  }

  export type DocumentUpdateManyWithoutUploadedByNestedInput = {
    create?: XOR<DocumentCreateWithoutUploadedByInput, DocumentUncheckedCreateWithoutUploadedByInput> | DocumentCreateWithoutUploadedByInput[] | DocumentUncheckedCreateWithoutUploadedByInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutUploadedByInput | DocumentCreateOrConnectWithoutUploadedByInput[]
    upsert?: DocumentUpsertWithWhereUniqueWithoutUploadedByInput | DocumentUpsertWithWhereUniqueWithoutUploadedByInput[]
    createMany?: DocumentCreateManyUploadedByInputEnvelope
    set?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    disconnect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    delete?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    update?: DocumentUpdateWithWhereUniqueWithoutUploadedByInput | DocumentUpdateWithWhereUniqueWithoutUploadedByInput[]
    updateMany?: DocumentUpdateManyWithWhereWithoutUploadedByInput | DocumentUpdateManyWithWhereWithoutUploadedByInput[]
    deleteMany?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<NotificationCreateWithoutCreatorInput, NotificationUncheckedCreateWithoutCreatorInput> | NotificationCreateWithoutCreatorInput[] | NotificationUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutCreatorInput | NotificationCreateOrConnectWithoutCreatorInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutCreatorInput | NotificationUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: NotificationCreateManyCreatorInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutCreatorInput | NotificationUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutCreatorInput | NotificationUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutRecipientNestedInput = {
    create?: XOR<NotificationCreateWithoutRecipientInput, NotificationUncheckedCreateWithoutRecipientInput> | NotificationCreateWithoutRecipientInput[] | NotificationUncheckedCreateWithoutRecipientInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRecipientInput | NotificationCreateOrConnectWithoutRecipientInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutRecipientInput | NotificationUpsertWithWhereUniqueWithoutRecipientInput[]
    createMany?: NotificationCreateManyRecipientInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutRecipientInput | NotificationUpdateWithWhereUniqueWithoutRecipientInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutRecipientInput | NotificationUpdateManyWithWhereWithoutRecipientInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type FamilyHistoryUpdateManyWithoutUserNestedInput = {
    create?: XOR<FamilyHistoryCreateWithoutUserInput, FamilyHistoryUncheckedCreateWithoutUserInput> | FamilyHistoryCreateWithoutUserInput[] | FamilyHistoryUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FamilyHistoryCreateOrConnectWithoutUserInput | FamilyHistoryCreateOrConnectWithoutUserInput[]
    upsert?: FamilyHistoryUpsertWithWhereUniqueWithoutUserInput | FamilyHistoryUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FamilyHistoryCreateManyUserInputEnvelope
    set?: FamilyHistoryWhereUniqueInput | FamilyHistoryWhereUniqueInput[]
    disconnect?: FamilyHistoryWhereUniqueInput | FamilyHistoryWhereUniqueInput[]
    delete?: FamilyHistoryWhereUniqueInput | FamilyHistoryWhereUniqueInput[]
    connect?: FamilyHistoryWhereUniqueInput | FamilyHistoryWhereUniqueInput[]
    update?: FamilyHistoryUpdateWithWhereUniqueWithoutUserInput | FamilyHistoryUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FamilyHistoryUpdateManyWithWhereWithoutUserInput | FamilyHistoryUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FamilyHistoryScalarWhereInput | FamilyHistoryScalarWhereInput[]
  }

  export type FamilyUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<FamilyCreateWithoutCreatedByInput, FamilyUncheckedCreateWithoutCreatedByInput> | FamilyCreateWithoutCreatedByInput[] | FamilyUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: FamilyCreateOrConnectWithoutCreatedByInput | FamilyCreateOrConnectWithoutCreatedByInput[]
    upsert?: FamilyUpsertWithWhereUniqueWithoutCreatedByInput | FamilyUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: FamilyCreateManyCreatedByInputEnvelope
    set?: FamilyWhereUniqueInput | FamilyWhereUniqueInput[]
    disconnect?: FamilyWhereUniqueInput | FamilyWhereUniqueInput[]
    delete?: FamilyWhereUniqueInput | FamilyWhereUniqueInput[]
    connect?: FamilyWhereUniqueInput | FamilyWhereUniqueInput[]
    update?: FamilyUpdateWithWhereUniqueWithoutCreatedByInput | FamilyUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: FamilyUpdateManyWithWhereWithoutCreatedByInput | FamilyUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: FamilyScalarWhereInput | FamilyScalarWhereInput[]
  }

  export type FamilyUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<FamilyCreateWithoutUpdatedByInput, FamilyUncheckedCreateWithoutUpdatedByInput> | FamilyCreateWithoutUpdatedByInput[] | FamilyUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: FamilyCreateOrConnectWithoutUpdatedByInput | FamilyCreateOrConnectWithoutUpdatedByInput[]
    upsert?: FamilyUpsertWithWhereUniqueWithoutUpdatedByInput | FamilyUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: FamilyCreateManyUpdatedByInputEnvelope
    set?: FamilyWhereUniqueInput | FamilyWhereUniqueInput[]
    disconnect?: FamilyWhereUniqueInput | FamilyWhereUniqueInput[]
    delete?: FamilyWhereUniqueInput | FamilyWhereUniqueInput[]
    connect?: FamilyWhereUniqueInput | FamilyWhereUniqueInput[]
    update?: FamilyUpdateWithWhereUniqueWithoutUpdatedByInput | FamilyUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: FamilyUpdateManyWithWhereWithoutUpdatedByInput | FamilyUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: FamilyScalarWhereInput | FamilyScalarWhereInput[]
  }

  export type SupportMeasureUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<SupportMeasureCreateWithoutCreatedByInput, SupportMeasureUncheckedCreateWithoutCreatedByInput> | SupportMeasureCreateWithoutCreatedByInput[] | SupportMeasureUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: SupportMeasureCreateOrConnectWithoutCreatedByInput | SupportMeasureCreateOrConnectWithoutCreatedByInput[]
    upsert?: SupportMeasureUpsertWithWhereUniqueWithoutCreatedByInput | SupportMeasureUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: SupportMeasureCreateManyCreatedByInputEnvelope
    set?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
    disconnect?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
    delete?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
    connect?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
    update?: SupportMeasureUpdateWithWhereUniqueWithoutCreatedByInput | SupportMeasureUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: SupportMeasureUpdateManyWithWhereWithoutCreatedByInput | SupportMeasureUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: SupportMeasureScalarWhereInput | SupportMeasureScalarWhereInput[]
  }

  export type DocumentUncheckedUpdateManyWithoutUploadedByNestedInput = {
    create?: XOR<DocumentCreateWithoutUploadedByInput, DocumentUncheckedCreateWithoutUploadedByInput> | DocumentCreateWithoutUploadedByInput[] | DocumentUncheckedCreateWithoutUploadedByInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutUploadedByInput | DocumentCreateOrConnectWithoutUploadedByInput[]
    upsert?: DocumentUpsertWithWhereUniqueWithoutUploadedByInput | DocumentUpsertWithWhereUniqueWithoutUploadedByInput[]
    createMany?: DocumentCreateManyUploadedByInputEnvelope
    set?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    disconnect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    delete?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    update?: DocumentUpdateWithWhereUniqueWithoutUploadedByInput | DocumentUpdateWithWhereUniqueWithoutUploadedByInput[]
    updateMany?: DocumentUpdateManyWithWhereWithoutUploadedByInput | DocumentUpdateManyWithWhereWithoutUploadedByInput[]
    deleteMany?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<NotificationCreateWithoutCreatorInput, NotificationUncheckedCreateWithoutCreatorInput> | NotificationCreateWithoutCreatorInput[] | NotificationUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutCreatorInput | NotificationCreateOrConnectWithoutCreatorInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutCreatorInput | NotificationUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: NotificationCreateManyCreatorInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutCreatorInput | NotificationUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutCreatorInput | NotificationUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutRecipientNestedInput = {
    create?: XOR<NotificationCreateWithoutRecipientInput, NotificationUncheckedCreateWithoutRecipientInput> | NotificationCreateWithoutRecipientInput[] | NotificationUncheckedCreateWithoutRecipientInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRecipientInput | NotificationCreateOrConnectWithoutRecipientInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutRecipientInput | NotificationUpsertWithWhereUniqueWithoutRecipientInput[]
    createMany?: NotificationCreateManyRecipientInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutRecipientInput | NotificationUpdateWithWhereUniqueWithoutRecipientInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutRecipientInput | NotificationUpdateManyWithWhereWithoutRecipientInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type FamilyHistoryUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<FamilyHistoryCreateWithoutUserInput, FamilyHistoryUncheckedCreateWithoutUserInput> | FamilyHistoryCreateWithoutUserInput[] | FamilyHistoryUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FamilyHistoryCreateOrConnectWithoutUserInput | FamilyHistoryCreateOrConnectWithoutUserInput[]
    upsert?: FamilyHistoryUpsertWithWhereUniqueWithoutUserInput | FamilyHistoryUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FamilyHistoryCreateManyUserInputEnvelope
    set?: FamilyHistoryWhereUniqueInput | FamilyHistoryWhereUniqueInput[]
    disconnect?: FamilyHistoryWhereUniqueInput | FamilyHistoryWhereUniqueInput[]
    delete?: FamilyHistoryWhereUniqueInput | FamilyHistoryWhereUniqueInput[]
    connect?: FamilyHistoryWhereUniqueInput | FamilyHistoryWhereUniqueInput[]
    update?: FamilyHistoryUpdateWithWhereUniqueWithoutUserInput | FamilyHistoryUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FamilyHistoryUpdateManyWithWhereWithoutUserInput | FamilyHistoryUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FamilyHistoryScalarWhereInput | FamilyHistoryScalarWhereInput[]
  }

  export type FamilyCreateriskFactorsInput = {
    set: string[]
  }

  export type FamilyCreatesocialBenefitsInput = {
    set: string[]
  }

  export type UserCreateNestedOneWithoutCreatedFamiliesInput = {
    create?: XOR<UserCreateWithoutCreatedFamiliesInput, UserUncheckedCreateWithoutCreatedFamiliesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedFamiliesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdatedFamiliesInput = {
    create?: XOR<UserCreateWithoutUpdatedFamiliesInput, UserUncheckedCreateWithoutUpdatedFamiliesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedFamiliesInput
    connect?: UserWhereUniqueInput
  }

  export type FamilyMemberCreateNestedManyWithoutFamilyInput = {
    create?: XOR<FamilyMemberCreateWithoutFamilyInput, FamilyMemberUncheckedCreateWithoutFamilyInput> | FamilyMemberCreateWithoutFamilyInput[] | FamilyMemberUncheckedCreateWithoutFamilyInput[]
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutFamilyInput | FamilyMemberCreateOrConnectWithoutFamilyInput[]
    createMany?: FamilyMemberCreateManyFamilyInputEnvelope
    connect?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
  }

  export type SupportMeasureCreateNestedManyWithoutFamilyInput = {
    create?: XOR<SupportMeasureCreateWithoutFamilyInput, SupportMeasureUncheckedCreateWithoutFamilyInput> | SupportMeasureCreateWithoutFamilyInput[] | SupportMeasureUncheckedCreateWithoutFamilyInput[]
    connectOrCreate?: SupportMeasureCreateOrConnectWithoutFamilyInput | SupportMeasureCreateOrConnectWithoutFamilyInput[]
    createMany?: SupportMeasureCreateManyFamilyInputEnvelope
    connect?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
  }

  export type DocumentCreateNestedManyWithoutFamilyInput = {
    create?: XOR<DocumentCreateWithoutFamilyInput, DocumentUncheckedCreateWithoutFamilyInput> | DocumentCreateWithoutFamilyInput[] | DocumentUncheckedCreateWithoutFamilyInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutFamilyInput | DocumentCreateOrConnectWithoutFamilyInput[]
    createMany?: DocumentCreateManyFamilyInputEnvelope
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
  }

  export type FamilyHistoryCreateNestedManyWithoutFamilyInput = {
    create?: XOR<FamilyHistoryCreateWithoutFamilyInput, FamilyHistoryUncheckedCreateWithoutFamilyInput> | FamilyHistoryCreateWithoutFamilyInput[] | FamilyHistoryUncheckedCreateWithoutFamilyInput[]
    connectOrCreate?: FamilyHistoryCreateOrConnectWithoutFamilyInput | FamilyHistoryCreateOrConnectWithoutFamilyInput[]
    createMany?: FamilyHistoryCreateManyFamilyInputEnvelope
    connect?: FamilyHistoryWhereUniqueInput | FamilyHistoryWhereUniqueInput[]
  }

  export type FamilyMemberUncheckedCreateNestedManyWithoutFamilyInput = {
    create?: XOR<FamilyMemberCreateWithoutFamilyInput, FamilyMemberUncheckedCreateWithoutFamilyInput> | FamilyMemberCreateWithoutFamilyInput[] | FamilyMemberUncheckedCreateWithoutFamilyInput[]
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutFamilyInput | FamilyMemberCreateOrConnectWithoutFamilyInput[]
    createMany?: FamilyMemberCreateManyFamilyInputEnvelope
    connect?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
  }

  export type SupportMeasureUncheckedCreateNestedManyWithoutFamilyInput = {
    create?: XOR<SupportMeasureCreateWithoutFamilyInput, SupportMeasureUncheckedCreateWithoutFamilyInput> | SupportMeasureCreateWithoutFamilyInput[] | SupportMeasureUncheckedCreateWithoutFamilyInput[]
    connectOrCreate?: SupportMeasureCreateOrConnectWithoutFamilyInput | SupportMeasureCreateOrConnectWithoutFamilyInput[]
    createMany?: SupportMeasureCreateManyFamilyInputEnvelope
    connect?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
  }

  export type DocumentUncheckedCreateNestedManyWithoutFamilyInput = {
    create?: XOR<DocumentCreateWithoutFamilyInput, DocumentUncheckedCreateWithoutFamilyInput> | DocumentCreateWithoutFamilyInput[] | DocumentUncheckedCreateWithoutFamilyInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutFamilyInput | DocumentCreateOrConnectWithoutFamilyInput[]
    createMany?: DocumentCreateManyFamilyInputEnvelope
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
  }

  export type FamilyHistoryUncheckedCreateNestedManyWithoutFamilyInput = {
    create?: XOR<FamilyHistoryCreateWithoutFamilyInput, FamilyHistoryUncheckedCreateWithoutFamilyInput> | FamilyHistoryCreateWithoutFamilyInput[] | FamilyHistoryUncheckedCreateWithoutFamilyInput[]
    connectOrCreate?: FamilyHistoryCreateOrConnectWithoutFamilyInput | FamilyHistoryCreateOrConnectWithoutFamilyInput[]
    createMany?: FamilyHistoryCreateManyFamilyInputEnvelope
    connect?: FamilyHistoryWhereUniqueInput | FamilyHistoryWhereUniqueInput[]
  }

  export type FamilyUpdateriskFactorsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
    unset?: boolean
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
    unset?: boolean
  }

  export type FamilyUpdatesocialBenefitsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type UserUpdateOneRequiredWithoutCreatedFamiliesNestedInput = {
    create?: XOR<UserCreateWithoutCreatedFamiliesInput, UserUncheckedCreateWithoutCreatedFamiliesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedFamiliesInput
    upsert?: UserUpsertWithoutCreatedFamiliesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedFamiliesInput, UserUpdateWithoutCreatedFamiliesInput>, UserUncheckedUpdateWithoutCreatedFamiliesInput>
  }

  export type UserUpdateOneRequiredWithoutUpdatedFamiliesNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedFamiliesInput, UserUncheckedCreateWithoutUpdatedFamiliesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedFamiliesInput
    upsert?: UserUpsertWithoutUpdatedFamiliesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdatedFamiliesInput, UserUpdateWithoutUpdatedFamiliesInput>, UserUncheckedUpdateWithoutUpdatedFamiliesInput>
  }

  export type FamilyMemberUpdateManyWithoutFamilyNestedInput = {
    create?: XOR<FamilyMemberCreateWithoutFamilyInput, FamilyMemberUncheckedCreateWithoutFamilyInput> | FamilyMemberCreateWithoutFamilyInput[] | FamilyMemberUncheckedCreateWithoutFamilyInput[]
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutFamilyInput | FamilyMemberCreateOrConnectWithoutFamilyInput[]
    upsert?: FamilyMemberUpsertWithWhereUniqueWithoutFamilyInput | FamilyMemberUpsertWithWhereUniqueWithoutFamilyInput[]
    createMany?: FamilyMemberCreateManyFamilyInputEnvelope
    set?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
    disconnect?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
    delete?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
    connect?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
    update?: FamilyMemberUpdateWithWhereUniqueWithoutFamilyInput | FamilyMemberUpdateWithWhereUniqueWithoutFamilyInput[]
    updateMany?: FamilyMemberUpdateManyWithWhereWithoutFamilyInput | FamilyMemberUpdateManyWithWhereWithoutFamilyInput[]
    deleteMany?: FamilyMemberScalarWhereInput | FamilyMemberScalarWhereInput[]
  }

  export type SupportMeasureUpdateManyWithoutFamilyNestedInput = {
    create?: XOR<SupportMeasureCreateWithoutFamilyInput, SupportMeasureUncheckedCreateWithoutFamilyInput> | SupportMeasureCreateWithoutFamilyInput[] | SupportMeasureUncheckedCreateWithoutFamilyInput[]
    connectOrCreate?: SupportMeasureCreateOrConnectWithoutFamilyInput | SupportMeasureCreateOrConnectWithoutFamilyInput[]
    upsert?: SupportMeasureUpsertWithWhereUniqueWithoutFamilyInput | SupportMeasureUpsertWithWhereUniqueWithoutFamilyInput[]
    createMany?: SupportMeasureCreateManyFamilyInputEnvelope
    set?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
    disconnect?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
    delete?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
    connect?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
    update?: SupportMeasureUpdateWithWhereUniqueWithoutFamilyInput | SupportMeasureUpdateWithWhereUniqueWithoutFamilyInput[]
    updateMany?: SupportMeasureUpdateManyWithWhereWithoutFamilyInput | SupportMeasureUpdateManyWithWhereWithoutFamilyInput[]
    deleteMany?: SupportMeasureScalarWhereInput | SupportMeasureScalarWhereInput[]
  }

  export type DocumentUpdateManyWithoutFamilyNestedInput = {
    create?: XOR<DocumentCreateWithoutFamilyInput, DocumentUncheckedCreateWithoutFamilyInput> | DocumentCreateWithoutFamilyInput[] | DocumentUncheckedCreateWithoutFamilyInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutFamilyInput | DocumentCreateOrConnectWithoutFamilyInput[]
    upsert?: DocumentUpsertWithWhereUniqueWithoutFamilyInput | DocumentUpsertWithWhereUniqueWithoutFamilyInput[]
    createMany?: DocumentCreateManyFamilyInputEnvelope
    set?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    disconnect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    delete?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    update?: DocumentUpdateWithWhereUniqueWithoutFamilyInput | DocumentUpdateWithWhereUniqueWithoutFamilyInput[]
    updateMany?: DocumentUpdateManyWithWhereWithoutFamilyInput | DocumentUpdateManyWithWhereWithoutFamilyInput[]
    deleteMany?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
  }

  export type FamilyHistoryUpdateManyWithoutFamilyNestedInput = {
    create?: XOR<FamilyHistoryCreateWithoutFamilyInput, FamilyHistoryUncheckedCreateWithoutFamilyInput> | FamilyHistoryCreateWithoutFamilyInput[] | FamilyHistoryUncheckedCreateWithoutFamilyInput[]
    connectOrCreate?: FamilyHistoryCreateOrConnectWithoutFamilyInput | FamilyHistoryCreateOrConnectWithoutFamilyInput[]
    upsert?: FamilyHistoryUpsertWithWhereUniqueWithoutFamilyInput | FamilyHistoryUpsertWithWhereUniqueWithoutFamilyInput[]
    createMany?: FamilyHistoryCreateManyFamilyInputEnvelope
    set?: FamilyHistoryWhereUniqueInput | FamilyHistoryWhereUniqueInput[]
    disconnect?: FamilyHistoryWhereUniqueInput | FamilyHistoryWhereUniqueInput[]
    delete?: FamilyHistoryWhereUniqueInput | FamilyHistoryWhereUniqueInput[]
    connect?: FamilyHistoryWhereUniqueInput | FamilyHistoryWhereUniqueInput[]
    update?: FamilyHistoryUpdateWithWhereUniqueWithoutFamilyInput | FamilyHistoryUpdateWithWhereUniqueWithoutFamilyInput[]
    updateMany?: FamilyHistoryUpdateManyWithWhereWithoutFamilyInput | FamilyHistoryUpdateManyWithWhereWithoutFamilyInput[]
    deleteMany?: FamilyHistoryScalarWhereInput | FamilyHistoryScalarWhereInput[]
  }

  export type FamilyMemberUncheckedUpdateManyWithoutFamilyNestedInput = {
    create?: XOR<FamilyMemberCreateWithoutFamilyInput, FamilyMemberUncheckedCreateWithoutFamilyInput> | FamilyMemberCreateWithoutFamilyInput[] | FamilyMemberUncheckedCreateWithoutFamilyInput[]
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutFamilyInput | FamilyMemberCreateOrConnectWithoutFamilyInput[]
    upsert?: FamilyMemberUpsertWithWhereUniqueWithoutFamilyInput | FamilyMemberUpsertWithWhereUniqueWithoutFamilyInput[]
    createMany?: FamilyMemberCreateManyFamilyInputEnvelope
    set?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
    disconnect?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
    delete?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
    connect?: FamilyMemberWhereUniqueInput | FamilyMemberWhereUniqueInput[]
    update?: FamilyMemberUpdateWithWhereUniqueWithoutFamilyInput | FamilyMemberUpdateWithWhereUniqueWithoutFamilyInput[]
    updateMany?: FamilyMemberUpdateManyWithWhereWithoutFamilyInput | FamilyMemberUpdateManyWithWhereWithoutFamilyInput[]
    deleteMany?: FamilyMemberScalarWhereInput | FamilyMemberScalarWhereInput[]
  }

  export type SupportMeasureUncheckedUpdateManyWithoutFamilyNestedInput = {
    create?: XOR<SupportMeasureCreateWithoutFamilyInput, SupportMeasureUncheckedCreateWithoutFamilyInput> | SupportMeasureCreateWithoutFamilyInput[] | SupportMeasureUncheckedCreateWithoutFamilyInput[]
    connectOrCreate?: SupportMeasureCreateOrConnectWithoutFamilyInput | SupportMeasureCreateOrConnectWithoutFamilyInput[]
    upsert?: SupportMeasureUpsertWithWhereUniqueWithoutFamilyInput | SupportMeasureUpsertWithWhereUniqueWithoutFamilyInput[]
    createMany?: SupportMeasureCreateManyFamilyInputEnvelope
    set?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
    disconnect?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
    delete?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
    connect?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
    update?: SupportMeasureUpdateWithWhereUniqueWithoutFamilyInput | SupportMeasureUpdateWithWhereUniqueWithoutFamilyInput[]
    updateMany?: SupportMeasureUpdateManyWithWhereWithoutFamilyInput | SupportMeasureUpdateManyWithWhereWithoutFamilyInput[]
    deleteMany?: SupportMeasureScalarWhereInput | SupportMeasureScalarWhereInput[]
  }

  export type DocumentUncheckedUpdateManyWithoutFamilyNestedInput = {
    create?: XOR<DocumentCreateWithoutFamilyInput, DocumentUncheckedCreateWithoutFamilyInput> | DocumentCreateWithoutFamilyInput[] | DocumentUncheckedCreateWithoutFamilyInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutFamilyInput | DocumentCreateOrConnectWithoutFamilyInput[]
    upsert?: DocumentUpsertWithWhereUniqueWithoutFamilyInput | DocumentUpsertWithWhereUniqueWithoutFamilyInput[]
    createMany?: DocumentCreateManyFamilyInputEnvelope
    set?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    disconnect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    delete?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    update?: DocumentUpdateWithWhereUniqueWithoutFamilyInput | DocumentUpdateWithWhereUniqueWithoutFamilyInput[]
    updateMany?: DocumentUpdateManyWithWhereWithoutFamilyInput | DocumentUpdateManyWithWhereWithoutFamilyInput[]
    deleteMany?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
  }

  export type FamilyHistoryUncheckedUpdateManyWithoutFamilyNestedInput = {
    create?: XOR<FamilyHistoryCreateWithoutFamilyInput, FamilyHistoryUncheckedCreateWithoutFamilyInput> | FamilyHistoryCreateWithoutFamilyInput[] | FamilyHistoryUncheckedCreateWithoutFamilyInput[]
    connectOrCreate?: FamilyHistoryCreateOrConnectWithoutFamilyInput | FamilyHistoryCreateOrConnectWithoutFamilyInput[]
    upsert?: FamilyHistoryUpsertWithWhereUniqueWithoutFamilyInput | FamilyHistoryUpsertWithWhereUniqueWithoutFamilyInput[]
    createMany?: FamilyHistoryCreateManyFamilyInputEnvelope
    set?: FamilyHistoryWhereUniqueInput | FamilyHistoryWhereUniqueInput[]
    disconnect?: FamilyHistoryWhereUniqueInput | FamilyHistoryWhereUniqueInput[]
    delete?: FamilyHistoryWhereUniqueInput | FamilyHistoryWhereUniqueInput[]
    connect?: FamilyHistoryWhereUniqueInput | FamilyHistoryWhereUniqueInput[]
    update?: FamilyHistoryUpdateWithWhereUniqueWithoutFamilyInput | FamilyHistoryUpdateWithWhereUniqueWithoutFamilyInput[]
    updateMany?: FamilyHistoryUpdateManyWithWhereWithoutFamilyInput | FamilyHistoryUpdateManyWithWhereWithoutFamilyInput[]
    deleteMany?: FamilyHistoryScalarWhereInput | FamilyHistoryScalarWhereInput[]
  }

  export type FamilyMemberCreatechronicConditionsInput = {
    set: string[]
  }

  export type FamilyMemberCreateallergiesInput = {
    set: string[]
  }

  export type FamilyMemberCreatemedicationsInput = {
    set: string[]
  }

  export type FamilyCreateNestedOneWithoutMembersInput = {
    create?: XOR<FamilyCreateWithoutMembersInput, FamilyUncheckedCreateWithoutMembersInput>
    connectOrCreate?: FamilyCreateOrConnectWithoutMembersInput
    connect?: FamilyWhereUniqueInput
  }

  export type SupportMeasureCreateNestedManyWithoutMemberInput = {
    create?: XOR<SupportMeasureCreateWithoutMemberInput, SupportMeasureUncheckedCreateWithoutMemberInput> | SupportMeasureCreateWithoutMemberInput[] | SupportMeasureUncheckedCreateWithoutMemberInput[]
    connectOrCreate?: SupportMeasureCreateOrConnectWithoutMemberInput | SupportMeasureCreateOrConnectWithoutMemberInput[]
    createMany?: SupportMeasureCreateManyMemberInputEnvelope
    connect?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
  }

  export type DocumentCreateNestedManyWithoutMemberInput = {
    create?: XOR<DocumentCreateWithoutMemberInput, DocumentUncheckedCreateWithoutMemberInput> | DocumentCreateWithoutMemberInput[] | DocumentUncheckedCreateWithoutMemberInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutMemberInput | DocumentCreateOrConnectWithoutMemberInput[]
    createMany?: DocumentCreateManyMemberInputEnvelope
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
  }

  export type SupportMeasureUncheckedCreateNestedManyWithoutMemberInput = {
    create?: XOR<SupportMeasureCreateWithoutMemberInput, SupportMeasureUncheckedCreateWithoutMemberInput> | SupportMeasureCreateWithoutMemberInput[] | SupportMeasureUncheckedCreateWithoutMemberInput[]
    connectOrCreate?: SupportMeasureCreateOrConnectWithoutMemberInput | SupportMeasureCreateOrConnectWithoutMemberInput[]
    createMany?: SupportMeasureCreateManyMemberInputEnvelope
    connect?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
  }

  export type DocumentUncheckedCreateNestedManyWithoutMemberInput = {
    create?: XOR<DocumentCreateWithoutMemberInput, DocumentUncheckedCreateWithoutMemberInput> | DocumentCreateWithoutMemberInput[] | DocumentUncheckedCreateWithoutMemberInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutMemberInput | DocumentCreateOrConnectWithoutMemberInput[]
    createMany?: DocumentCreateManyMemberInputEnvelope
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
  }

  export type FamilyMemberUpdatechronicConditionsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type FamilyMemberUpdateallergiesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type FamilyMemberUpdatemedicationsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type FamilyUpdateOneRequiredWithoutMembersNestedInput = {
    create?: XOR<FamilyCreateWithoutMembersInput, FamilyUncheckedCreateWithoutMembersInput>
    connectOrCreate?: FamilyCreateOrConnectWithoutMembersInput
    upsert?: FamilyUpsertWithoutMembersInput
    connect?: FamilyWhereUniqueInput
    update?: XOR<XOR<FamilyUpdateToOneWithWhereWithoutMembersInput, FamilyUpdateWithoutMembersInput>, FamilyUncheckedUpdateWithoutMembersInput>
  }

  export type SupportMeasureUpdateManyWithoutMemberNestedInput = {
    create?: XOR<SupportMeasureCreateWithoutMemberInput, SupportMeasureUncheckedCreateWithoutMemberInput> | SupportMeasureCreateWithoutMemberInput[] | SupportMeasureUncheckedCreateWithoutMemberInput[]
    connectOrCreate?: SupportMeasureCreateOrConnectWithoutMemberInput | SupportMeasureCreateOrConnectWithoutMemberInput[]
    upsert?: SupportMeasureUpsertWithWhereUniqueWithoutMemberInput | SupportMeasureUpsertWithWhereUniqueWithoutMemberInput[]
    createMany?: SupportMeasureCreateManyMemberInputEnvelope
    set?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
    disconnect?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
    delete?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
    connect?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
    update?: SupportMeasureUpdateWithWhereUniqueWithoutMemberInput | SupportMeasureUpdateWithWhereUniqueWithoutMemberInput[]
    updateMany?: SupportMeasureUpdateManyWithWhereWithoutMemberInput | SupportMeasureUpdateManyWithWhereWithoutMemberInput[]
    deleteMany?: SupportMeasureScalarWhereInput | SupportMeasureScalarWhereInput[]
  }

  export type DocumentUpdateManyWithoutMemberNestedInput = {
    create?: XOR<DocumentCreateWithoutMemberInput, DocumentUncheckedCreateWithoutMemberInput> | DocumentCreateWithoutMemberInput[] | DocumentUncheckedCreateWithoutMemberInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutMemberInput | DocumentCreateOrConnectWithoutMemberInput[]
    upsert?: DocumentUpsertWithWhereUniqueWithoutMemberInput | DocumentUpsertWithWhereUniqueWithoutMemberInput[]
    createMany?: DocumentCreateManyMemberInputEnvelope
    set?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    disconnect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    delete?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    update?: DocumentUpdateWithWhereUniqueWithoutMemberInput | DocumentUpdateWithWhereUniqueWithoutMemberInput[]
    updateMany?: DocumentUpdateManyWithWhereWithoutMemberInput | DocumentUpdateManyWithWhereWithoutMemberInput[]
    deleteMany?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
  }

  export type SupportMeasureUncheckedUpdateManyWithoutMemberNestedInput = {
    create?: XOR<SupportMeasureCreateWithoutMemberInput, SupportMeasureUncheckedCreateWithoutMemberInput> | SupportMeasureCreateWithoutMemberInput[] | SupportMeasureUncheckedCreateWithoutMemberInput[]
    connectOrCreate?: SupportMeasureCreateOrConnectWithoutMemberInput | SupportMeasureCreateOrConnectWithoutMemberInput[]
    upsert?: SupportMeasureUpsertWithWhereUniqueWithoutMemberInput | SupportMeasureUpsertWithWhereUniqueWithoutMemberInput[]
    createMany?: SupportMeasureCreateManyMemberInputEnvelope
    set?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
    disconnect?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
    delete?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
    connect?: SupportMeasureWhereUniqueInput | SupportMeasureWhereUniqueInput[]
    update?: SupportMeasureUpdateWithWhereUniqueWithoutMemberInput | SupportMeasureUpdateWithWhereUniqueWithoutMemberInput[]
    updateMany?: SupportMeasureUpdateManyWithWhereWithoutMemberInput | SupportMeasureUpdateManyWithWhereWithoutMemberInput[]
    deleteMany?: SupportMeasureScalarWhereInput | SupportMeasureScalarWhereInput[]
  }

  export type DocumentUncheckedUpdateManyWithoutMemberNestedInput = {
    create?: XOR<DocumentCreateWithoutMemberInput, DocumentUncheckedCreateWithoutMemberInput> | DocumentCreateWithoutMemberInput[] | DocumentUncheckedCreateWithoutMemberInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutMemberInput | DocumentCreateOrConnectWithoutMemberInput[]
    upsert?: DocumentUpsertWithWhereUniqueWithoutMemberInput | DocumentUpsertWithWhereUniqueWithoutMemberInput[]
    createMany?: DocumentCreateManyMemberInputEnvelope
    set?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    disconnect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    delete?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    update?: DocumentUpdateWithWhereUniqueWithoutMemberInput | DocumentUpdateWithWhereUniqueWithoutMemberInput[]
    updateMany?: DocumentUpdateManyWithWhereWithoutMemberInput | DocumentUpdateManyWithWhereWithoutMemberInput[]
    deleteMany?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
  }

  export type FamilyCreateNestedOneWithoutSupportMeasuresInput = {
    create?: XOR<FamilyCreateWithoutSupportMeasuresInput, FamilyUncheckedCreateWithoutSupportMeasuresInput>
    connectOrCreate?: FamilyCreateOrConnectWithoutSupportMeasuresInput
    connect?: FamilyWhereUniqueInput
  }

  export type FamilyMemberCreateNestedOneWithoutSupportMeasuresInput = {
    create?: XOR<FamilyMemberCreateWithoutSupportMeasuresInput, FamilyMemberUncheckedCreateWithoutSupportMeasuresInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutSupportMeasuresInput
    connect?: FamilyMemberWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCreatedSupportMeasuresInput = {
    create?: XOR<UserCreateWithoutCreatedSupportMeasuresInput, UserUncheckedCreateWithoutCreatedSupportMeasuresInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedSupportMeasuresInput
    connect?: UserWhereUniqueInput
  }

  export type DocumentCreateNestedManyWithoutSupportMeasureInput = {
    create?: XOR<DocumentCreateWithoutSupportMeasureInput, DocumentUncheckedCreateWithoutSupportMeasureInput> | DocumentCreateWithoutSupportMeasureInput[] | DocumentUncheckedCreateWithoutSupportMeasureInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutSupportMeasureInput | DocumentCreateOrConnectWithoutSupportMeasureInput[]
    createMany?: DocumentCreateManySupportMeasureInputEnvelope
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
  }

  export type DocumentUncheckedCreateNestedManyWithoutSupportMeasureInput = {
    create?: XOR<DocumentCreateWithoutSupportMeasureInput, DocumentUncheckedCreateWithoutSupportMeasureInput> | DocumentCreateWithoutSupportMeasureInput[] | DocumentUncheckedCreateWithoutSupportMeasureInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutSupportMeasureInput | DocumentCreateOrConnectWithoutSupportMeasureInput[]
    createMany?: DocumentCreateManySupportMeasureInputEnvelope
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
  }

  export type FamilyUpdateOneRequiredWithoutSupportMeasuresNestedInput = {
    create?: XOR<FamilyCreateWithoutSupportMeasuresInput, FamilyUncheckedCreateWithoutSupportMeasuresInput>
    connectOrCreate?: FamilyCreateOrConnectWithoutSupportMeasuresInput
    upsert?: FamilyUpsertWithoutSupportMeasuresInput
    connect?: FamilyWhereUniqueInput
    update?: XOR<XOR<FamilyUpdateToOneWithWhereWithoutSupportMeasuresInput, FamilyUpdateWithoutSupportMeasuresInput>, FamilyUncheckedUpdateWithoutSupportMeasuresInput>
  }

  export type FamilyMemberUpdateOneWithoutSupportMeasuresNestedInput = {
    create?: XOR<FamilyMemberCreateWithoutSupportMeasuresInput, FamilyMemberUncheckedCreateWithoutSupportMeasuresInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutSupportMeasuresInput
    upsert?: FamilyMemberUpsertWithoutSupportMeasuresInput
    disconnect?: boolean
    delete?: FamilyMemberWhereInput | boolean
    connect?: FamilyMemberWhereUniqueInput
    update?: XOR<XOR<FamilyMemberUpdateToOneWithWhereWithoutSupportMeasuresInput, FamilyMemberUpdateWithoutSupportMeasuresInput>, FamilyMemberUncheckedUpdateWithoutSupportMeasuresInput>
  }

  export type UserUpdateOneRequiredWithoutCreatedSupportMeasuresNestedInput = {
    create?: XOR<UserCreateWithoutCreatedSupportMeasuresInput, UserUncheckedCreateWithoutCreatedSupportMeasuresInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedSupportMeasuresInput
    upsert?: UserUpsertWithoutCreatedSupportMeasuresInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedSupportMeasuresInput, UserUpdateWithoutCreatedSupportMeasuresInput>, UserUncheckedUpdateWithoutCreatedSupportMeasuresInput>
  }

  export type DocumentUpdateManyWithoutSupportMeasureNestedInput = {
    create?: XOR<DocumentCreateWithoutSupportMeasureInput, DocumentUncheckedCreateWithoutSupportMeasureInput> | DocumentCreateWithoutSupportMeasureInput[] | DocumentUncheckedCreateWithoutSupportMeasureInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutSupportMeasureInput | DocumentCreateOrConnectWithoutSupportMeasureInput[]
    upsert?: DocumentUpsertWithWhereUniqueWithoutSupportMeasureInput | DocumentUpsertWithWhereUniqueWithoutSupportMeasureInput[]
    createMany?: DocumentCreateManySupportMeasureInputEnvelope
    set?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    disconnect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    delete?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    update?: DocumentUpdateWithWhereUniqueWithoutSupportMeasureInput | DocumentUpdateWithWhereUniqueWithoutSupportMeasureInput[]
    updateMany?: DocumentUpdateManyWithWhereWithoutSupportMeasureInput | DocumentUpdateManyWithWhereWithoutSupportMeasureInput[]
    deleteMany?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
  }

  export type DocumentUncheckedUpdateManyWithoutSupportMeasureNestedInput = {
    create?: XOR<DocumentCreateWithoutSupportMeasureInput, DocumentUncheckedCreateWithoutSupportMeasureInput> | DocumentCreateWithoutSupportMeasureInput[] | DocumentUncheckedCreateWithoutSupportMeasureInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutSupportMeasureInput | DocumentCreateOrConnectWithoutSupportMeasureInput[]
    upsert?: DocumentUpsertWithWhereUniqueWithoutSupportMeasureInput | DocumentUpsertWithWhereUniqueWithoutSupportMeasureInput[]
    createMany?: DocumentCreateManySupportMeasureInputEnvelope
    set?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    disconnect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    delete?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    update?: DocumentUpdateWithWhereUniqueWithoutSupportMeasureInput | DocumentUpdateWithWhereUniqueWithoutSupportMeasureInput[]
    updateMany?: DocumentUpdateManyWithWhereWithoutSupportMeasureInput | DocumentUpdateManyWithWhereWithoutSupportMeasureInput[]
    deleteMany?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
  }

  export type DocumentCreatetagsInput = {
    set: string[]
  }

  export type FamilyCreateNestedOneWithoutDocumentsInput = {
    create?: XOR<FamilyCreateWithoutDocumentsInput, FamilyUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: FamilyCreateOrConnectWithoutDocumentsInput
    connect?: FamilyWhereUniqueInput
  }

  export type FamilyMemberCreateNestedOneWithoutDocumentsInput = {
    create?: XOR<FamilyMemberCreateWithoutDocumentsInput, FamilyMemberUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutDocumentsInput
    connect?: FamilyMemberWhereUniqueInput
  }

  export type SupportMeasureCreateNestedOneWithoutDocumentsInput = {
    create?: XOR<SupportMeasureCreateWithoutDocumentsInput, SupportMeasureUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: SupportMeasureCreateOrConnectWithoutDocumentsInput
    connect?: SupportMeasureWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutDocumentsInput = {
    create?: XOR<UserCreateWithoutDocumentsInput, UserUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDocumentsInput
    connect?: UserWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DocumentUpdatetagsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type FamilyUpdateOneWithoutDocumentsNestedInput = {
    create?: XOR<FamilyCreateWithoutDocumentsInput, FamilyUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: FamilyCreateOrConnectWithoutDocumentsInput
    upsert?: FamilyUpsertWithoutDocumentsInput
    disconnect?: boolean
    delete?: FamilyWhereInput | boolean
    connect?: FamilyWhereUniqueInput
    update?: XOR<XOR<FamilyUpdateToOneWithWhereWithoutDocumentsInput, FamilyUpdateWithoutDocumentsInput>, FamilyUncheckedUpdateWithoutDocumentsInput>
  }

  export type FamilyMemberUpdateOneWithoutDocumentsNestedInput = {
    create?: XOR<FamilyMemberCreateWithoutDocumentsInput, FamilyMemberUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: FamilyMemberCreateOrConnectWithoutDocumentsInput
    upsert?: FamilyMemberUpsertWithoutDocumentsInput
    disconnect?: boolean
    delete?: FamilyMemberWhereInput | boolean
    connect?: FamilyMemberWhereUniqueInput
    update?: XOR<XOR<FamilyMemberUpdateToOneWithWhereWithoutDocumentsInput, FamilyMemberUpdateWithoutDocumentsInput>, FamilyMemberUncheckedUpdateWithoutDocumentsInput>
  }

  export type SupportMeasureUpdateOneWithoutDocumentsNestedInput = {
    create?: XOR<SupportMeasureCreateWithoutDocumentsInput, SupportMeasureUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: SupportMeasureCreateOrConnectWithoutDocumentsInput
    upsert?: SupportMeasureUpsertWithoutDocumentsInput
    disconnect?: boolean
    delete?: SupportMeasureWhereInput | boolean
    connect?: SupportMeasureWhereUniqueInput
    update?: XOR<XOR<SupportMeasureUpdateToOneWithWhereWithoutDocumentsInput, SupportMeasureUpdateWithoutDocumentsInput>, SupportMeasureUncheckedUpdateWithoutDocumentsInput>
  }

  export type UserUpdateOneRequiredWithoutDocumentsNestedInput = {
    create?: XOR<UserCreateWithoutDocumentsInput, UserUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDocumentsInput
    upsert?: UserUpsertWithoutDocumentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDocumentsInput, UserUpdateWithoutDocumentsInput>, UserUncheckedUpdateWithoutDocumentsInput>
  }

  export type FamilyHistoryCreatechangedFieldsInput = {
    set: string[]
  }

  export type FamilyCreateNestedOneWithoutHistoryInput = {
    create?: XOR<FamilyCreateWithoutHistoryInput, FamilyUncheckedCreateWithoutHistoryInput>
    connectOrCreate?: FamilyCreateOrConnectWithoutHistoryInput
    connect?: FamilyWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutFamilyHistoryInput = {
    create?: XOR<UserCreateWithoutFamilyHistoryInput, UserUncheckedCreateWithoutFamilyHistoryInput>
    connectOrCreate?: UserCreateOrConnectWithoutFamilyHistoryInput
    connect?: UserWhereUniqueInput
  }

  export type FamilyHistoryUpdatechangedFieldsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type FamilyUpdateOneRequiredWithoutHistoryNestedInput = {
    create?: XOR<FamilyCreateWithoutHistoryInput, FamilyUncheckedCreateWithoutHistoryInput>
    connectOrCreate?: FamilyCreateOrConnectWithoutHistoryInput
    upsert?: FamilyUpsertWithoutHistoryInput
    connect?: FamilyWhereUniqueInput
    update?: XOR<XOR<FamilyUpdateToOneWithWhereWithoutHistoryInput, FamilyUpdateWithoutHistoryInput>, FamilyUncheckedUpdateWithoutHistoryInput>
  }

  export type UserUpdateOneRequiredWithoutFamilyHistoryNestedInput = {
    create?: XOR<UserCreateWithoutFamilyHistoryInput, UserUncheckedCreateWithoutFamilyHistoryInput>
    connectOrCreate?: UserCreateOrConnectWithoutFamilyHistoryInput
    upsert?: UserUpsertWithoutFamilyHistoryInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFamilyHistoryInput, UserUpdateWithoutFamilyHistoryInput>, UserUncheckedUpdateWithoutFamilyHistoryInput>
  }

  export type UserCreateNestedOneWithoutNotificationsInput = {
    create?: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutNotificationsReceivedInput = {
    create?: XOR<UserCreateWithoutNotificationsReceivedInput, UserUncheckedCreateWithoutNotificationsReceivedInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationsReceivedInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutNotificationsNestedInput = {
    create?: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationsInput
    upsert?: UserUpsertWithoutNotificationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutNotificationsInput, UserUpdateWithoutNotificationsInput>, UserUncheckedUpdateWithoutNotificationsInput>
  }

  export type UserUpdateOneRequiredWithoutNotificationsReceivedNestedInput = {
    create?: XOR<UserCreateWithoutNotificationsReceivedInput, UserUncheckedCreateWithoutNotificationsReceivedInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationsReceivedInput
    upsert?: UserUpsertWithoutNotificationsReceivedInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutNotificationsReceivedInput, UserUpdateWithoutNotificationsReceivedInput>, UserUncheckedUpdateWithoutNotificationsReceivedInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
    isSet?: boolean
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
    isSet?: boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
    isSet?: boolean
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
    isSet?: boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
    isSet?: boolean
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
    isSet?: boolean
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
    isSet?: boolean
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
    isSet?: boolean
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    isSet?: boolean
  }

  export type FamilyCreateWithoutCreatedByInput = {
    id?: string
    caseNumber: string
    familyName: string
    address: string
    region: string
    registrationAddress?: string | null
    district: string
    city?: string | null
    status: string
    riskLevel: string
    riskFactors?: FamilyCreateriskFactorsInput | string[]
    registrationDate: Date | string
    lastUpdate?: Date | string
    isActive?: boolean
    inactiveReason?: string | null
    notes?: string | null
    children?: number | null
    settingReason?: string | null
    inspectionStatus?: string | null
    familyType?: string | null
    housingType?: string | null
    employment?: string | null
    workplace?: string | null
    tzhsReason?: string | null
    nbReason?: string | null
    familyIncome?: string | null
    needsSupport?: boolean
    needsEducation?: boolean
    needsHealth?: boolean
    needsPolice?: boolean
    hasDisability?: boolean
    contactPhone?: string | null
    contactEmail?: string | null
    incomeSource?: string | null
    monthlyIncome?: number | null
    socialBenefits?: FamilyCreatesocialBenefitsInput | string[]
    referralSource?: string | null
    primaryLanguage?: string | null
    hasInterpreterNeeded?: boolean
    updatedBy: UserCreateNestedOneWithoutUpdatedFamiliesInput
    members?: FamilyMemberCreateNestedManyWithoutFamilyInput
    supportMeasures?: SupportMeasureCreateNestedManyWithoutFamilyInput
    documents?: DocumentCreateNestedManyWithoutFamilyInput
    history?: FamilyHistoryCreateNestedManyWithoutFamilyInput
  }

  export type FamilyUncheckedCreateWithoutCreatedByInput = {
    id?: string
    caseNumber: string
    familyName: string
    address: string
    region: string
    registrationAddress?: string | null
    district: string
    city?: string | null
    status: string
    riskLevel: string
    riskFactors?: FamilyCreateriskFactorsInput | string[]
    registrationDate: Date | string
    lastUpdate?: Date | string
    isActive?: boolean
    inactiveReason?: string | null
    notes?: string | null
    children?: number | null
    settingReason?: string | null
    inspectionStatus?: string | null
    familyType?: string | null
    housingType?: string | null
    employment?: string | null
    workplace?: string | null
    tzhsReason?: string | null
    nbReason?: string | null
    familyIncome?: string | null
    needsSupport?: boolean
    needsEducation?: boolean
    needsHealth?: boolean
    needsPolice?: boolean
    hasDisability?: boolean
    contactPhone?: string | null
    contactEmail?: string | null
    incomeSource?: string | null
    monthlyIncome?: number | null
    socialBenefits?: FamilyCreatesocialBenefitsInput | string[]
    referralSource?: string | null
    primaryLanguage?: string | null
    hasInterpreterNeeded?: boolean
    updatedById: string
    members?: FamilyMemberUncheckedCreateNestedManyWithoutFamilyInput
    supportMeasures?: SupportMeasureUncheckedCreateNestedManyWithoutFamilyInput
    documents?: DocumentUncheckedCreateNestedManyWithoutFamilyInput
    history?: FamilyHistoryUncheckedCreateNestedManyWithoutFamilyInput
  }

  export type FamilyCreateOrConnectWithoutCreatedByInput = {
    where: FamilyWhereUniqueInput
    create: XOR<FamilyCreateWithoutCreatedByInput, FamilyUncheckedCreateWithoutCreatedByInput>
  }

  export type FamilyCreateManyCreatedByInputEnvelope = {
    data: FamilyCreateManyCreatedByInput | FamilyCreateManyCreatedByInput[]
  }

  export type FamilyCreateWithoutUpdatedByInput = {
    id?: string
    caseNumber: string
    familyName: string
    address: string
    region: string
    registrationAddress?: string | null
    district: string
    city?: string | null
    status: string
    riskLevel: string
    riskFactors?: FamilyCreateriskFactorsInput | string[]
    registrationDate: Date | string
    lastUpdate?: Date | string
    isActive?: boolean
    inactiveReason?: string | null
    notes?: string | null
    children?: number | null
    settingReason?: string | null
    inspectionStatus?: string | null
    familyType?: string | null
    housingType?: string | null
    employment?: string | null
    workplace?: string | null
    tzhsReason?: string | null
    nbReason?: string | null
    familyIncome?: string | null
    needsSupport?: boolean
    needsEducation?: boolean
    needsHealth?: boolean
    needsPolice?: boolean
    hasDisability?: boolean
    contactPhone?: string | null
    contactEmail?: string | null
    incomeSource?: string | null
    monthlyIncome?: number | null
    socialBenefits?: FamilyCreatesocialBenefitsInput | string[]
    referralSource?: string | null
    primaryLanguage?: string | null
    hasInterpreterNeeded?: boolean
    createdBy: UserCreateNestedOneWithoutCreatedFamiliesInput
    members?: FamilyMemberCreateNestedManyWithoutFamilyInput
    supportMeasures?: SupportMeasureCreateNestedManyWithoutFamilyInput
    documents?: DocumentCreateNestedManyWithoutFamilyInput
    history?: FamilyHistoryCreateNestedManyWithoutFamilyInput
  }

  export type FamilyUncheckedCreateWithoutUpdatedByInput = {
    id?: string
    caseNumber: string
    familyName: string
    address: string
    region: string
    registrationAddress?: string | null
    district: string
    city?: string | null
    status: string
    riskLevel: string
    riskFactors?: FamilyCreateriskFactorsInput | string[]
    registrationDate: Date | string
    lastUpdate?: Date | string
    isActive?: boolean
    inactiveReason?: string | null
    notes?: string | null
    children?: number | null
    settingReason?: string | null
    inspectionStatus?: string | null
    familyType?: string | null
    housingType?: string | null
    employment?: string | null
    workplace?: string | null
    tzhsReason?: string | null
    nbReason?: string | null
    familyIncome?: string | null
    needsSupport?: boolean
    needsEducation?: boolean
    needsHealth?: boolean
    needsPolice?: boolean
    hasDisability?: boolean
    contactPhone?: string | null
    contactEmail?: string | null
    incomeSource?: string | null
    monthlyIncome?: number | null
    socialBenefits?: FamilyCreatesocialBenefitsInput | string[]
    referralSource?: string | null
    primaryLanguage?: string | null
    hasInterpreterNeeded?: boolean
    createdById: string
    members?: FamilyMemberUncheckedCreateNestedManyWithoutFamilyInput
    supportMeasures?: SupportMeasureUncheckedCreateNestedManyWithoutFamilyInput
    documents?: DocumentUncheckedCreateNestedManyWithoutFamilyInput
    history?: FamilyHistoryUncheckedCreateNestedManyWithoutFamilyInput
  }

  export type FamilyCreateOrConnectWithoutUpdatedByInput = {
    where: FamilyWhereUniqueInput
    create: XOR<FamilyCreateWithoutUpdatedByInput, FamilyUncheckedCreateWithoutUpdatedByInput>
  }

  export type FamilyCreateManyUpdatedByInputEnvelope = {
    data: FamilyCreateManyUpdatedByInput | FamilyCreateManyUpdatedByInput[]
  }

  export type SupportMeasureCreateWithoutCreatedByInput = {
    id?: string
    type: string
    description: string
    category?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    status: string
    provider?: string | null
    result?: string | null
    notes?: string | null
    createdAt?: Date | string
    priority?: string | null
    cost?: number | null
    fundingSource?: string | null
    contactPerson?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    frequency?: string | null
    location?: string | null
    followUpDate?: Date | string | null
    evaluationDate?: Date | string | null
    effectiveness?: string | null
    family: FamilyCreateNestedOneWithoutSupportMeasuresInput
    member?: FamilyMemberCreateNestedOneWithoutSupportMeasuresInput
    documents?: DocumentCreateNestedManyWithoutSupportMeasureInput
  }

  export type SupportMeasureUncheckedCreateWithoutCreatedByInput = {
    id?: string
    familyId: string
    memberId?: string | null
    type: string
    description: string
    category?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    status: string
    provider?: string | null
    result?: string | null
    notes?: string | null
    createdAt?: Date | string
    priority?: string | null
    cost?: number | null
    fundingSource?: string | null
    contactPerson?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    frequency?: string | null
    location?: string | null
    followUpDate?: Date | string | null
    evaluationDate?: Date | string | null
    effectiveness?: string | null
    documents?: DocumentUncheckedCreateNestedManyWithoutSupportMeasureInput
  }

  export type SupportMeasureCreateOrConnectWithoutCreatedByInput = {
    where: SupportMeasureWhereUniqueInput
    create: XOR<SupportMeasureCreateWithoutCreatedByInput, SupportMeasureUncheckedCreateWithoutCreatedByInput>
  }

  export type SupportMeasureCreateManyCreatedByInputEnvelope = {
    data: SupportMeasureCreateManyCreatedByInput | SupportMeasureCreateManyCreatedByInput[]
  }

  export type DocumentCreateWithoutUploadedByInput = {
    id?: string
    title: string
    type: string
    fileUrl: string
    mimeType: string
    fileSize: number
    uploadDate?: Date | string
    notes?: string | null
    category?: string | null
    expirationDate?: Date | string | null
    isConfidential?: boolean
    tags?: DocumentCreatetagsInput | string[]
    status?: string | null
    family?: FamilyCreateNestedOneWithoutDocumentsInput
    member?: FamilyMemberCreateNestedOneWithoutDocumentsInput
    supportMeasure?: SupportMeasureCreateNestedOneWithoutDocumentsInput
  }

  export type DocumentUncheckedCreateWithoutUploadedByInput = {
    id?: string
    title: string
    type: string
    fileUrl: string
    mimeType: string
    fileSize: number
    familyId?: string | null
    memberId?: string | null
    supportId?: string | null
    uploadDate?: Date | string
    notes?: string | null
    category?: string | null
    expirationDate?: Date | string | null
    isConfidential?: boolean
    tags?: DocumentCreatetagsInput | string[]
    status?: string | null
  }

  export type DocumentCreateOrConnectWithoutUploadedByInput = {
    where: DocumentWhereUniqueInput
    create: XOR<DocumentCreateWithoutUploadedByInput, DocumentUncheckedCreateWithoutUploadedByInput>
  }

  export type DocumentCreateManyUploadedByInputEnvelope = {
    data: DocumentCreateManyUploadedByInput | DocumentCreateManyUploadedByInput[]
  }

  export type NotificationCreateWithoutCreatorInput = {
    id?: string
    title: string
    message: string
    type: string
    isRead?: boolean
    createdAt?: Date | string
    priority?: string | null
    category?: string | null
    expiresAt?: Date | string | null
    actionUrl?: string | null
    actionLabel?: string | null
    isArchived?: boolean
    recipient: UserCreateNestedOneWithoutNotificationsReceivedInput
  }

  export type NotificationUncheckedCreateWithoutCreatorInput = {
    id?: string
    title: string
    message: string
    type: string
    isRead?: boolean
    createdAt?: Date | string
    priority?: string | null
    category?: string | null
    expiresAt?: Date | string | null
    actionUrl?: string | null
    actionLabel?: string | null
    isArchived?: boolean
    recipientId: string
  }

  export type NotificationCreateOrConnectWithoutCreatorInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutCreatorInput, NotificationUncheckedCreateWithoutCreatorInput>
  }

  export type NotificationCreateManyCreatorInputEnvelope = {
    data: NotificationCreateManyCreatorInput | NotificationCreateManyCreatorInput[]
  }

  export type NotificationCreateWithoutRecipientInput = {
    id?: string
    title: string
    message: string
    type: string
    isRead?: boolean
    createdAt?: Date | string
    priority?: string | null
    category?: string | null
    expiresAt?: Date | string | null
    actionUrl?: string | null
    actionLabel?: string | null
    isArchived?: boolean
    creator: UserCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateWithoutRecipientInput = {
    id?: string
    title: string
    message: string
    type: string
    isRead?: boolean
    createdAt?: Date | string
    priority?: string | null
    category?: string | null
    expiresAt?: Date | string | null
    actionUrl?: string | null
    actionLabel?: string | null
    isArchived?: boolean
    creatorId: string
  }

  export type NotificationCreateOrConnectWithoutRecipientInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutRecipientInput, NotificationUncheckedCreateWithoutRecipientInput>
  }

  export type NotificationCreateManyRecipientInputEnvelope = {
    data: NotificationCreateManyRecipientInput | NotificationCreateManyRecipientInput[]
  }

  export type FamilyHistoryCreateWithoutUserInput = {
    id?: string
    action: string
    description: string
    timestamp?: Date | string
    changedFields?: FamilyHistoryCreatechangedFieldsInput | string[]
    previousValues?: InputJsonValue | null
    newValues?: InputJsonValue | null
    ipAddress?: string | null
    userAgent?: string | null
    family: FamilyCreateNestedOneWithoutHistoryInput
  }

  export type FamilyHistoryUncheckedCreateWithoutUserInput = {
    id?: string
    familyId: string
    action: string
    description: string
    timestamp?: Date | string
    changedFields?: FamilyHistoryCreatechangedFieldsInput | string[]
    previousValues?: InputJsonValue | null
    newValues?: InputJsonValue | null
    ipAddress?: string | null
    userAgent?: string | null
  }

  export type FamilyHistoryCreateOrConnectWithoutUserInput = {
    where: FamilyHistoryWhereUniqueInput
    create: XOR<FamilyHistoryCreateWithoutUserInput, FamilyHistoryUncheckedCreateWithoutUserInput>
  }

  export type FamilyHistoryCreateManyUserInputEnvelope = {
    data: FamilyHistoryCreateManyUserInput | FamilyHistoryCreateManyUserInput[]
  }

  export type FamilyUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: FamilyWhereUniqueInput
    update: XOR<FamilyUpdateWithoutCreatedByInput, FamilyUncheckedUpdateWithoutCreatedByInput>
    create: XOR<FamilyCreateWithoutCreatedByInput, FamilyUncheckedCreateWithoutCreatedByInput>
  }

  export type FamilyUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: FamilyWhereUniqueInput
    data: XOR<FamilyUpdateWithoutCreatedByInput, FamilyUncheckedUpdateWithoutCreatedByInput>
  }

  export type FamilyUpdateManyWithWhereWithoutCreatedByInput = {
    where: FamilyScalarWhereInput
    data: XOR<FamilyUpdateManyMutationInput, FamilyUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type FamilyScalarWhereInput = {
    AND?: FamilyScalarWhereInput | FamilyScalarWhereInput[]
    OR?: FamilyScalarWhereInput[]
    NOT?: FamilyScalarWhereInput | FamilyScalarWhereInput[]
    id?: StringFilter<"Family"> | string
    caseNumber?: StringFilter<"Family"> | string
    familyName?: StringFilter<"Family"> | string
    address?: StringFilter<"Family"> | string
    region?: StringFilter<"Family"> | string
    registrationAddress?: StringNullableFilter<"Family"> | string | null
    district?: StringFilter<"Family"> | string
    city?: StringNullableFilter<"Family"> | string | null
    status?: StringFilter<"Family"> | string
    riskLevel?: StringFilter<"Family"> | string
    riskFactors?: StringNullableListFilter<"Family">
    registrationDate?: DateTimeFilter<"Family"> | Date | string
    lastUpdate?: DateTimeFilter<"Family"> | Date | string
    isActive?: BoolFilter<"Family"> | boolean
    inactiveReason?: StringNullableFilter<"Family"> | string | null
    notes?: StringNullableFilter<"Family"> | string | null
    children?: IntNullableFilter<"Family"> | number | null
    settingReason?: StringNullableFilter<"Family"> | string | null
    inspectionStatus?: StringNullableFilter<"Family"> | string | null
    familyType?: StringNullableFilter<"Family"> | string | null
    housingType?: StringNullableFilter<"Family"> | string | null
    employment?: StringNullableFilter<"Family"> | string | null
    workplace?: StringNullableFilter<"Family"> | string | null
    tzhsReason?: StringNullableFilter<"Family"> | string | null
    nbReason?: StringNullableFilter<"Family"> | string | null
    familyIncome?: StringNullableFilter<"Family"> | string | null
    needsSupport?: BoolFilter<"Family"> | boolean
    needsEducation?: BoolFilter<"Family"> | boolean
    needsHealth?: BoolFilter<"Family"> | boolean
    needsPolice?: BoolFilter<"Family"> | boolean
    hasDisability?: BoolFilter<"Family"> | boolean
    contactPhone?: StringNullableFilter<"Family"> | string | null
    contactEmail?: StringNullableFilter<"Family"> | string | null
    incomeSource?: StringNullableFilter<"Family"> | string | null
    monthlyIncome?: FloatNullableFilter<"Family"> | number | null
    socialBenefits?: StringNullableListFilter<"Family">
    referralSource?: StringNullableFilter<"Family"> | string | null
    primaryLanguage?: StringNullableFilter<"Family"> | string | null
    hasInterpreterNeeded?: BoolFilter<"Family"> | boolean
    createdById?: StringFilter<"Family"> | string
    updatedById?: StringFilter<"Family"> | string
  }

  export type FamilyUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: FamilyWhereUniqueInput
    update: XOR<FamilyUpdateWithoutUpdatedByInput, FamilyUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<FamilyCreateWithoutUpdatedByInput, FamilyUncheckedCreateWithoutUpdatedByInput>
  }

  export type FamilyUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: FamilyWhereUniqueInput
    data: XOR<FamilyUpdateWithoutUpdatedByInput, FamilyUncheckedUpdateWithoutUpdatedByInput>
  }

  export type FamilyUpdateManyWithWhereWithoutUpdatedByInput = {
    where: FamilyScalarWhereInput
    data: XOR<FamilyUpdateManyMutationInput, FamilyUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type SupportMeasureUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: SupportMeasureWhereUniqueInput
    update: XOR<SupportMeasureUpdateWithoutCreatedByInput, SupportMeasureUncheckedUpdateWithoutCreatedByInput>
    create: XOR<SupportMeasureCreateWithoutCreatedByInput, SupportMeasureUncheckedCreateWithoutCreatedByInput>
  }

  export type SupportMeasureUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: SupportMeasureWhereUniqueInput
    data: XOR<SupportMeasureUpdateWithoutCreatedByInput, SupportMeasureUncheckedUpdateWithoutCreatedByInput>
  }

  export type SupportMeasureUpdateManyWithWhereWithoutCreatedByInput = {
    where: SupportMeasureScalarWhereInput
    data: XOR<SupportMeasureUpdateManyMutationInput, SupportMeasureUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type SupportMeasureScalarWhereInput = {
    AND?: SupportMeasureScalarWhereInput | SupportMeasureScalarWhereInput[]
    OR?: SupportMeasureScalarWhereInput[]
    NOT?: SupportMeasureScalarWhereInput | SupportMeasureScalarWhereInput[]
    id?: StringFilter<"SupportMeasure"> | string
    familyId?: StringFilter<"SupportMeasure"> | string
    memberId?: StringNullableFilter<"SupportMeasure"> | string | null
    type?: StringFilter<"SupportMeasure"> | string
    description?: StringFilter<"SupportMeasure"> | string
    category?: StringNullableFilter<"SupportMeasure"> | string | null
    startDate?: DateTimeFilter<"SupportMeasure"> | Date | string
    endDate?: DateTimeNullableFilter<"SupportMeasure"> | Date | string | null
    status?: StringFilter<"SupportMeasure"> | string
    provider?: StringNullableFilter<"SupportMeasure"> | string | null
    result?: StringNullableFilter<"SupportMeasure"> | string | null
    notes?: StringNullableFilter<"SupportMeasure"> | string | null
    createdAt?: DateTimeFilter<"SupportMeasure"> | Date | string
    priority?: StringNullableFilter<"SupportMeasure"> | string | null
    cost?: FloatNullableFilter<"SupportMeasure"> | number | null
    fundingSource?: StringNullableFilter<"SupportMeasure"> | string | null
    contactPerson?: StringNullableFilter<"SupportMeasure"> | string | null
    contactPhone?: StringNullableFilter<"SupportMeasure"> | string | null
    contactEmail?: StringNullableFilter<"SupportMeasure"> | string | null
    frequency?: StringNullableFilter<"SupportMeasure"> | string | null
    location?: StringNullableFilter<"SupportMeasure"> | string | null
    followUpDate?: DateTimeNullableFilter<"SupportMeasure"> | Date | string | null
    evaluationDate?: DateTimeNullableFilter<"SupportMeasure"> | Date | string | null
    effectiveness?: StringNullableFilter<"SupportMeasure"> | string | null
    createdById?: StringFilter<"SupportMeasure"> | string
  }

  export type DocumentUpsertWithWhereUniqueWithoutUploadedByInput = {
    where: DocumentWhereUniqueInput
    update: XOR<DocumentUpdateWithoutUploadedByInput, DocumentUncheckedUpdateWithoutUploadedByInput>
    create: XOR<DocumentCreateWithoutUploadedByInput, DocumentUncheckedCreateWithoutUploadedByInput>
  }

  export type DocumentUpdateWithWhereUniqueWithoutUploadedByInput = {
    where: DocumentWhereUniqueInput
    data: XOR<DocumentUpdateWithoutUploadedByInput, DocumentUncheckedUpdateWithoutUploadedByInput>
  }

  export type DocumentUpdateManyWithWhereWithoutUploadedByInput = {
    where: DocumentScalarWhereInput
    data: XOR<DocumentUpdateManyMutationInput, DocumentUncheckedUpdateManyWithoutUploadedByInput>
  }

  export type DocumentScalarWhereInput = {
    AND?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
    OR?: DocumentScalarWhereInput[]
    NOT?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
    id?: StringFilter<"Document"> | string
    title?: StringFilter<"Document"> | string
    type?: StringFilter<"Document"> | string
    fileUrl?: StringFilter<"Document"> | string
    mimeType?: StringFilter<"Document"> | string
    fileSize?: IntFilter<"Document"> | number
    familyId?: StringNullableFilter<"Document"> | string | null
    memberId?: StringNullableFilter<"Document"> | string | null
    supportId?: StringNullableFilter<"Document"> | string | null
    uploadDate?: DateTimeFilter<"Document"> | Date | string
    notes?: StringNullableFilter<"Document"> | string | null
    category?: StringNullableFilter<"Document"> | string | null
    expirationDate?: DateTimeNullableFilter<"Document"> | Date | string | null
    isConfidential?: BoolFilter<"Document"> | boolean
    tags?: StringNullableListFilter<"Document">
    status?: StringNullableFilter<"Document"> | string | null
    uploadedById?: StringFilter<"Document"> | string
  }

  export type NotificationUpsertWithWhereUniqueWithoutCreatorInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutCreatorInput, NotificationUncheckedUpdateWithoutCreatorInput>
    create: XOR<NotificationCreateWithoutCreatorInput, NotificationUncheckedCreateWithoutCreatorInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutCreatorInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutCreatorInput, NotificationUncheckedUpdateWithoutCreatorInput>
  }

  export type NotificationUpdateManyWithWhereWithoutCreatorInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutCreatorInput>
  }

  export type NotificationScalarWhereInput = {
    AND?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    OR?: NotificationScalarWhereInput[]
    NOT?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    id?: StringFilter<"Notification"> | string
    title?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    type?: StringFilter<"Notification"> | string
    isRead?: BoolFilter<"Notification"> | boolean
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    priority?: StringNullableFilter<"Notification"> | string | null
    category?: StringNullableFilter<"Notification"> | string | null
    expiresAt?: DateTimeNullableFilter<"Notification"> | Date | string | null
    actionUrl?: StringNullableFilter<"Notification"> | string | null
    actionLabel?: StringNullableFilter<"Notification"> | string | null
    isArchived?: BoolFilter<"Notification"> | boolean
    creatorId?: StringFilter<"Notification"> | string
    recipientId?: StringFilter<"Notification"> | string
  }

  export type NotificationUpsertWithWhereUniqueWithoutRecipientInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutRecipientInput, NotificationUncheckedUpdateWithoutRecipientInput>
    create: XOR<NotificationCreateWithoutRecipientInput, NotificationUncheckedCreateWithoutRecipientInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutRecipientInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutRecipientInput, NotificationUncheckedUpdateWithoutRecipientInput>
  }

  export type NotificationUpdateManyWithWhereWithoutRecipientInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutRecipientInput>
  }

  export type FamilyHistoryUpsertWithWhereUniqueWithoutUserInput = {
    where: FamilyHistoryWhereUniqueInput
    update: XOR<FamilyHistoryUpdateWithoutUserInput, FamilyHistoryUncheckedUpdateWithoutUserInput>
    create: XOR<FamilyHistoryCreateWithoutUserInput, FamilyHistoryUncheckedCreateWithoutUserInput>
  }

  export type FamilyHistoryUpdateWithWhereUniqueWithoutUserInput = {
    where: FamilyHistoryWhereUniqueInput
    data: XOR<FamilyHistoryUpdateWithoutUserInput, FamilyHistoryUncheckedUpdateWithoutUserInput>
  }

  export type FamilyHistoryUpdateManyWithWhereWithoutUserInput = {
    where: FamilyHistoryScalarWhereInput
    data: XOR<FamilyHistoryUpdateManyMutationInput, FamilyHistoryUncheckedUpdateManyWithoutUserInput>
  }

  export type FamilyHistoryScalarWhereInput = {
    AND?: FamilyHistoryScalarWhereInput | FamilyHistoryScalarWhereInput[]
    OR?: FamilyHistoryScalarWhereInput[]
    NOT?: FamilyHistoryScalarWhereInput | FamilyHistoryScalarWhereInput[]
    id?: StringFilter<"FamilyHistory"> | string
    familyId?: StringFilter<"FamilyHistory"> | string
    action?: StringFilter<"FamilyHistory"> | string
    description?: StringFilter<"FamilyHistory"> | string
    timestamp?: DateTimeFilter<"FamilyHistory"> | Date | string
    userId?: StringFilter<"FamilyHistory"> | string
    changedFields?: StringNullableListFilter<"FamilyHistory">
    previousValues?: JsonNullableFilter<"FamilyHistory">
    newValues?: JsonNullableFilter<"FamilyHistory">
    ipAddress?: StringNullableFilter<"FamilyHistory"> | string | null
    userAgent?: StringNullableFilter<"FamilyHistory"> | string | null
  }

  export type UserCreateWithoutCreatedFamiliesInput = {
    id?: string
    iin: string
    password: string
    fullName: string
    phone?: string | null
    role: string
    region?: string | null
    district?: string | null
    city?: string | null
    position?: string | null
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    updatedFamilies?: FamilyCreateNestedManyWithoutUpdatedByInput
    createdSupportMeasures?: SupportMeasureCreateNestedManyWithoutCreatedByInput
    documents?: DocumentCreateNestedManyWithoutUploadedByInput
    notifications?: NotificationCreateNestedManyWithoutCreatorInput
    notificationsReceived?: NotificationCreateNestedManyWithoutRecipientInput
    FamilyHistory?: FamilyHistoryCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCreatedFamiliesInput = {
    id?: string
    iin: string
    password: string
    fullName: string
    phone?: string | null
    role: string
    region?: string | null
    district?: string | null
    city?: string | null
    position?: string | null
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    updatedFamilies?: FamilyUncheckedCreateNestedManyWithoutUpdatedByInput
    createdSupportMeasures?: SupportMeasureUncheckedCreateNestedManyWithoutCreatedByInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUploadedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutCreatorInput
    notificationsReceived?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    FamilyHistory?: FamilyHistoryUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCreatedFamiliesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedFamiliesInput, UserUncheckedCreateWithoutCreatedFamiliesInput>
  }

  export type UserCreateWithoutUpdatedFamiliesInput = {
    id?: string
    iin: string
    password: string
    fullName: string
    phone?: string | null
    role: string
    region?: string | null
    district?: string | null
    city?: string | null
    position?: string | null
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdFamilies?: FamilyCreateNestedManyWithoutCreatedByInput
    createdSupportMeasures?: SupportMeasureCreateNestedManyWithoutCreatedByInput
    documents?: DocumentCreateNestedManyWithoutUploadedByInput
    notifications?: NotificationCreateNestedManyWithoutCreatorInput
    notificationsReceived?: NotificationCreateNestedManyWithoutRecipientInput
    FamilyHistory?: FamilyHistoryCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutUpdatedFamiliesInput = {
    id?: string
    iin: string
    password: string
    fullName: string
    phone?: string | null
    role: string
    region?: string | null
    district?: string | null
    city?: string | null
    position?: string | null
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdFamilies?: FamilyUncheckedCreateNestedManyWithoutCreatedByInput
    createdSupportMeasures?: SupportMeasureUncheckedCreateNestedManyWithoutCreatedByInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUploadedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutCreatorInput
    notificationsReceived?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    FamilyHistory?: FamilyHistoryUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutUpdatedFamiliesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedFamiliesInput, UserUncheckedCreateWithoutUpdatedFamiliesInput>
  }

  export type FamilyMemberCreateWithoutFamilyInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    relationship: string
    documentType?: string | null
    documentNumber?: string | null
    documentIssueDate?: Date | string | null
    documentExpiryDate?: Date | string | null
    registrationAddress?: string | null
    education?: string | null
    grade?: string | null
    institution?: string | null
    course?: string | null
    funding?: string | null
    meals?: string | null
    notes?: string | null
    status?: string | null
    isActive?: boolean
    citizenship?: string | null
    ethnicity?: string | null
    maritalStatus?: string | null
    phoneNumber?: string | null
    email?: string | null
    employment?: string | null
    healthStatus?: string | null
    disabilities?: string | null
    specialNeeds?: boolean
    isHeadOfHousehold?: boolean
    primaryCaregiver?: boolean
    incomeAmount?: number | null
    incomeSource?: string | null
    medicalInsurance?: string | null
    chronicConditions?: FamilyMemberCreatechronicConditionsInput | string[]
    allergies?: FamilyMemberCreateallergiesInput | string[]
    medications?: FamilyMemberCreatemedicationsInput | string[]
    supportMeasures?: SupportMeasureCreateNestedManyWithoutMemberInput
    documents?: DocumentCreateNestedManyWithoutMemberInput
  }

  export type FamilyMemberUncheckedCreateWithoutFamilyInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    relationship: string
    documentType?: string | null
    documentNumber?: string | null
    documentIssueDate?: Date | string | null
    documentExpiryDate?: Date | string | null
    registrationAddress?: string | null
    education?: string | null
    grade?: string | null
    institution?: string | null
    course?: string | null
    funding?: string | null
    meals?: string | null
    notes?: string | null
    status?: string | null
    isActive?: boolean
    citizenship?: string | null
    ethnicity?: string | null
    maritalStatus?: string | null
    phoneNumber?: string | null
    email?: string | null
    employment?: string | null
    healthStatus?: string | null
    disabilities?: string | null
    specialNeeds?: boolean
    isHeadOfHousehold?: boolean
    primaryCaregiver?: boolean
    incomeAmount?: number | null
    incomeSource?: string | null
    medicalInsurance?: string | null
    chronicConditions?: FamilyMemberCreatechronicConditionsInput | string[]
    allergies?: FamilyMemberCreateallergiesInput | string[]
    medications?: FamilyMemberCreatemedicationsInput | string[]
    supportMeasures?: SupportMeasureUncheckedCreateNestedManyWithoutMemberInput
    documents?: DocumentUncheckedCreateNestedManyWithoutMemberInput
  }

  export type FamilyMemberCreateOrConnectWithoutFamilyInput = {
    where: FamilyMemberWhereUniqueInput
    create: XOR<FamilyMemberCreateWithoutFamilyInput, FamilyMemberUncheckedCreateWithoutFamilyInput>
  }

  export type FamilyMemberCreateManyFamilyInputEnvelope = {
    data: FamilyMemberCreateManyFamilyInput | FamilyMemberCreateManyFamilyInput[]
  }

  export type SupportMeasureCreateWithoutFamilyInput = {
    id?: string
    type: string
    description: string
    category?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    status: string
    provider?: string | null
    result?: string | null
    notes?: string | null
    createdAt?: Date | string
    priority?: string | null
    cost?: number | null
    fundingSource?: string | null
    contactPerson?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    frequency?: string | null
    location?: string | null
    followUpDate?: Date | string | null
    evaluationDate?: Date | string | null
    effectiveness?: string | null
    member?: FamilyMemberCreateNestedOneWithoutSupportMeasuresInput
    createdBy: UserCreateNestedOneWithoutCreatedSupportMeasuresInput
    documents?: DocumentCreateNestedManyWithoutSupportMeasureInput
  }

  export type SupportMeasureUncheckedCreateWithoutFamilyInput = {
    id?: string
    memberId?: string | null
    type: string
    description: string
    category?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    status: string
    provider?: string | null
    result?: string | null
    notes?: string | null
    createdAt?: Date | string
    priority?: string | null
    cost?: number | null
    fundingSource?: string | null
    contactPerson?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    frequency?: string | null
    location?: string | null
    followUpDate?: Date | string | null
    evaluationDate?: Date | string | null
    effectiveness?: string | null
    createdById: string
    documents?: DocumentUncheckedCreateNestedManyWithoutSupportMeasureInput
  }

  export type SupportMeasureCreateOrConnectWithoutFamilyInput = {
    where: SupportMeasureWhereUniqueInput
    create: XOR<SupportMeasureCreateWithoutFamilyInput, SupportMeasureUncheckedCreateWithoutFamilyInput>
  }

  export type SupportMeasureCreateManyFamilyInputEnvelope = {
    data: SupportMeasureCreateManyFamilyInput | SupportMeasureCreateManyFamilyInput[]
  }

  export type DocumentCreateWithoutFamilyInput = {
    id?: string
    title: string
    type: string
    fileUrl: string
    mimeType: string
    fileSize: number
    uploadDate?: Date | string
    notes?: string | null
    category?: string | null
    expirationDate?: Date | string | null
    isConfidential?: boolean
    tags?: DocumentCreatetagsInput | string[]
    status?: string | null
    member?: FamilyMemberCreateNestedOneWithoutDocumentsInput
    supportMeasure?: SupportMeasureCreateNestedOneWithoutDocumentsInput
    uploadedBy: UserCreateNestedOneWithoutDocumentsInput
  }

  export type DocumentUncheckedCreateWithoutFamilyInput = {
    id?: string
    title: string
    type: string
    fileUrl: string
    mimeType: string
    fileSize: number
    memberId?: string | null
    supportId?: string | null
    uploadDate?: Date | string
    notes?: string | null
    category?: string | null
    expirationDate?: Date | string | null
    isConfidential?: boolean
    tags?: DocumentCreatetagsInput | string[]
    status?: string | null
    uploadedById: string
  }

  export type DocumentCreateOrConnectWithoutFamilyInput = {
    where: DocumentWhereUniqueInput
    create: XOR<DocumentCreateWithoutFamilyInput, DocumentUncheckedCreateWithoutFamilyInput>
  }

  export type DocumentCreateManyFamilyInputEnvelope = {
    data: DocumentCreateManyFamilyInput | DocumentCreateManyFamilyInput[]
  }

  export type FamilyHistoryCreateWithoutFamilyInput = {
    id?: string
    action: string
    description: string
    timestamp?: Date | string
    changedFields?: FamilyHistoryCreatechangedFieldsInput | string[]
    previousValues?: InputJsonValue | null
    newValues?: InputJsonValue | null
    ipAddress?: string | null
    userAgent?: string | null
    user: UserCreateNestedOneWithoutFamilyHistoryInput
  }

  export type FamilyHistoryUncheckedCreateWithoutFamilyInput = {
    id?: string
    action: string
    description: string
    timestamp?: Date | string
    userId: string
    changedFields?: FamilyHistoryCreatechangedFieldsInput | string[]
    previousValues?: InputJsonValue | null
    newValues?: InputJsonValue | null
    ipAddress?: string | null
    userAgent?: string | null
  }

  export type FamilyHistoryCreateOrConnectWithoutFamilyInput = {
    where: FamilyHistoryWhereUniqueInput
    create: XOR<FamilyHistoryCreateWithoutFamilyInput, FamilyHistoryUncheckedCreateWithoutFamilyInput>
  }

  export type FamilyHistoryCreateManyFamilyInputEnvelope = {
    data: FamilyHistoryCreateManyFamilyInput | FamilyHistoryCreateManyFamilyInput[]
  }

  export type UserUpsertWithoutCreatedFamiliesInput = {
    update: XOR<UserUpdateWithoutCreatedFamiliesInput, UserUncheckedUpdateWithoutCreatedFamiliesInput>
    create: XOR<UserCreateWithoutCreatedFamiliesInput, UserUncheckedCreateWithoutCreatedFamiliesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedFamiliesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedFamiliesInput, UserUncheckedUpdateWithoutCreatedFamiliesInput>
  }

  export type UserUpdateWithoutCreatedFamiliesInput = {
    iin?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedFamilies?: FamilyUpdateManyWithoutUpdatedByNestedInput
    createdSupportMeasures?: SupportMeasureUpdateManyWithoutCreatedByNestedInput
    documents?: DocumentUpdateManyWithoutUploadedByNestedInput
    notifications?: NotificationUpdateManyWithoutCreatorNestedInput
    notificationsReceived?: NotificationUpdateManyWithoutRecipientNestedInput
    FamilyHistory?: FamilyHistoryUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedFamiliesInput = {
    iin?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedFamilies?: FamilyUncheckedUpdateManyWithoutUpdatedByNestedInput
    createdSupportMeasures?: SupportMeasureUncheckedUpdateManyWithoutCreatedByNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUploadedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutCreatorNestedInput
    notificationsReceived?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    FamilyHistory?: FamilyHistoryUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUpsertWithoutUpdatedFamiliesInput = {
    update: XOR<UserUpdateWithoutUpdatedFamiliesInput, UserUncheckedUpdateWithoutUpdatedFamiliesInput>
    create: XOR<UserCreateWithoutUpdatedFamiliesInput, UserUncheckedCreateWithoutUpdatedFamiliesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdatedFamiliesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdatedFamiliesInput, UserUncheckedUpdateWithoutUpdatedFamiliesInput>
  }

  export type UserUpdateWithoutUpdatedFamiliesInput = {
    iin?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdFamilies?: FamilyUpdateManyWithoutCreatedByNestedInput
    createdSupportMeasures?: SupportMeasureUpdateManyWithoutCreatedByNestedInput
    documents?: DocumentUpdateManyWithoutUploadedByNestedInput
    notifications?: NotificationUpdateManyWithoutCreatorNestedInput
    notificationsReceived?: NotificationUpdateManyWithoutRecipientNestedInput
    FamilyHistory?: FamilyHistoryUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedFamiliesInput = {
    iin?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdFamilies?: FamilyUncheckedUpdateManyWithoutCreatedByNestedInput
    createdSupportMeasures?: SupportMeasureUncheckedUpdateManyWithoutCreatedByNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUploadedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutCreatorNestedInput
    notificationsReceived?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    FamilyHistory?: FamilyHistoryUncheckedUpdateManyWithoutUserNestedInput
  }

  export type FamilyMemberUpsertWithWhereUniqueWithoutFamilyInput = {
    where: FamilyMemberWhereUniqueInput
    update: XOR<FamilyMemberUpdateWithoutFamilyInput, FamilyMemberUncheckedUpdateWithoutFamilyInput>
    create: XOR<FamilyMemberCreateWithoutFamilyInput, FamilyMemberUncheckedCreateWithoutFamilyInput>
  }

  export type FamilyMemberUpdateWithWhereUniqueWithoutFamilyInput = {
    where: FamilyMemberWhereUniqueInput
    data: XOR<FamilyMemberUpdateWithoutFamilyInput, FamilyMemberUncheckedUpdateWithoutFamilyInput>
  }

  export type FamilyMemberUpdateManyWithWhereWithoutFamilyInput = {
    where: FamilyMemberScalarWhereInput
    data: XOR<FamilyMemberUpdateManyMutationInput, FamilyMemberUncheckedUpdateManyWithoutFamilyInput>
  }

  export type FamilyMemberScalarWhereInput = {
    AND?: FamilyMemberScalarWhereInput | FamilyMemberScalarWhereInput[]
    OR?: FamilyMemberScalarWhereInput[]
    NOT?: FamilyMemberScalarWhereInput | FamilyMemberScalarWhereInput[]
    id?: StringFilter<"FamilyMember"> | string
    familyId?: StringFilter<"FamilyMember"> | string
    firstName?: StringFilter<"FamilyMember"> | string
    lastName?: StringFilter<"FamilyMember"> | string
    middleName?: StringNullableFilter<"FamilyMember"> | string | null
    birthDate?: DateTimeNullableFilter<"FamilyMember"> | Date | string | null
    gender?: StringNullableFilter<"FamilyMember"> | string | null
    relationship?: StringFilter<"FamilyMember"> | string
    documentType?: StringNullableFilter<"FamilyMember"> | string | null
    documentNumber?: StringNullableFilter<"FamilyMember"> | string | null
    documentIssueDate?: DateTimeNullableFilter<"FamilyMember"> | Date | string | null
    documentExpiryDate?: DateTimeNullableFilter<"FamilyMember"> | Date | string | null
    registrationAddress?: StringNullableFilter<"FamilyMember"> | string | null
    education?: StringNullableFilter<"FamilyMember"> | string | null
    grade?: StringNullableFilter<"FamilyMember"> | string | null
    institution?: StringNullableFilter<"FamilyMember"> | string | null
    course?: StringNullableFilter<"FamilyMember"> | string | null
    funding?: StringNullableFilter<"FamilyMember"> | string | null
    meals?: StringNullableFilter<"FamilyMember"> | string | null
    notes?: StringNullableFilter<"FamilyMember"> | string | null
    status?: StringNullableFilter<"FamilyMember"> | string | null
    isActive?: BoolFilter<"FamilyMember"> | boolean
    citizenship?: StringNullableFilter<"FamilyMember"> | string | null
    ethnicity?: StringNullableFilter<"FamilyMember"> | string | null
    maritalStatus?: StringNullableFilter<"FamilyMember"> | string | null
    phoneNumber?: StringNullableFilter<"FamilyMember"> | string | null
    email?: StringNullableFilter<"FamilyMember"> | string | null
    employment?: StringNullableFilter<"FamilyMember"> | string | null
    healthStatus?: StringNullableFilter<"FamilyMember"> | string | null
    disabilities?: StringNullableFilter<"FamilyMember"> | string | null
    specialNeeds?: BoolFilter<"FamilyMember"> | boolean
    isHeadOfHousehold?: BoolFilter<"FamilyMember"> | boolean
    primaryCaregiver?: BoolFilter<"FamilyMember"> | boolean
    incomeAmount?: FloatNullableFilter<"FamilyMember"> | number | null
    incomeSource?: StringNullableFilter<"FamilyMember"> | string | null
    medicalInsurance?: StringNullableFilter<"FamilyMember"> | string | null
    chronicConditions?: StringNullableListFilter<"FamilyMember">
    allergies?: StringNullableListFilter<"FamilyMember">
    medications?: StringNullableListFilter<"FamilyMember">
  }

  export type SupportMeasureUpsertWithWhereUniqueWithoutFamilyInput = {
    where: SupportMeasureWhereUniqueInput
    update: XOR<SupportMeasureUpdateWithoutFamilyInput, SupportMeasureUncheckedUpdateWithoutFamilyInput>
    create: XOR<SupportMeasureCreateWithoutFamilyInput, SupportMeasureUncheckedCreateWithoutFamilyInput>
  }

  export type SupportMeasureUpdateWithWhereUniqueWithoutFamilyInput = {
    where: SupportMeasureWhereUniqueInput
    data: XOR<SupportMeasureUpdateWithoutFamilyInput, SupportMeasureUncheckedUpdateWithoutFamilyInput>
  }

  export type SupportMeasureUpdateManyWithWhereWithoutFamilyInput = {
    where: SupportMeasureScalarWhereInput
    data: XOR<SupportMeasureUpdateManyMutationInput, SupportMeasureUncheckedUpdateManyWithoutFamilyInput>
  }

  export type DocumentUpsertWithWhereUniqueWithoutFamilyInput = {
    where: DocumentWhereUniqueInput
    update: XOR<DocumentUpdateWithoutFamilyInput, DocumentUncheckedUpdateWithoutFamilyInput>
    create: XOR<DocumentCreateWithoutFamilyInput, DocumentUncheckedCreateWithoutFamilyInput>
  }

  export type DocumentUpdateWithWhereUniqueWithoutFamilyInput = {
    where: DocumentWhereUniqueInput
    data: XOR<DocumentUpdateWithoutFamilyInput, DocumentUncheckedUpdateWithoutFamilyInput>
  }

  export type DocumentUpdateManyWithWhereWithoutFamilyInput = {
    where: DocumentScalarWhereInput
    data: XOR<DocumentUpdateManyMutationInput, DocumentUncheckedUpdateManyWithoutFamilyInput>
  }

  export type FamilyHistoryUpsertWithWhereUniqueWithoutFamilyInput = {
    where: FamilyHistoryWhereUniqueInput
    update: XOR<FamilyHistoryUpdateWithoutFamilyInput, FamilyHistoryUncheckedUpdateWithoutFamilyInput>
    create: XOR<FamilyHistoryCreateWithoutFamilyInput, FamilyHistoryUncheckedCreateWithoutFamilyInput>
  }

  export type FamilyHistoryUpdateWithWhereUniqueWithoutFamilyInput = {
    where: FamilyHistoryWhereUniqueInput
    data: XOR<FamilyHistoryUpdateWithoutFamilyInput, FamilyHistoryUncheckedUpdateWithoutFamilyInput>
  }

  export type FamilyHistoryUpdateManyWithWhereWithoutFamilyInput = {
    where: FamilyHistoryScalarWhereInput
    data: XOR<FamilyHistoryUpdateManyMutationInput, FamilyHistoryUncheckedUpdateManyWithoutFamilyInput>
  }

  export type FamilyCreateWithoutMembersInput = {
    id?: string
    caseNumber: string
    familyName: string
    address: string
    region: string
    registrationAddress?: string | null
    district: string
    city?: string | null
    status: string
    riskLevel: string
    riskFactors?: FamilyCreateriskFactorsInput | string[]
    registrationDate: Date | string
    lastUpdate?: Date | string
    isActive?: boolean
    inactiveReason?: string | null
    notes?: string | null
    children?: number | null
    settingReason?: string | null
    inspectionStatus?: string | null
    familyType?: string | null
    housingType?: string | null
    employment?: string | null
    workplace?: string | null
    tzhsReason?: string | null
    nbReason?: string | null
    familyIncome?: string | null
    needsSupport?: boolean
    needsEducation?: boolean
    needsHealth?: boolean
    needsPolice?: boolean
    hasDisability?: boolean
    contactPhone?: string | null
    contactEmail?: string | null
    incomeSource?: string | null
    monthlyIncome?: number | null
    socialBenefits?: FamilyCreatesocialBenefitsInput | string[]
    referralSource?: string | null
    primaryLanguage?: string | null
    hasInterpreterNeeded?: boolean
    createdBy: UserCreateNestedOneWithoutCreatedFamiliesInput
    updatedBy: UserCreateNestedOneWithoutUpdatedFamiliesInput
    supportMeasures?: SupportMeasureCreateNestedManyWithoutFamilyInput
    documents?: DocumentCreateNestedManyWithoutFamilyInput
    history?: FamilyHistoryCreateNestedManyWithoutFamilyInput
  }

  export type FamilyUncheckedCreateWithoutMembersInput = {
    id?: string
    caseNumber: string
    familyName: string
    address: string
    region: string
    registrationAddress?: string | null
    district: string
    city?: string | null
    status: string
    riskLevel: string
    riskFactors?: FamilyCreateriskFactorsInput | string[]
    registrationDate: Date | string
    lastUpdate?: Date | string
    isActive?: boolean
    inactiveReason?: string | null
    notes?: string | null
    children?: number | null
    settingReason?: string | null
    inspectionStatus?: string | null
    familyType?: string | null
    housingType?: string | null
    employment?: string | null
    workplace?: string | null
    tzhsReason?: string | null
    nbReason?: string | null
    familyIncome?: string | null
    needsSupport?: boolean
    needsEducation?: boolean
    needsHealth?: boolean
    needsPolice?: boolean
    hasDisability?: boolean
    contactPhone?: string | null
    contactEmail?: string | null
    incomeSource?: string | null
    monthlyIncome?: number | null
    socialBenefits?: FamilyCreatesocialBenefitsInput | string[]
    referralSource?: string | null
    primaryLanguage?: string | null
    hasInterpreterNeeded?: boolean
    createdById: string
    updatedById: string
    supportMeasures?: SupportMeasureUncheckedCreateNestedManyWithoutFamilyInput
    documents?: DocumentUncheckedCreateNestedManyWithoutFamilyInput
    history?: FamilyHistoryUncheckedCreateNestedManyWithoutFamilyInput
  }

  export type FamilyCreateOrConnectWithoutMembersInput = {
    where: FamilyWhereUniqueInput
    create: XOR<FamilyCreateWithoutMembersInput, FamilyUncheckedCreateWithoutMembersInput>
  }

  export type SupportMeasureCreateWithoutMemberInput = {
    id?: string
    type: string
    description: string
    category?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    status: string
    provider?: string | null
    result?: string | null
    notes?: string | null
    createdAt?: Date | string
    priority?: string | null
    cost?: number | null
    fundingSource?: string | null
    contactPerson?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    frequency?: string | null
    location?: string | null
    followUpDate?: Date | string | null
    evaluationDate?: Date | string | null
    effectiveness?: string | null
    family: FamilyCreateNestedOneWithoutSupportMeasuresInput
    createdBy: UserCreateNestedOneWithoutCreatedSupportMeasuresInput
    documents?: DocumentCreateNestedManyWithoutSupportMeasureInput
  }

  export type SupportMeasureUncheckedCreateWithoutMemberInput = {
    id?: string
    familyId: string
    type: string
    description: string
    category?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    status: string
    provider?: string | null
    result?: string | null
    notes?: string | null
    createdAt?: Date | string
    priority?: string | null
    cost?: number | null
    fundingSource?: string | null
    contactPerson?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    frequency?: string | null
    location?: string | null
    followUpDate?: Date | string | null
    evaluationDate?: Date | string | null
    effectiveness?: string | null
    createdById: string
    documents?: DocumentUncheckedCreateNestedManyWithoutSupportMeasureInput
  }

  export type SupportMeasureCreateOrConnectWithoutMemberInput = {
    where: SupportMeasureWhereUniqueInput
    create: XOR<SupportMeasureCreateWithoutMemberInput, SupportMeasureUncheckedCreateWithoutMemberInput>
  }

  export type SupportMeasureCreateManyMemberInputEnvelope = {
    data: SupportMeasureCreateManyMemberInput | SupportMeasureCreateManyMemberInput[]
  }

  export type DocumentCreateWithoutMemberInput = {
    id?: string
    title: string
    type: string
    fileUrl: string
    mimeType: string
    fileSize: number
    uploadDate?: Date | string
    notes?: string | null
    category?: string | null
    expirationDate?: Date | string | null
    isConfidential?: boolean
    tags?: DocumentCreatetagsInput | string[]
    status?: string | null
    family?: FamilyCreateNestedOneWithoutDocumentsInput
    supportMeasure?: SupportMeasureCreateNestedOneWithoutDocumentsInput
    uploadedBy: UserCreateNestedOneWithoutDocumentsInput
  }

  export type DocumentUncheckedCreateWithoutMemberInput = {
    id?: string
    title: string
    type: string
    fileUrl: string
    mimeType: string
    fileSize: number
    familyId?: string | null
    supportId?: string | null
    uploadDate?: Date | string
    notes?: string | null
    category?: string | null
    expirationDate?: Date | string | null
    isConfidential?: boolean
    tags?: DocumentCreatetagsInput | string[]
    status?: string | null
    uploadedById: string
  }

  export type DocumentCreateOrConnectWithoutMemberInput = {
    where: DocumentWhereUniqueInput
    create: XOR<DocumentCreateWithoutMemberInput, DocumentUncheckedCreateWithoutMemberInput>
  }

  export type DocumentCreateManyMemberInputEnvelope = {
    data: DocumentCreateManyMemberInput | DocumentCreateManyMemberInput[]
  }

  export type FamilyUpsertWithoutMembersInput = {
    update: XOR<FamilyUpdateWithoutMembersInput, FamilyUncheckedUpdateWithoutMembersInput>
    create: XOR<FamilyCreateWithoutMembersInput, FamilyUncheckedCreateWithoutMembersInput>
    where?: FamilyWhereInput
  }

  export type FamilyUpdateToOneWithWhereWithoutMembersInput = {
    where?: FamilyWhereInput
    data: XOR<FamilyUpdateWithoutMembersInput, FamilyUncheckedUpdateWithoutMembersInput>
  }

  export type FamilyUpdateWithoutMembersInput = {
    caseNumber?: StringFieldUpdateOperationsInput | string
    familyName?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    district?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    riskLevel?: StringFieldUpdateOperationsInput | string
    riskFactors?: FamilyUpdateriskFactorsInput | string[]
    registrationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    inactiveReason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    children?: NullableIntFieldUpdateOperationsInput | number | null
    settingReason?: NullableStringFieldUpdateOperationsInput | string | null
    inspectionStatus?: NullableStringFieldUpdateOperationsInput | string | null
    familyType?: NullableStringFieldUpdateOperationsInput | string | null
    housingType?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    workplace?: NullableStringFieldUpdateOperationsInput | string | null
    tzhsReason?: NullableStringFieldUpdateOperationsInput | string | null
    nbReason?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableStringFieldUpdateOperationsInput | string | null
    needsSupport?: BoolFieldUpdateOperationsInput | boolean
    needsEducation?: BoolFieldUpdateOperationsInput | boolean
    needsHealth?: BoolFieldUpdateOperationsInput | boolean
    needsPolice?: BoolFieldUpdateOperationsInput | boolean
    hasDisability?: BoolFieldUpdateOperationsInput | boolean
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    socialBenefits?: FamilyUpdatesocialBenefitsInput | string[]
    referralSource?: NullableStringFieldUpdateOperationsInput | string | null
    primaryLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    hasInterpreterNeeded?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: UserUpdateOneRequiredWithoutCreatedFamiliesNestedInput
    updatedBy?: UserUpdateOneRequiredWithoutUpdatedFamiliesNestedInput
    supportMeasures?: SupportMeasureUpdateManyWithoutFamilyNestedInput
    documents?: DocumentUpdateManyWithoutFamilyNestedInput
    history?: FamilyHistoryUpdateManyWithoutFamilyNestedInput
  }

  export type FamilyUncheckedUpdateWithoutMembersInput = {
    caseNumber?: StringFieldUpdateOperationsInput | string
    familyName?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    district?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    riskLevel?: StringFieldUpdateOperationsInput | string
    riskFactors?: FamilyUpdateriskFactorsInput | string[]
    registrationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    inactiveReason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    children?: NullableIntFieldUpdateOperationsInput | number | null
    settingReason?: NullableStringFieldUpdateOperationsInput | string | null
    inspectionStatus?: NullableStringFieldUpdateOperationsInput | string | null
    familyType?: NullableStringFieldUpdateOperationsInput | string | null
    housingType?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    workplace?: NullableStringFieldUpdateOperationsInput | string | null
    tzhsReason?: NullableStringFieldUpdateOperationsInput | string | null
    nbReason?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableStringFieldUpdateOperationsInput | string | null
    needsSupport?: BoolFieldUpdateOperationsInput | boolean
    needsEducation?: BoolFieldUpdateOperationsInput | boolean
    needsHealth?: BoolFieldUpdateOperationsInput | boolean
    needsPolice?: BoolFieldUpdateOperationsInput | boolean
    hasDisability?: BoolFieldUpdateOperationsInput | boolean
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    socialBenefits?: FamilyUpdatesocialBenefitsInput | string[]
    referralSource?: NullableStringFieldUpdateOperationsInput | string | null
    primaryLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    hasInterpreterNeeded?: BoolFieldUpdateOperationsInput | boolean
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    supportMeasures?: SupportMeasureUncheckedUpdateManyWithoutFamilyNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutFamilyNestedInput
    history?: FamilyHistoryUncheckedUpdateManyWithoutFamilyNestedInput
  }

  export type SupportMeasureUpsertWithWhereUniqueWithoutMemberInput = {
    where: SupportMeasureWhereUniqueInput
    update: XOR<SupportMeasureUpdateWithoutMemberInput, SupportMeasureUncheckedUpdateWithoutMemberInput>
    create: XOR<SupportMeasureCreateWithoutMemberInput, SupportMeasureUncheckedCreateWithoutMemberInput>
  }

  export type SupportMeasureUpdateWithWhereUniqueWithoutMemberInput = {
    where: SupportMeasureWhereUniqueInput
    data: XOR<SupportMeasureUpdateWithoutMemberInput, SupportMeasureUncheckedUpdateWithoutMemberInput>
  }

  export type SupportMeasureUpdateManyWithWhereWithoutMemberInput = {
    where: SupportMeasureScalarWhereInput
    data: XOR<SupportMeasureUpdateManyMutationInput, SupportMeasureUncheckedUpdateManyWithoutMemberInput>
  }

  export type DocumentUpsertWithWhereUniqueWithoutMemberInput = {
    where: DocumentWhereUniqueInput
    update: XOR<DocumentUpdateWithoutMemberInput, DocumentUncheckedUpdateWithoutMemberInput>
    create: XOR<DocumentCreateWithoutMemberInput, DocumentUncheckedCreateWithoutMemberInput>
  }

  export type DocumentUpdateWithWhereUniqueWithoutMemberInput = {
    where: DocumentWhereUniqueInput
    data: XOR<DocumentUpdateWithoutMemberInput, DocumentUncheckedUpdateWithoutMemberInput>
  }

  export type DocumentUpdateManyWithWhereWithoutMemberInput = {
    where: DocumentScalarWhereInput
    data: XOR<DocumentUpdateManyMutationInput, DocumentUncheckedUpdateManyWithoutMemberInput>
  }

  export type FamilyCreateWithoutSupportMeasuresInput = {
    id?: string
    caseNumber: string
    familyName: string
    address: string
    region: string
    registrationAddress?: string | null
    district: string
    city?: string | null
    status: string
    riskLevel: string
    riskFactors?: FamilyCreateriskFactorsInput | string[]
    registrationDate: Date | string
    lastUpdate?: Date | string
    isActive?: boolean
    inactiveReason?: string | null
    notes?: string | null
    children?: number | null
    settingReason?: string | null
    inspectionStatus?: string | null
    familyType?: string | null
    housingType?: string | null
    employment?: string | null
    workplace?: string | null
    tzhsReason?: string | null
    nbReason?: string | null
    familyIncome?: string | null
    needsSupport?: boolean
    needsEducation?: boolean
    needsHealth?: boolean
    needsPolice?: boolean
    hasDisability?: boolean
    contactPhone?: string | null
    contactEmail?: string | null
    incomeSource?: string | null
    monthlyIncome?: number | null
    socialBenefits?: FamilyCreatesocialBenefitsInput | string[]
    referralSource?: string | null
    primaryLanguage?: string | null
    hasInterpreterNeeded?: boolean
    createdBy: UserCreateNestedOneWithoutCreatedFamiliesInput
    updatedBy: UserCreateNestedOneWithoutUpdatedFamiliesInput
    members?: FamilyMemberCreateNestedManyWithoutFamilyInput
    documents?: DocumentCreateNestedManyWithoutFamilyInput
    history?: FamilyHistoryCreateNestedManyWithoutFamilyInput
  }

  export type FamilyUncheckedCreateWithoutSupportMeasuresInput = {
    id?: string
    caseNumber: string
    familyName: string
    address: string
    region: string
    registrationAddress?: string | null
    district: string
    city?: string | null
    status: string
    riskLevel: string
    riskFactors?: FamilyCreateriskFactorsInput | string[]
    registrationDate: Date | string
    lastUpdate?: Date | string
    isActive?: boolean
    inactiveReason?: string | null
    notes?: string | null
    children?: number | null
    settingReason?: string | null
    inspectionStatus?: string | null
    familyType?: string | null
    housingType?: string | null
    employment?: string | null
    workplace?: string | null
    tzhsReason?: string | null
    nbReason?: string | null
    familyIncome?: string | null
    needsSupport?: boolean
    needsEducation?: boolean
    needsHealth?: boolean
    needsPolice?: boolean
    hasDisability?: boolean
    contactPhone?: string | null
    contactEmail?: string | null
    incomeSource?: string | null
    monthlyIncome?: number | null
    socialBenefits?: FamilyCreatesocialBenefitsInput | string[]
    referralSource?: string | null
    primaryLanguage?: string | null
    hasInterpreterNeeded?: boolean
    createdById: string
    updatedById: string
    members?: FamilyMemberUncheckedCreateNestedManyWithoutFamilyInput
    documents?: DocumentUncheckedCreateNestedManyWithoutFamilyInput
    history?: FamilyHistoryUncheckedCreateNestedManyWithoutFamilyInput
  }

  export type FamilyCreateOrConnectWithoutSupportMeasuresInput = {
    where: FamilyWhereUniqueInput
    create: XOR<FamilyCreateWithoutSupportMeasuresInput, FamilyUncheckedCreateWithoutSupportMeasuresInput>
  }

  export type FamilyMemberCreateWithoutSupportMeasuresInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    relationship: string
    documentType?: string | null
    documentNumber?: string | null
    documentIssueDate?: Date | string | null
    documentExpiryDate?: Date | string | null
    registrationAddress?: string | null
    education?: string | null
    grade?: string | null
    institution?: string | null
    course?: string | null
    funding?: string | null
    meals?: string | null
    notes?: string | null
    status?: string | null
    isActive?: boolean
    citizenship?: string | null
    ethnicity?: string | null
    maritalStatus?: string | null
    phoneNumber?: string | null
    email?: string | null
    employment?: string | null
    healthStatus?: string | null
    disabilities?: string | null
    specialNeeds?: boolean
    isHeadOfHousehold?: boolean
    primaryCaregiver?: boolean
    incomeAmount?: number | null
    incomeSource?: string | null
    medicalInsurance?: string | null
    chronicConditions?: FamilyMemberCreatechronicConditionsInput | string[]
    allergies?: FamilyMemberCreateallergiesInput | string[]
    medications?: FamilyMemberCreatemedicationsInput | string[]
    family: FamilyCreateNestedOneWithoutMembersInput
    documents?: DocumentCreateNestedManyWithoutMemberInput
  }

  export type FamilyMemberUncheckedCreateWithoutSupportMeasuresInput = {
    id?: string
    familyId: string
    firstName: string
    lastName: string
    middleName?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    relationship: string
    documentType?: string | null
    documentNumber?: string | null
    documentIssueDate?: Date | string | null
    documentExpiryDate?: Date | string | null
    registrationAddress?: string | null
    education?: string | null
    grade?: string | null
    institution?: string | null
    course?: string | null
    funding?: string | null
    meals?: string | null
    notes?: string | null
    status?: string | null
    isActive?: boolean
    citizenship?: string | null
    ethnicity?: string | null
    maritalStatus?: string | null
    phoneNumber?: string | null
    email?: string | null
    employment?: string | null
    healthStatus?: string | null
    disabilities?: string | null
    specialNeeds?: boolean
    isHeadOfHousehold?: boolean
    primaryCaregiver?: boolean
    incomeAmount?: number | null
    incomeSource?: string | null
    medicalInsurance?: string | null
    chronicConditions?: FamilyMemberCreatechronicConditionsInput | string[]
    allergies?: FamilyMemberCreateallergiesInput | string[]
    medications?: FamilyMemberCreatemedicationsInput | string[]
    documents?: DocumentUncheckedCreateNestedManyWithoutMemberInput
  }

  export type FamilyMemberCreateOrConnectWithoutSupportMeasuresInput = {
    where: FamilyMemberWhereUniqueInput
    create: XOR<FamilyMemberCreateWithoutSupportMeasuresInput, FamilyMemberUncheckedCreateWithoutSupportMeasuresInput>
  }

  export type UserCreateWithoutCreatedSupportMeasuresInput = {
    id?: string
    iin: string
    password: string
    fullName: string
    phone?: string | null
    role: string
    region?: string | null
    district?: string | null
    city?: string | null
    position?: string | null
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdFamilies?: FamilyCreateNestedManyWithoutCreatedByInput
    updatedFamilies?: FamilyCreateNestedManyWithoutUpdatedByInput
    documents?: DocumentCreateNestedManyWithoutUploadedByInput
    notifications?: NotificationCreateNestedManyWithoutCreatorInput
    notificationsReceived?: NotificationCreateNestedManyWithoutRecipientInput
    FamilyHistory?: FamilyHistoryCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCreatedSupportMeasuresInput = {
    id?: string
    iin: string
    password: string
    fullName: string
    phone?: string | null
    role: string
    region?: string | null
    district?: string | null
    city?: string | null
    position?: string | null
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdFamilies?: FamilyUncheckedCreateNestedManyWithoutCreatedByInput
    updatedFamilies?: FamilyUncheckedCreateNestedManyWithoutUpdatedByInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUploadedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutCreatorInput
    notificationsReceived?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    FamilyHistory?: FamilyHistoryUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCreatedSupportMeasuresInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedSupportMeasuresInput, UserUncheckedCreateWithoutCreatedSupportMeasuresInput>
  }

  export type DocumentCreateWithoutSupportMeasureInput = {
    id?: string
    title: string
    type: string
    fileUrl: string
    mimeType: string
    fileSize: number
    uploadDate?: Date | string
    notes?: string | null
    category?: string | null
    expirationDate?: Date | string | null
    isConfidential?: boolean
    tags?: DocumentCreatetagsInput | string[]
    status?: string | null
    family?: FamilyCreateNestedOneWithoutDocumentsInput
    member?: FamilyMemberCreateNestedOneWithoutDocumentsInput
    uploadedBy: UserCreateNestedOneWithoutDocumentsInput
  }

  export type DocumentUncheckedCreateWithoutSupportMeasureInput = {
    id?: string
    title: string
    type: string
    fileUrl: string
    mimeType: string
    fileSize: number
    familyId?: string | null
    memberId?: string | null
    uploadDate?: Date | string
    notes?: string | null
    category?: string | null
    expirationDate?: Date | string | null
    isConfidential?: boolean
    tags?: DocumentCreatetagsInput | string[]
    status?: string | null
    uploadedById: string
  }

  export type DocumentCreateOrConnectWithoutSupportMeasureInput = {
    where: DocumentWhereUniqueInput
    create: XOR<DocumentCreateWithoutSupportMeasureInput, DocumentUncheckedCreateWithoutSupportMeasureInput>
  }

  export type DocumentCreateManySupportMeasureInputEnvelope = {
    data: DocumentCreateManySupportMeasureInput | DocumentCreateManySupportMeasureInput[]
  }

  export type FamilyUpsertWithoutSupportMeasuresInput = {
    update: XOR<FamilyUpdateWithoutSupportMeasuresInput, FamilyUncheckedUpdateWithoutSupportMeasuresInput>
    create: XOR<FamilyCreateWithoutSupportMeasuresInput, FamilyUncheckedCreateWithoutSupportMeasuresInput>
    where?: FamilyWhereInput
  }

  export type FamilyUpdateToOneWithWhereWithoutSupportMeasuresInput = {
    where?: FamilyWhereInput
    data: XOR<FamilyUpdateWithoutSupportMeasuresInput, FamilyUncheckedUpdateWithoutSupportMeasuresInput>
  }

  export type FamilyUpdateWithoutSupportMeasuresInput = {
    caseNumber?: StringFieldUpdateOperationsInput | string
    familyName?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    district?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    riskLevel?: StringFieldUpdateOperationsInput | string
    riskFactors?: FamilyUpdateriskFactorsInput | string[]
    registrationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    inactiveReason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    children?: NullableIntFieldUpdateOperationsInput | number | null
    settingReason?: NullableStringFieldUpdateOperationsInput | string | null
    inspectionStatus?: NullableStringFieldUpdateOperationsInput | string | null
    familyType?: NullableStringFieldUpdateOperationsInput | string | null
    housingType?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    workplace?: NullableStringFieldUpdateOperationsInput | string | null
    tzhsReason?: NullableStringFieldUpdateOperationsInput | string | null
    nbReason?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableStringFieldUpdateOperationsInput | string | null
    needsSupport?: BoolFieldUpdateOperationsInput | boolean
    needsEducation?: BoolFieldUpdateOperationsInput | boolean
    needsHealth?: BoolFieldUpdateOperationsInput | boolean
    needsPolice?: BoolFieldUpdateOperationsInput | boolean
    hasDisability?: BoolFieldUpdateOperationsInput | boolean
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    socialBenefits?: FamilyUpdatesocialBenefitsInput | string[]
    referralSource?: NullableStringFieldUpdateOperationsInput | string | null
    primaryLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    hasInterpreterNeeded?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: UserUpdateOneRequiredWithoutCreatedFamiliesNestedInput
    updatedBy?: UserUpdateOneRequiredWithoutUpdatedFamiliesNestedInput
    members?: FamilyMemberUpdateManyWithoutFamilyNestedInput
    documents?: DocumentUpdateManyWithoutFamilyNestedInput
    history?: FamilyHistoryUpdateManyWithoutFamilyNestedInput
  }

  export type FamilyUncheckedUpdateWithoutSupportMeasuresInput = {
    caseNumber?: StringFieldUpdateOperationsInput | string
    familyName?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    district?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    riskLevel?: StringFieldUpdateOperationsInput | string
    riskFactors?: FamilyUpdateriskFactorsInput | string[]
    registrationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    inactiveReason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    children?: NullableIntFieldUpdateOperationsInput | number | null
    settingReason?: NullableStringFieldUpdateOperationsInput | string | null
    inspectionStatus?: NullableStringFieldUpdateOperationsInput | string | null
    familyType?: NullableStringFieldUpdateOperationsInput | string | null
    housingType?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    workplace?: NullableStringFieldUpdateOperationsInput | string | null
    tzhsReason?: NullableStringFieldUpdateOperationsInput | string | null
    nbReason?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableStringFieldUpdateOperationsInput | string | null
    needsSupport?: BoolFieldUpdateOperationsInput | boolean
    needsEducation?: BoolFieldUpdateOperationsInput | boolean
    needsHealth?: BoolFieldUpdateOperationsInput | boolean
    needsPolice?: BoolFieldUpdateOperationsInput | boolean
    hasDisability?: BoolFieldUpdateOperationsInput | boolean
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    socialBenefits?: FamilyUpdatesocialBenefitsInput | string[]
    referralSource?: NullableStringFieldUpdateOperationsInput | string | null
    primaryLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    hasInterpreterNeeded?: BoolFieldUpdateOperationsInput | boolean
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    members?: FamilyMemberUncheckedUpdateManyWithoutFamilyNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutFamilyNestedInput
    history?: FamilyHistoryUncheckedUpdateManyWithoutFamilyNestedInput
  }

  export type FamilyMemberUpsertWithoutSupportMeasuresInput = {
    update: XOR<FamilyMemberUpdateWithoutSupportMeasuresInput, FamilyMemberUncheckedUpdateWithoutSupportMeasuresInput>
    create: XOR<FamilyMemberCreateWithoutSupportMeasuresInput, FamilyMemberUncheckedCreateWithoutSupportMeasuresInput>
    where?: FamilyMemberWhereInput
  }

  export type FamilyMemberUpdateToOneWithWhereWithoutSupportMeasuresInput = {
    where?: FamilyMemberWhereInput
    data: XOR<FamilyMemberUpdateWithoutSupportMeasuresInput, FamilyMemberUncheckedUpdateWithoutSupportMeasuresInput>
  }

  export type FamilyMemberUpdateWithoutSupportMeasuresInput = {
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: StringFieldUpdateOperationsInput | string
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentIssueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    institution?: NullableStringFieldUpdateOperationsInput | string | null
    course?: NullableStringFieldUpdateOperationsInput | string | null
    funding?: NullableStringFieldUpdateOperationsInput | string | null
    meals?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    citizenship?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    disabilities?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: BoolFieldUpdateOperationsInput | boolean
    isHeadOfHousehold?: BoolFieldUpdateOperationsInput | boolean
    primaryCaregiver?: BoolFieldUpdateOperationsInput | boolean
    incomeAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    medicalInsurance?: NullableStringFieldUpdateOperationsInput | string | null
    chronicConditions?: FamilyMemberUpdatechronicConditionsInput | string[]
    allergies?: FamilyMemberUpdateallergiesInput | string[]
    medications?: FamilyMemberUpdatemedicationsInput | string[]
    family?: FamilyUpdateOneRequiredWithoutMembersNestedInput
    documents?: DocumentUpdateManyWithoutMemberNestedInput
  }

  export type FamilyMemberUncheckedUpdateWithoutSupportMeasuresInput = {
    familyId?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: StringFieldUpdateOperationsInput | string
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentIssueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    institution?: NullableStringFieldUpdateOperationsInput | string | null
    course?: NullableStringFieldUpdateOperationsInput | string | null
    funding?: NullableStringFieldUpdateOperationsInput | string | null
    meals?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    citizenship?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    disabilities?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: BoolFieldUpdateOperationsInput | boolean
    isHeadOfHousehold?: BoolFieldUpdateOperationsInput | boolean
    primaryCaregiver?: BoolFieldUpdateOperationsInput | boolean
    incomeAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    medicalInsurance?: NullableStringFieldUpdateOperationsInput | string | null
    chronicConditions?: FamilyMemberUpdatechronicConditionsInput | string[]
    allergies?: FamilyMemberUpdateallergiesInput | string[]
    medications?: FamilyMemberUpdatemedicationsInput | string[]
    documents?: DocumentUncheckedUpdateManyWithoutMemberNestedInput
  }

  export type UserUpsertWithoutCreatedSupportMeasuresInput = {
    update: XOR<UserUpdateWithoutCreatedSupportMeasuresInput, UserUncheckedUpdateWithoutCreatedSupportMeasuresInput>
    create: XOR<UserCreateWithoutCreatedSupportMeasuresInput, UserUncheckedCreateWithoutCreatedSupportMeasuresInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedSupportMeasuresInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedSupportMeasuresInput, UserUncheckedUpdateWithoutCreatedSupportMeasuresInput>
  }

  export type UserUpdateWithoutCreatedSupportMeasuresInput = {
    iin?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdFamilies?: FamilyUpdateManyWithoutCreatedByNestedInput
    updatedFamilies?: FamilyUpdateManyWithoutUpdatedByNestedInput
    documents?: DocumentUpdateManyWithoutUploadedByNestedInput
    notifications?: NotificationUpdateManyWithoutCreatorNestedInput
    notificationsReceived?: NotificationUpdateManyWithoutRecipientNestedInput
    FamilyHistory?: FamilyHistoryUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedSupportMeasuresInput = {
    iin?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdFamilies?: FamilyUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedFamilies?: FamilyUncheckedUpdateManyWithoutUpdatedByNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUploadedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutCreatorNestedInput
    notificationsReceived?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    FamilyHistory?: FamilyHistoryUncheckedUpdateManyWithoutUserNestedInput
  }

  export type DocumentUpsertWithWhereUniqueWithoutSupportMeasureInput = {
    where: DocumentWhereUniqueInput
    update: XOR<DocumentUpdateWithoutSupportMeasureInput, DocumentUncheckedUpdateWithoutSupportMeasureInput>
    create: XOR<DocumentCreateWithoutSupportMeasureInput, DocumentUncheckedCreateWithoutSupportMeasureInput>
  }

  export type DocumentUpdateWithWhereUniqueWithoutSupportMeasureInput = {
    where: DocumentWhereUniqueInput
    data: XOR<DocumentUpdateWithoutSupportMeasureInput, DocumentUncheckedUpdateWithoutSupportMeasureInput>
  }

  export type DocumentUpdateManyWithWhereWithoutSupportMeasureInput = {
    where: DocumentScalarWhereInput
    data: XOR<DocumentUpdateManyMutationInput, DocumentUncheckedUpdateManyWithoutSupportMeasureInput>
  }

  export type FamilyCreateWithoutDocumentsInput = {
    id?: string
    caseNumber: string
    familyName: string
    address: string
    region: string
    registrationAddress?: string | null
    district: string
    city?: string | null
    status: string
    riskLevel: string
    riskFactors?: FamilyCreateriskFactorsInput | string[]
    registrationDate: Date | string
    lastUpdate?: Date | string
    isActive?: boolean
    inactiveReason?: string | null
    notes?: string | null
    children?: number | null
    settingReason?: string | null
    inspectionStatus?: string | null
    familyType?: string | null
    housingType?: string | null
    employment?: string | null
    workplace?: string | null
    tzhsReason?: string | null
    nbReason?: string | null
    familyIncome?: string | null
    needsSupport?: boolean
    needsEducation?: boolean
    needsHealth?: boolean
    needsPolice?: boolean
    hasDisability?: boolean
    contactPhone?: string | null
    contactEmail?: string | null
    incomeSource?: string | null
    monthlyIncome?: number | null
    socialBenefits?: FamilyCreatesocialBenefitsInput | string[]
    referralSource?: string | null
    primaryLanguage?: string | null
    hasInterpreterNeeded?: boolean
    createdBy: UserCreateNestedOneWithoutCreatedFamiliesInput
    updatedBy: UserCreateNestedOneWithoutUpdatedFamiliesInput
    members?: FamilyMemberCreateNestedManyWithoutFamilyInput
    supportMeasures?: SupportMeasureCreateNestedManyWithoutFamilyInput
    history?: FamilyHistoryCreateNestedManyWithoutFamilyInput
  }

  export type FamilyUncheckedCreateWithoutDocumentsInput = {
    id?: string
    caseNumber: string
    familyName: string
    address: string
    region: string
    registrationAddress?: string | null
    district: string
    city?: string | null
    status: string
    riskLevel: string
    riskFactors?: FamilyCreateriskFactorsInput | string[]
    registrationDate: Date | string
    lastUpdate?: Date | string
    isActive?: boolean
    inactiveReason?: string | null
    notes?: string | null
    children?: number | null
    settingReason?: string | null
    inspectionStatus?: string | null
    familyType?: string | null
    housingType?: string | null
    employment?: string | null
    workplace?: string | null
    tzhsReason?: string | null
    nbReason?: string | null
    familyIncome?: string | null
    needsSupport?: boolean
    needsEducation?: boolean
    needsHealth?: boolean
    needsPolice?: boolean
    hasDisability?: boolean
    contactPhone?: string | null
    contactEmail?: string | null
    incomeSource?: string | null
    monthlyIncome?: number | null
    socialBenefits?: FamilyCreatesocialBenefitsInput | string[]
    referralSource?: string | null
    primaryLanguage?: string | null
    hasInterpreterNeeded?: boolean
    createdById: string
    updatedById: string
    members?: FamilyMemberUncheckedCreateNestedManyWithoutFamilyInput
    supportMeasures?: SupportMeasureUncheckedCreateNestedManyWithoutFamilyInput
    history?: FamilyHistoryUncheckedCreateNestedManyWithoutFamilyInput
  }

  export type FamilyCreateOrConnectWithoutDocumentsInput = {
    where: FamilyWhereUniqueInput
    create: XOR<FamilyCreateWithoutDocumentsInput, FamilyUncheckedCreateWithoutDocumentsInput>
  }

  export type FamilyMemberCreateWithoutDocumentsInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    relationship: string
    documentType?: string | null
    documentNumber?: string | null
    documentIssueDate?: Date | string | null
    documentExpiryDate?: Date | string | null
    registrationAddress?: string | null
    education?: string | null
    grade?: string | null
    institution?: string | null
    course?: string | null
    funding?: string | null
    meals?: string | null
    notes?: string | null
    status?: string | null
    isActive?: boolean
    citizenship?: string | null
    ethnicity?: string | null
    maritalStatus?: string | null
    phoneNumber?: string | null
    email?: string | null
    employment?: string | null
    healthStatus?: string | null
    disabilities?: string | null
    specialNeeds?: boolean
    isHeadOfHousehold?: boolean
    primaryCaregiver?: boolean
    incomeAmount?: number | null
    incomeSource?: string | null
    medicalInsurance?: string | null
    chronicConditions?: FamilyMemberCreatechronicConditionsInput | string[]
    allergies?: FamilyMemberCreateallergiesInput | string[]
    medications?: FamilyMemberCreatemedicationsInput | string[]
    family: FamilyCreateNestedOneWithoutMembersInput
    supportMeasures?: SupportMeasureCreateNestedManyWithoutMemberInput
  }

  export type FamilyMemberUncheckedCreateWithoutDocumentsInput = {
    id?: string
    familyId: string
    firstName: string
    lastName: string
    middleName?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    relationship: string
    documentType?: string | null
    documentNumber?: string | null
    documentIssueDate?: Date | string | null
    documentExpiryDate?: Date | string | null
    registrationAddress?: string | null
    education?: string | null
    grade?: string | null
    institution?: string | null
    course?: string | null
    funding?: string | null
    meals?: string | null
    notes?: string | null
    status?: string | null
    isActive?: boolean
    citizenship?: string | null
    ethnicity?: string | null
    maritalStatus?: string | null
    phoneNumber?: string | null
    email?: string | null
    employment?: string | null
    healthStatus?: string | null
    disabilities?: string | null
    specialNeeds?: boolean
    isHeadOfHousehold?: boolean
    primaryCaregiver?: boolean
    incomeAmount?: number | null
    incomeSource?: string | null
    medicalInsurance?: string | null
    chronicConditions?: FamilyMemberCreatechronicConditionsInput | string[]
    allergies?: FamilyMemberCreateallergiesInput | string[]
    medications?: FamilyMemberCreatemedicationsInput | string[]
    supportMeasures?: SupportMeasureUncheckedCreateNestedManyWithoutMemberInput
  }

  export type FamilyMemberCreateOrConnectWithoutDocumentsInput = {
    where: FamilyMemberWhereUniqueInput
    create: XOR<FamilyMemberCreateWithoutDocumentsInput, FamilyMemberUncheckedCreateWithoutDocumentsInput>
  }

  export type SupportMeasureCreateWithoutDocumentsInput = {
    id?: string
    type: string
    description: string
    category?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    status: string
    provider?: string | null
    result?: string | null
    notes?: string | null
    createdAt?: Date | string
    priority?: string | null
    cost?: number | null
    fundingSource?: string | null
    contactPerson?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    frequency?: string | null
    location?: string | null
    followUpDate?: Date | string | null
    evaluationDate?: Date | string | null
    effectiveness?: string | null
    family: FamilyCreateNestedOneWithoutSupportMeasuresInput
    member?: FamilyMemberCreateNestedOneWithoutSupportMeasuresInput
    createdBy: UserCreateNestedOneWithoutCreatedSupportMeasuresInput
  }

  export type SupportMeasureUncheckedCreateWithoutDocumentsInput = {
    id?: string
    familyId: string
    memberId?: string | null
    type: string
    description: string
    category?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    status: string
    provider?: string | null
    result?: string | null
    notes?: string | null
    createdAt?: Date | string
    priority?: string | null
    cost?: number | null
    fundingSource?: string | null
    contactPerson?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    frequency?: string | null
    location?: string | null
    followUpDate?: Date | string | null
    evaluationDate?: Date | string | null
    effectiveness?: string | null
    createdById: string
  }

  export type SupportMeasureCreateOrConnectWithoutDocumentsInput = {
    where: SupportMeasureWhereUniqueInput
    create: XOR<SupportMeasureCreateWithoutDocumentsInput, SupportMeasureUncheckedCreateWithoutDocumentsInput>
  }

  export type UserCreateWithoutDocumentsInput = {
    id?: string
    iin: string
    password: string
    fullName: string
    phone?: string | null
    role: string
    region?: string | null
    district?: string | null
    city?: string | null
    position?: string | null
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdFamilies?: FamilyCreateNestedManyWithoutCreatedByInput
    updatedFamilies?: FamilyCreateNestedManyWithoutUpdatedByInput
    createdSupportMeasures?: SupportMeasureCreateNestedManyWithoutCreatedByInput
    notifications?: NotificationCreateNestedManyWithoutCreatorInput
    notificationsReceived?: NotificationCreateNestedManyWithoutRecipientInput
    FamilyHistory?: FamilyHistoryCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutDocumentsInput = {
    id?: string
    iin: string
    password: string
    fullName: string
    phone?: string | null
    role: string
    region?: string | null
    district?: string | null
    city?: string | null
    position?: string | null
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdFamilies?: FamilyUncheckedCreateNestedManyWithoutCreatedByInput
    updatedFamilies?: FamilyUncheckedCreateNestedManyWithoutUpdatedByInput
    createdSupportMeasures?: SupportMeasureUncheckedCreateNestedManyWithoutCreatedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutCreatorInput
    notificationsReceived?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    FamilyHistory?: FamilyHistoryUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutDocumentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDocumentsInput, UserUncheckedCreateWithoutDocumentsInput>
  }

  export type FamilyUpsertWithoutDocumentsInput = {
    update: XOR<FamilyUpdateWithoutDocumentsInput, FamilyUncheckedUpdateWithoutDocumentsInput>
    create: XOR<FamilyCreateWithoutDocumentsInput, FamilyUncheckedCreateWithoutDocumentsInput>
    where?: FamilyWhereInput
  }

  export type FamilyUpdateToOneWithWhereWithoutDocumentsInput = {
    where?: FamilyWhereInput
    data: XOR<FamilyUpdateWithoutDocumentsInput, FamilyUncheckedUpdateWithoutDocumentsInput>
  }

  export type FamilyUpdateWithoutDocumentsInput = {
    caseNumber?: StringFieldUpdateOperationsInput | string
    familyName?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    district?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    riskLevel?: StringFieldUpdateOperationsInput | string
    riskFactors?: FamilyUpdateriskFactorsInput | string[]
    registrationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    inactiveReason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    children?: NullableIntFieldUpdateOperationsInput | number | null
    settingReason?: NullableStringFieldUpdateOperationsInput | string | null
    inspectionStatus?: NullableStringFieldUpdateOperationsInput | string | null
    familyType?: NullableStringFieldUpdateOperationsInput | string | null
    housingType?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    workplace?: NullableStringFieldUpdateOperationsInput | string | null
    tzhsReason?: NullableStringFieldUpdateOperationsInput | string | null
    nbReason?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableStringFieldUpdateOperationsInput | string | null
    needsSupport?: BoolFieldUpdateOperationsInput | boolean
    needsEducation?: BoolFieldUpdateOperationsInput | boolean
    needsHealth?: BoolFieldUpdateOperationsInput | boolean
    needsPolice?: BoolFieldUpdateOperationsInput | boolean
    hasDisability?: BoolFieldUpdateOperationsInput | boolean
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    socialBenefits?: FamilyUpdatesocialBenefitsInput | string[]
    referralSource?: NullableStringFieldUpdateOperationsInput | string | null
    primaryLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    hasInterpreterNeeded?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: UserUpdateOneRequiredWithoutCreatedFamiliesNestedInput
    updatedBy?: UserUpdateOneRequiredWithoutUpdatedFamiliesNestedInput
    members?: FamilyMemberUpdateManyWithoutFamilyNestedInput
    supportMeasures?: SupportMeasureUpdateManyWithoutFamilyNestedInput
    history?: FamilyHistoryUpdateManyWithoutFamilyNestedInput
  }

  export type FamilyUncheckedUpdateWithoutDocumentsInput = {
    caseNumber?: StringFieldUpdateOperationsInput | string
    familyName?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    district?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    riskLevel?: StringFieldUpdateOperationsInput | string
    riskFactors?: FamilyUpdateriskFactorsInput | string[]
    registrationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    inactiveReason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    children?: NullableIntFieldUpdateOperationsInput | number | null
    settingReason?: NullableStringFieldUpdateOperationsInput | string | null
    inspectionStatus?: NullableStringFieldUpdateOperationsInput | string | null
    familyType?: NullableStringFieldUpdateOperationsInput | string | null
    housingType?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    workplace?: NullableStringFieldUpdateOperationsInput | string | null
    tzhsReason?: NullableStringFieldUpdateOperationsInput | string | null
    nbReason?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableStringFieldUpdateOperationsInput | string | null
    needsSupport?: BoolFieldUpdateOperationsInput | boolean
    needsEducation?: BoolFieldUpdateOperationsInput | boolean
    needsHealth?: BoolFieldUpdateOperationsInput | boolean
    needsPolice?: BoolFieldUpdateOperationsInput | boolean
    hasDisability?: BoolFieldUpdateOperationsInput | boolean
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    socialBenefits?: FamilyUpdatesocialBenefitsInput | string[]
    referralSource?: NullableStringFieldUpdateOperationsInput | string | null
    primaryLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    hasInterpreterNeeded?: BoolFieldUpdateOperationsInput | boolean
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    members?: FamilyMemberUncheckedUpdateManyWithoutFamilyNestedInput
    supportMeasures?: SupportMeasureUncheckedUpdateManyWithoutFamilyNestedInput
    history?: FamilyHistoryUncheckedUpdateManyWithoutFamilyNestedInput
  }

  export type FamilyMemberUpsertWithoutDocumentsInput = {
    update: XOR<FamilyMemberUpdateWithoutDocumentsInput, FamilyMemberUncheckedUpdateWithoutDocumentsInput>
    create: XOR<FamilyMemberCreateWithoutDocumentsInput, FamilyMemberUncheckedCreateWithoutDocumentsInput>
    where?: FamilyMemberWhereInput
  }

  export type FamilyMemberUpdateToOneWithWhereWithoutDocumentsInput = {
    where?: FamilyMemberWhereInput
    data: XOR<FamilyMemberUpdateWithoutDocumentsInput, FamilyMemberUncheckedUpdateWithoutDocumentsInput>
  }

  export type FamilyMemberUpdateWithoutDocumentsInput = {
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: StringFieldUpdateOperationsInput | string
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentIssueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    institution?: NullableStringFieldUpdateOperationsInput | string | null
    course?: NullableStringFieldUpdateOperationsInput | string | null
    funding?: NullableStringFieldUpdateOperationsInput | string | null
    meals?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    citizenship?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    disabilities?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: BoolFieldUpdateOperationsInput | boolean
    isHeadOfHousehold?: BoolFieldUpdateOperationsInput | boolean
    primaryCaregiver?: BoolFieldUpdateOperationsInput | boolean
    incomeAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    medicalInsurance?: NullableStringFieldUpdateOperationsInput | string | null
    chronicConditions?: FamilyMemberUpdatechronicConditionsInput | string[]
    allergies?: FamilyMemberUpdateallergiesInput | string[]
    medications?: FamilyMemberUpdatemedicationsInput | string[]
    family?: FamilyUpdateOneRequiredWithoutMembersNestedInput
    supportMeasures?: SupportMeasureUpdateManyWithoutMemberNestedInput
  }

  export type FamilyMemberUncheckedUpdateWithoutDocumentsInput = {
    familyId?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: StringFieldUpdateOperationsInput | string
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentIssueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    institution?: NullableStringFieldUpdateOperationsInput | string | null
    course?: NullableStringFieldUpdateOperationsInput | string | null
    funding?: NullableStringFieldUpdateOperationsInput | string | null
    meals?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    citizenship?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    disabilities?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: BoolFieldUpdateOperationsInput | boolean
    isHeadOfHousehold?: BoolFieldUpdateOperationsInput | boolean
    primaryCaregiver?: BoolFieldUpdateOperationsInput | boolean
    incomeAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    medicalInsurance?: NullableStringFieldUpdateOperationsInput | string | null
    chronicConditions?: FamilyMemberUpdatechronicConditionsInput | string[]
    allergies?: FamilyMemberUpdateallergiesInput | string[]
    medications?: FamilyMemberUpdatemedicationsInput | string[]
    supportMeasures?: SupportMeasureUncheckedUpdateManyWithoutMemberNestedInput
  }

  export type SupportMeasureUpsertWithoutDocumentsInput = {
    update: XOR<SupportMeasureUpdateWithoutDocumentsInput, SupportMeasureUncheckedUpdateWithoutDocumentsInput>
    create: XOR<SupportMeasureCreateWithoutDocumentsInput, SupportMeasureUncheckedCreateWithoutDocumentsInput>
    where?: SupportMeasureWhereInput
  }

  export type SupportMeasureUpdateToOneWithWhereWithoutDocumentsInput = {
    where?: SupportMeasureWhereInput
    data: XOR<SupportMeasureUpdateWithoutDocumentsInput, SupportMeasureUncheckedUpdateWithoutDocumentsInput>
  }

  export type SupportMeasureUpdateWithoutDocumentsInput = {
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    fundingSource?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    evaluationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    effectiveness?: NullableStringFieldUpdateOperationsInput | string | null
    family?: FamilyUpdateOneRequiredWithoutSupportMeasuresNestedInput
    member?: FamilyMemberUpdateOneWithoutSupportMeasuresNestedInput
    createdBy?: UserUpdateOneRequiredWithoutCreatedSupportMeasuresNestedInput
  }

  export type SupportMeasureUncheckedUpdateWithoutDocumentsInput = {
    familyId?: StringFieldUpdateOperationsInput | string
    memberId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    fundingSource?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    evaluationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    effectiveness?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: StringFieldUpdateOperationsInput | string
  }

  export type UserUpsertWithoutDocumentsInput = {
    update: XOR<UserUpdateWithoutDocumentsInput, UserUncheckedUpdateWithoutDocumentsInput>
    create: XOR<UserCreateWithoutDocumentsInput, UserUncheckedCreateWithoutDocumentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDocumentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDocumentsInput, UserUncheckedUpdateWithoutDocumentsInput>
  }

  export type UserUpdateWithoutDocumentsInput = {
    iin?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdFamilies?: FamilyUpdateManyWithoutCreatedByNestedInput
    updatedFamilies?: FamilyUpdateManyWithoutUpdatedByNestedInput
    createdSupportMeasures?: SupportMeasureUpdateManyWithoutCreatedByNestedInput
    notifications?: NotificationUpdateManyWithoutCreatorNestedInput
    notificationsReceived?: NotificationUpdateManyWithoutRecipientNestedInput
    FamilyHistory?: FamilyHistoryUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutDocumentsInput = {
    iin?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdFamilies?: FamilyUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedFamilies?: FamilyUncheckedUpdateManyWithoutUpdatedByNestedInput
    createdSupportMeasures?: SupportMeasureUncheckedUpdateManyWithoutCreatedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutCreatorNestedInput
    notificationsReceived?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    FamilyHistory?: FamilyHistoryUncheckedUpdateManyWithoutUserNestedInput
  }

  export type FamilyCreateWithoutHistoryInput = {
    id?: string
    caseNumber: string
    familyName: string
    address: string
    region: string
    registrationAddress?: string | null
    district: string
    city?: string | null
    status: string
    riskLevel: string
    riskFactors?: FamilyCreateriskFactorsInput | string[]
    registrationDate: Date | string
    lastUpdate?: Date | string
    isActive?: boolean
    inactiveReason?: string | null
    notes?: string | null
    children?: number | null
    settingReason?: string | null
    inspectionStatus?: string | null
    familyType?: string | null
    housingType?: string | null
    employment?: string | null
    workplace?: string | null
    tzhsReason?: string | null
    nbReason?: string | null
    familyIncome?: string | null
    needsSupport?: boolean
    needsEducation?: boolean
    needsHealth?: boolean
    needsPolice?: boolean
    hasDisability?: boolean
    contactPhone?: string | null
    contactEmail?: string | null
    incomeSource?: string | null
    monthlyIncome?: number | null
    socialBenefits?: FamilyCreatesocialBenefitsInput | string[]
    referralSource?: string | null
    primaryLanguage?: string | null
    hasInterpreterNeeded?: boolean
    createdBy: UserCreateNestedOneWithoutCreatedFamiliesInput
    updatedBy: UserCreateNestedOneWithoutUpdatedFamiliesInput
    members?: FamilyMemberCreateNestedManyWithoutFamilyInput
    supportMeasures?: SupportMeasureCreateNestedManyWithoutFamilyInput
    documents?: DocumentCreateNestedManyWithoutFamilyInput
  }

  export type FamilyUncheckedCreateWithoutHistoryInput = {
    id?: string
    caseNumber: string
    familyName: string
    address: string
    region: string
    registrationAddress?: string | null
    district: string
    city?: string | null
    status: string
    riskLevel: string
    riskFactors?: FamilyCreateriskFactorsInput | string[]
    registrationDate: Date | string
    lastUpdate?: Date | string
    isActive?: boolean
    inactiveReason?: string | null
    notes?: string | null
    children?: number | null
    settingReason?: string | null
    inspectionStatus?: string | null
    familyType?: string | null
    housingType?: string | null
    employment?: string | null
    workplace?: string | null
    tzhsReason?: string | null
    nbReason?: string | null
    familyIncome?: string | null
    needsSupport?: boolean
    needsEducation?: boolean
    needsHealth?: boolean
    needsPolice?: boolean
    hasDisability?: boolean
    contactPhone?: string | null
    contactEmail?: string | null
    incomeSource?: string | null
    monthlyIncome?: number | null
    socialBenefits?: FamilyCreatesocialBenefitsInput | string[]
    referralSource?: string | null
    primaryLanguage?: string | null
    hasInterpreterNeeded?: boolean
    createdById: string
    updatedById: string
    members?: FamilyMemberUncheckedCreateNestedManyWithoutFamilyInput
    supportMeasures?: SupportMeasureUncheckedCreateNestedManyWithoutFamilyInput
    documents?: DocumentUncheckedCreateNestedManyWithoutFamilyInput
  }

  export type FamilyCreateOrConnectWithoutHistoryInput = {
    where: FamilyWhereUniqueInput
    create: XOR<FamilyCreateWithoutHistoryInput, FamilyUncheckedCreateWithoutHistoryInput>
  }

  export type UserCreateWithoutFamilyHistoryInput = {
    id?: string
    iin: string
    password: string
    fullName: string
    phone?: string | null
    role: string
    region?: string | null
    district?: string | null
    city?: string | null
    position?: string | null
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdFamilies?: FamilyCreateNestedManyWithoutCreatedByInput
    updatedFamilies?: FamilyCreateNestedManyWithoutUpdatedByInput
    createdSupportMeasures?: SupportMeasureCreateNestedManyWithoutCreatedByInput
    documents?: DocumentCreateNestedManyWithoutUploadedByInput
    notifications?: NotificationCreateNestedManyWithoutCreatorInput
    notificationsReceived?: NotificationCreateNestedManyWithoutRecipientInput
  }

  export type UserUncheckedCreateWithoutFamilyHistoryInput = {
    id?: string
    iin: string
    password: string
    fullName: string
    phone?: string | null
    role: string
    region?: string | null
    district?: string | null
    city?: string | null
    position?: string | null
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdFamilies?: FamilyUncheckedCreateNestedManyWithoutCreatedByInput
    updatedFamilies?: FamilyUncheckedCreateNestedManyWithoutUpdatedByInput
    createdSupportMeasures?: SupportMeasureUncheckedCreateNestedManyWithoutCreatedByInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUploadedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutCreatorInput
    notificationsReceived?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
  }

  export type UserCreateOrConnectWithoutFamilyHistoryInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFamilyHistoryInput, UserUncheckedCreateWithoutFamilyHistoryInput>
  }

  export type FamilyUpsertWithoutHistoryInput = {
    update: XOR<FamilyUpdateWithoutHistoryInput, FamilyUncheckedUpdateWithoutHistoryInput>
    create: XOR<FamilyCreateWithoutHistoryInput, FamilyUncheckedCreateWithoutHistoryInput>
    where?: FamilyWhereInput
  }

  export type FamilyUpdateToOneWithWhereWithoutHistoryInput = {
    where?: FamilyWhereInput
    data: XOR<FamilyUpdateWithoutHistoryInput, FamilyUncheckedUpdateWithoutHistoryInput>
  }

  export type FamilyUpdateWithoutHistoryInput = {
    caseNumber?: StringFieldUpdateOperationsInput | string
    familyName?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    district?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    riskLevel?: StringFieldUpdateOperationsInput | string
    riskFactors?: FamilyUpdateriskFactorsInput | string[]
    registrationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    inactiveReason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    children?: NullableIntFieldUpdateOperationsInput | number | null
    settingReason?: NullableStringFieldUpdateOperationsInput | string | null
    inspectionStatus?: NullableStringFieldUpdateOperationsInput | string | null
    familyType?: NullableStringFieldUpdateOperationsInput | string | null
    housingType?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    workplace?: NullableStringFieldUpdateOperationsInput | string | null
    tzhsReason?: NullableStringFieldUpdateOperationsInput | string | null
    nbReason?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableStringFieldUpdateOperationsInput | string | null
    needsSupport?: BoolFieldUpdateOperationsInput | boolean
    needsEducation?: BoolFieldUpdateOperationsInput | boolean
    needsHealth?: BoolFieldUpdateOperationsInput | boolean
    needsPolice?: BoolFieldUpdateOperationsInput | boolean
    hasDisability?: BoolFieldUpdateOperationsInput | boolean
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    socialBenefits?: FamilyUpdatesocialBenefitsInput | string[]
    referralSource?: NullableStringFieldUpdateOperationsInput | string | null
    primaryLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    hasInterpreterNeeded?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: UserUpdateOneRequiredWithoutCreatedFamiliesNestedInput
    updatedBy?: UserUpdateOneRequiredWithoutUpdatedFamiliesNestedInput
    members?: FamilyMemberUpdateManyWithoutFamilyNestedInput
    supportMeasures?: SupportMeasureUpdateManyWithoutFamilyNestedInput
    documents?: DocumentUpdateManyWithoutFamilyNestedInput
  }

  export type FamilyUncheckedUpdateWithoutHistoryInput = {
    caseNumber?: StringFieldUpdateOperationsInput | string
    familyName?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    district?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    riskLevel?: StringFieldUpdateOperationsInput | string
    riskFactors?: FamilyUpdateriskFactorsInput | string[]
    registrationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    inactiveReason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    children?: NullableIntFieldUpdateOperationsInput | number | null
    settingReason?: NullableStringFieldUpdateOperationsInput | string | null
    inspectionStatus?: NullableStringFieldUpdateOperationsInput | string | null
    familyType?: NullableStringFieldUpdateOperationsInput | string | null
    housingType?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    workplace?: NullableStringFieldUpdateOperationsInput | string | null
    tzhsReason?: NullableStringFieldUpdateOperationsInput | string | null
    nbReason?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableStringFieldUpdateOperationsInput | string | null
    needsSupport?: BoolFieldUpdateOperationsInput | boolean
    needsEducation?: BoolFieldUpdateOperationsInput | boolean
    needsHealth?: BoolFieldUpdateOperationsInput | boolean
    needsPolice?: BoolFieldUpdateOperationsInput | boolean
    hasDisability?: BoolFieldUpdateOperationsInput | boolean
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    socialBenefits?: FamilyUpdatesocialBenefitsInput | string[]
    referralSource?: NullableStringFieldUpdateOperationsInput | string | null
    primaryLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    hasInterpreterNeeded?: BoolFieldUpdateOperationsInput | boolean
    createdById?: StringFieldUpdateOperationsInput | string
    updatedById?: StringFieldUpdateOperationsInput | string
    members?: FamilyMemberUncheckedUpdateManyWithoutFamilyNestedInput
    supportMeasures?: SupportMeasureUncheckedUpdateManyWithoutFamilyNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutFamilyNestedInput
  }

  export type UserUpsertWithoutFamilyHistoryInput = {
    update: XOR<UserUpdateWithoutFamilyHistoryInput, UserUncheckedUpdateWithoutFamilyHistoryInput>
    create: XOR<UserCreateWithoutFamilyHistoryInput, UserUncheckedCreateWithoutFamilyHistoryInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFamilyHistoryInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFamilyHistoryInput, UserUncheckedUpdateWithoutFamilyHistoryInput>
  }

  export type UserUpdateWithoutFamilyHistoryInput = {
    iin?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdFamilies?: FamilyUpdateManyWithoutCreatedByNestedInput
    updatedFamilies?: FamilyUpdateManyWithoutUpdatedByNestedInput
    createdSupportMeasures?: SupportMeasureUpdateManyWithoutCreatedByNestedInput
    documents?: DocumentUpdateManyWithoutUploadedByNestedInput
    notifications?: NotificationUpdateManyWithoutCreatorNestedInput
    notificationsReceived?: NotificationUpdateManyWithoutRecipientNestedInput
  }

  export type UserUncheckedUpdateWithoutFamilyHistoryInput = {
    iin?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdFamilies?: FamilyUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedFamilies?: FamilyUncheckedUpdateManyWithoutUpdatedByNestedInput
    createdSupportMeasures?: SupportMeasureUncheckedUpdateManyWithoutCreatedByNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUploadedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutCreatorNestedInput
    notificationsReceived?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
  }

  export type UserCreateWithoutNotificationsInput = {
    id?: string
    iin: string
    password: string
    fullName: string
    phone?: string | null
    role: string
    region?: string | null
    district?: string | null
    city?: string | null
    position?: string | null
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdFamilies?: FamilyCreateNestedManyWithoutCreatedByInput
    updatedFamilies?: FamilyCreateNestedManyWithoutUpdatedByInput
    createdSupportMeasures?: SupportMeasureCreateNestedManyWithoutCreatedByInput
    documents?: DocumentCreateNestedManyWithoutUploadedByInput
    notificationsReceived?: NotificationCreateNestedManyWithoutRecipientInput
    FamilyHistory?: FamilyHistoryCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutNotificationsInput = {
    id?: string
    iin: string
    password: string
    fullName: string
    phone?: string | null
    role: string
    region?: string | null
    district?: string | null
    city?: string | null
    position?: string | null
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdFamilies?: FamilyUncheckedCreateNestedManyWithoutCreatedByInput
    updatedFamilies?: FamilyUncheckedCreateNestedManyWithoutUpdatedByInput
    createdSupportMeasures?: SupportMeasureUncheckedCreateNestedManyWithoutCreatedByInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUploadedByInput
    notificationsReceived?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    FamilyHistory?: FamilyHistoryUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutNotificationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
  }

  export type UserCreateWithoutNotificationsReceivedInput = {
    id?: string
    iin: string
    password: string
    fullName: string
    phone?: string | null
    role: string
    region?: string | null
    district?: string | null
    city?: string | null
    position?: string | null
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdFamilies?: FamilyCreateNestedManyWithoutCreatedByInput
    updatedFamilies?: FamilyCreateNestedManyWithoutUpdatedByInput
    createdSupportMeasures?: SupportMeasureCreateNestedManyWithoutCreatedByInput
    documents?: DocumentCreateNestedManyWithoutUploadedByInput
    notifications?: NotificationCreateNestedManyWithoutCreatorInput
    FamilyHistory?: FamilyHistoryCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutNotificationsReceivedInput = {
    id?: string
    iin: string
    password: string
    fullName: string
    phone?: string | null
    role: string
    region?: string | null
    district?: string | null
    city?: string | null
    position?: string | null
    isActive?: boolean
    lastLogin?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdFamilies?: FamilyUncheckedCreateNestedManyWithoutCreatedByInput
    updatedFamilies?: FamilyUncheckedCreateNestedManyWithoutUpdatedByInput
    createdSupportMeasures?: SupportMeasureUncheckedCreateNestedManyWithoutCreatedByInput
    documents?: DocumentUncheckedCreateNestedManyWithoutUploadedByInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutCreatorInput
    FamilyHistory?: FamilyHistoryUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutNotificationsReceivedInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutNotificationsReceivedInput, UserUncheckedCreateWithoutNotificationsReceivedInput>
  }

  export type UserUpsertWithoutNotificationsInput = {
    update: XOR<UserUpdateWithoutNotificationsInput, UserUncheckedUpdateWithoutNotificationsInput>
    create: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutNotificationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutNotificationsInput, UserUncheckedUpdateWithoutNotificationsInput>
  }

  export type UserUpdateWithoutNotificationsInput = {
    iin?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdFamilies?: FamilyUpdateManyWithoutCreatedByNestedInput
    updatedFamilies?: FamilyUpdateManyWithoutUpdatedByNestedInput
    createdSupportMeasures?: SupportMeasureUpdateManyWithoutCreatedByNestedInput
    documents?: DocumentUpdateManyWithoutUploadedByNestedInput
    notificationsReceived?: NotificationUpdateManyWithoutRecipientNestedInput
    FamilyHistory?: FamilyHistoryUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutNotificationsInput = {
    iin?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdFamilies?: FamilyUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedFamilies?: FamilyUncheckedUpdateManyWithoutUpdatedByNestedInput
    createdSupportMeasures?: SupportMeasureUncheckedUpdateManyWithoutCreatedByNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUploadedByNestedInput
    notificationsReceived?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    FamilyHistory?: FamilyHistoryUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUpsertWithoutNotificationsReceivedInput = {
    update: XOR<UserUpdateWithoutNotificationsReceivedInput, UserUncheckedUpdateWithoutNotificationsReceivedInput>
    create: XOR<UserCreateWithoutNotificationsReceivedInput, UserUncheckedCreateWithoutNotificationsReceivedInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutNotificationsReceivedInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutNotificationsReceivedInput, UserUncheckedUpdateWithoutNotificationsReceivedInput>
  }

  export type UserUpdateWithoutNotificationsReceivedInput = {
    iin?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdFamilies?: FamilyUpdateManyWithoutCreatedByNestedInput
    updatedFamilies?: FamilyUpdateManyWithoutUpdatedByNestedInput
    createdSupportMeasures?: SupportMeasureUpdateManyWithoutCreatedByNestedInput
    documents?: DocumentUpdateManyWithoutUploadedByNestedInput
    notifications?: NotificationUpdateManyWithoutCreatorNestedInput
    FamilyHistory?: FamilyHistoryUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutNotificationsReceivedInput = {
    iin?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    role?: StringFieldUpdateOperationsInput | string
    region?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdFamilies?: FamilyUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedFamilies?: FamilyUncheckedUpdateManyWithoutUpdatedByNestedInput
    createdSupportMeasures?: SupportMeasureUncheckedUpdateManyWithoutCreatedByNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutUploadedByNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutCreatorNestedInput
    FamilyHistory?: FamilyHistoryUncheckedUpdateManyWithoutUserNestedInput
  }

  export type FamilyCreateManyCreatedByInput = {
    id?: string
    caseNumber: string
    familyName: string
    address: string
    region: string
    registrationAddress?: string | null
    district: string
    city?: string | null
    status: string
    riskLevel: string
    riskFactors?: FamilyCreateriskFactorsInput | string[]
    registrationDate: Date | string
    lastUpdate?: Date | string
    isActive?: boolean
    inactiveReason?: string | null
    notes?: string | null
    children?: number | null
    settingReason?: string | null
    inspectionStatus?: string | null
    familyType?: string | null
    housingType?: string | null
    employment?: string | null
    workplace?: string | null
    tzhsReason?: string | null
    nbReason?: string | null
    familyIncome?: string | null
    needsSupport?: boolean
    needsEducation?: boolean
    needsHealth?: boolean
    needsPolice?: boolean
    hasDisability?: boolean
    contactPhone?: string | null
    contactEmail?: string | null
    incomeSource?: string | null
    monthlyIncome?: number | null
    socialBenefits?: FamilyCreatesocialBenefitsInput | string[]
    referralSource?: string | null
    primaryLanguage?: string | null
    hasInterpreterNeeded?: boolean
    updatedById: string
  }

  export type FamilyCreateManyUpdatedByInput = {
    id?: string
    caseNumber: string
    familyName: string
    address: string
    region: string
    registrationAddress?: string | null
    district: string
    city?: string | null
    status: string
    riskLevel: string
    riskFactors?: FamilyCreateriskFactorsInput | string[]
    registrationDate: Date | string
    lastUpdate?: Date | string
    isActive?: boolean
    inactiveReason?: string | null
    notes?: string | null
    children?: number | null
    settingReason?: string | null
    inspectionStatus?: string | null
    familyType?: string | null
    housingType?: string | null
    employment?: string | null
    workplace?: string | null
    tzhsReason?: string | null
    nbReason?: string | null
    familyIncome?: string | null
    needsSupport?: boolean
    needsEducation?: boolean
    needsHealth?: boolean
    needsPolice?: boolean
    hasDisability?: boolean
    contactPhone?: string | null
    contactEmail?: string | null
    incomeSource?: string | null
    monthlyIncome?: number | null
    socialBenefits?: FamilyCreatesocialBenefitsInput | string[]
    referralSource?: string | null
    primaryLanguage?: string | null
    hasInterpreterNeeded?: boolean
    createdById: string
  }

  export type SupportMeasureCreateManyCreatedByInput = {
    id?: string
    familyId: string
    memberId?: string | null
    type: string
    description: string
    category?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    status: string
    provider?: string | null
    result?: string | null
    notes?: string | null
    createdAt?: Date | string
    priority?: string | null
    cost?: number | null
    fundingSource?: string | null
    contactPerson?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    frequency?: string | null
    location?: string | null
    followUpDate?: Date | string | null
    evaluationDate?: Date | string | null
    effectiveness?: string | null
  }

  export type DocumentCreateManyUploadedByInput = {
    id?: string
    title: string
    type: string
    fileUrl: string
    mimeType: string
    fileSize: number
    familyId?: string | null
    memberId?: string | null
    supportId?: string | null
    uploadDate?: Date | string
    notes?: string | null
    category?: string | null
    expirationDate?: Date | string | null
    isConfidential?: boolean
    tags?: DocumentCreatetagsInput | string[]
    status?: string | null
  }

  export type NotificationCreateManyCreatorInput = {
    id?: string
    title: string
    message: string
    type: string
    isRead?: boolean
    createdAt?: Date | string
    priority?: string | null
    category?: string | null
    expiresAt?: Date | string | null
    actionUrl?: string | null
    actionLabel?: string | null
    isArchived?: boolean
    recipientId: string
  }

  export type NotificationCreateManyRecipientInput = {
    id?: string
    title: string
    message: string
    type: string
    isRead?: boolean
    createdAt?: Date | string
    priority?: string | null
    category?: string | null
    expiresAt?: Date | string | null
    actionUrl?: string | null
    actionLabel?: string | null
    isArchived?: boolean
    creatorId: string
  }

  export type FamilyHistoryCreateManyUserInput = {
    id?: string
    familyId: string
    action: string
    description: string
    timestamp?: Date | string
    changedFields?: FamilyHistoryCreatechangedFieldsInput | string[]
    previousValues?: InputJsonValue | null
    newValues?: InputJsonValue | null
    ipAddress?: string | null
    userAgent?: string | null
  }

  export type FamilyUpdateWithoutCreatedByInput = {
    caseNumber?: StringFieldUpdateOperationsInput | string
    familyName?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    district?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    riskLevel?: StringFieldUpdateOperationsInput | string
    riskFactors?: FamilyUpdateriskFactorsInput | string[]
    registrationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    inactiveReason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    children?: NullableIntFieldUpdateOperationsInput | number | null
    settingReason?: NullableStringFieldUpdateOperationsInput | string | null
    inspectionStatus?: NullableStringFieldUpdateOperationsInput | string | null
    familyType?: NullableStringFieldUpdateOperationsInput | string | null
    housingType?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    workplace?: NullableStringFieldUpdateOperationsInput | string | null
    tzhsReason?: NullableStringFieldUpdateOperationsInput | string | null
    nbReason?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableStringFieldUpdateOperationsInput | string | null
    needsSupport?: BoolFieldUpdateOperationsInput | boolean
    needsEducation?: BoolFieldUpdateOperationsInput | boolean
    needsHealth?: BoolFieldUpdateOperationsInput | boolean
    needsPolice?: BoolFieldUpdateOperationsInput | boolean
    hasDisability?: BoolFieldUpdateOperationsInput | boolean
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    socialBenefits?: FamilyUpdatesocialBenefitsInput | string[]
    referralSource?: NullableStringFieldUpdateOperationsInput | string | null
    primaryLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    hasInterpreterNeeded?: BoolFieldUpdateOperationsInput | boolean
    updatedBy?: UserUpdateOneRequiredWithoutUpdatedFamiliesNestedInput
    members?: FamilyMemberUpdateManyWithoutFamilyNestedInput
    supportMeasures?: SupportMeasureUpdateManyWithoutFamilyNestedInput
    documents?: DocumentUpdateManyWithoutFamilyNestedInput
    history?: FamilyHistoryUpdateManyWithoutFamilyNestedInput
  }

  export type FamilyUncheckedUpdateWithoutCreatedByInput = {
    caseNumber?: StringFieldUpdateOperationsInput | string
    familyName?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    district?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    riskLevel?: StringFieldUpdateOperationsInput | string
    riskFactors?: FamilyUpdateriskFactorsInput | string[]
    registrationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    inactiveReason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    children?: NullableIntFieldUpdateOperationsInput | number | null
    settingReason?: NullableStringFieldUpdateOperationsInput | string | null
    inspectionStatus?: NullableStringFieldUpdateOperationsInput | string | null
    familyType?: NullableStringFieldUpdateOperationsInput | string | null
    housingType?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    workplace?: NullableStringFieldUpdateOperationsInput | string | null
    tzhsReason?: NullableStringFieldUpdateOperationsInput | string | null
    nbReason?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableStringFieldUpdateOperationsInput | string | null
    needsSupport?: BoolFieldUpdateOperationsInput | boolean
    needsEducation?: BoolFieldUpdateOperationsInput | boolean
    needsHealth?: BoolFieldUpdateOperationsInput | boolean
    needsPolice?: BoolFieldUpdateOperationsInput | boolean
    hasDisability?: BoolFieldUpdateOperationsInput | boolean
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    socialBenefits?: FamilyUpdatesocialBenefitsInput | string[]
    referralSource?: NullableStringFieldUpdateOperationsInput | string | null
    primaryLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    hasInterpreterNeeded?: BoolFieldUpdateOperationsInput | boolean
    updatedById?: StringFieldUpdateOperationsInput | string
    members?: FamilyMemberUncheckedUpdateManyWithoutFamilyNestedInput
    supportMeasures?: SupportMeasureUncheckedUpdateManyWithoutFamilyNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutFamilyNestedInput
    history?: FamilyHistoryUncheckedUpdateManyWithoutFamilyNestedInput
  }

  export type FamilyUncheckedUpdateManyWithoutCreatedByInput = {
    caseNumber?: StringFieldUpdateOperationsInput | string
    familyName?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    district?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    riskLevel?: StringFieldUpdateOperationsInput | string
    riskFactors?: FamilyUpdateriskFactorsInput | string[]
    registrationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    inactiveReason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    children?: NullableIntFieldUpdateOperationsInput | number | null
    settingReason?: NullableStringFieldUpdateOperationsInput | string | null
    inspectionStatus?: NullableStringFieldUpdateOperationsInput | string | null
    familyType?: NullableStringFieldUpdateOperationsInput | string | null
    housingType?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    workplace?: NullableStringFieldUpdateOperationsInput | string | null
    tzhsReason?: NullableStringFieldUpdateOperationsInput | string | null
    nbReason?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableStringFieldUpdateOperationsInput | string | null
    needsSupport?: BoolFieldUpdateOperationsInput | boolean
    needsEducation?: BoolFieldUpdateOperationsInput | boolean
    needsHealth?: BoolFieldUpdateOperationsInput | boolean
    needsPolice?: BoolFieldUpdateOperationsInput | boolean
    hasDisability?: BoolFieldUpdateOperationsInput | boolean
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    socialBenefits?: FamilyUpdatesocialBenefitsInput | string[]
    referralSource?: NullableStringFieldUpdateOperationsInput | string | null
    primaryLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    hasInterpreterNeeded?: BoolFieldUpdateOperationsInput | boolean
    updatedById?: StringFieldUpdateOperationsInput | string
  }

  export type FamilyUpdateWithoutUpdatedByInput = {
    caseNumber?: StringFieldUpdateOperationsInput | string
    familyName?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    district?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    riskLevel?: StringFieldUpdateOperationsInput | string
    riskFactors?: FamilyUpdateriskFactorsInput | string[]
    registrationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    inactiveReason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    children?: NullableIntFieldUpdateOperationsInput | number | null
    settingReason?: NullableStringFieldUpdateOperationsInput | string | null
    inspectionStatus?: NullableStringFieldUpdateOperationsInput | string | null
    familyType?: NullableStringFieldUpdateOperationsInput | string | null
    housingType?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    workplace?: NullableStringFieldUpdateOperationsInput | string | null
    tzhsReason?: NullableStringFieldUpdateOperationsInput | string | null
    nbReason?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableStringFieldUpdateOperationsInput | string | null
    needsSupport?: BoolFieldUpdateOperationsInput | boolean
    needsEducation?: BoolFieldUpdateOperationsInput | boolean
    needsHealth?: BoolFieldUpdateOperationsInput | boolean
    needsPolice?: BoolFieldUpdateOperationsInput | boolean
    hasDisability?: BoolFieldUpdateOperationsInput | boolean
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    socialBenefits?: FamilyUpdatesocialBenefitsInput | string[]
    referralSource?: NullableStringFieldUpdateOperationsInput | string | null
    primaryLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    hasInterpreterNeeded?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: UserUpdateOneRequiredWithoutCreatedFamiliesNestedInput
    members?: FamilyMemberUpdateManyWithoutFamilyNestedInput
    supportMeasures?: SupportMeasureUpdateManyWithoutFamilyNestedInput
    documents?: DocumentUpdateManyWithoutFamilyNestedInput
    history?: FamilyHistoryUpdateManyWithoutFamilyNestedInput
  }

  export type FamilyUncheckedUpdateWithoutUpdatedByInput = {
    caseNumber?: StringFieldUpdateOperationsInput | string
    familyName?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    district?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    riskLevel?: StringFieldUpdateOperationsInput | string
    riskFactors?: FamilyUpdateriskFactorsInput | string[]
    registrationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    inactiveReason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    children?: NullableIntFieldUpdateOperationsInput | number | null
    settingReason?: NullableStringFieldUpdateOperationsInput | string | null
    inspectionStatus?: NullableStringFieldUpdateOperationsInput | string | null
    familyType?: NullableStringFieldUpdateOperationsInput | string | null
    housingType?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    workplace?: NullableStringFieldUpdateOperationsInput | string | null
    tzhsReason?: NullableStringFieldUpdateOperationsInput | string | null
    nbReason?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableStringFieldUpdateOperationsInput | string | null
    needsSupport?: BoolFieldUpdateOperationsInput | boolean
    needsEducation?: BoolFieldUpdateOperationsInput | boolean
    needsHealth?: BoolFieldUpdateOperationsInput | boolean
    needsPolice?: BoolFieldUpdateOperationsInput | boolean
    hasDisability?: BoolFieldUpdateOperationsInput | boolean
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    socialBenefits?: FamilyUpdatesocialBenefitsInput | string[]
    referralSource?: NullableStringFieldUpdateOperationsInput | string | null
    primaryLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    hasInterpreterNeeded?: BoolFieldUpdateOperationsInput | boolean
    createdById?: StringFieldUpdateOperationsInput | string
    members?: FamilyMemberUncheckedUpdateManyWithoutFamilyNestedInput
    supportMeasures?: SupportMeasureUncheckedUpdateManyWithoutFamilyNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutFamilyNestedInput
    history?: FamilyHistoryUncheckedUpdateManyWithoutFamilyNestedInput
  }

  export type FamilyUncheckedUpdateManyWithoutUpdatedByInput = {
    caseNumber?: StringFieldUpdateOperationsInput | string
    familyName?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    region?: StringFieldUpdateOperationsInput | string
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    district?: StringFieldUpdateOperationsInput | string
    city?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    riskLevel?: StringFieldUpdateOperationsInput | string
    riskFactors?: FamilyUpdateriskFactorsInput | string[]
    registrationDate?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    inactiveReason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    children?: NullableIntFieldUpdateOperationsInput | number | null
    settingReason?: NullableStringFieldUpdateOperationsInput | string | null
    inspectionStatus?: NullableStringFieldUpdateOperationsInput | string | null
    familyType?: NullableStringFieldUpdateOperationsInput | string | null
    housingType?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    workplace?: NullableStringFieldUpdateOperationsInput | string | null
    tzhsReason?: NullableStringFieldUpdateOperationsInput | string | null
    nbReason?: NullableStringFieldUpdateOperationsInput | string | null
    familyIncome?: NullableStringFieldUpdateOperationsInput | string | null
    needsSupport?: BoolFieldUpdateOperationsInput | boolean
    needsEducation?: BoolFieldUpdateOperationsInput | boolean
    needsHealth?: BoolFieldUpdateOperationsInput | boolean
    needsPolice?: BoolFieldUpdateOperationsInput | boolean
    hasDisability?: BoolFieldUpdateOperationsInput | boolean
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    monthlyIncome?: NullableFloatFieldUpdateOperationsInput | number | null
    socialBenefits?: FamilyUpdatesocialBenefitsInput | string[]
    referralSource?: NullableStringFieldUpdateOperationsInput | string | null
    primaryLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    hasInterpreterNeeded?: BoolFieldUpdateOperationsInput | boolean
    createdById?: StringFieldUpdateOperationsInput | string
  }

  export type SupportMeasureUpdateWithoutCreatedByInput = {
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    fundingSource?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    evaluationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    effectiveness?: NullableStringFieldUpdateOperationsInput | string | null
    family?: FamilyUpdateOneRequiredWithoutSupportMeasuresNestedInput
    member?: FamilyMemberUpdateOneWithoutSupportMeasuresNestedInput
    documents?: DocumentUpdateManyWithoutSupportMeasureNestedInput
  }

  export type SupportMeasureUncheckedUpdateWithoutCreatedByInput = {
    familyId?: StringFieldUpdateOperationsInput | string
    memberId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    fundingSource?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    evaluationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    effectiveness?: NullableStringFieldUpdateOperationsInput | string | null
    documents?: DocumentUncheckedUpdateManyWithoutSupportMeasureNestedInput
  }

  export type SupportMeasureUncheckedUpdateManyWithoutCreatedByInput = {
    familyId?: StringFieldUpdateOperationsInput | string
    memberId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    fundingSource?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    evaluationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    effectiveness?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DocumentUpdateWithoutUploadedByInput = {
    title?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    mimeType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    uploadDate?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isConfidential?: BoolFieldUpdateOperationsInput | boolean
    tags?: DocumentUpdatetagsInput | string[]
    status?: NullableStringFieldUpdateOperationsInput | string | null
    family?: FamilyUpdateOneWithoutDocumentsNestedInput
    member?: FamilyMemberUpdateOneWithoutDocumentsNestedInput
    supportMeasure?: SupportMeasureUpdateOneWithoutDocumentsNestedInput
  }

  export type DocumentUncheckedUpdateWithoutUploadedByInput = {
    title?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    mimeType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    familyId?: NullableStringFieldUpdateOperationsInput | string | null
    memberId?: NullableStringFieldUpdateOperationsInput | string | null
    supportId?: NullableStringFieldUpdateOperationsInput | string | null
    uploadDate?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isConfidential?: BoolFieldUpdateOperationsInput | boolean
    tags?: DocumentUpdatetagsInput | string[]
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DocumentUncheckedUpdateManyWithoutUploadedByInput = {
    title?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    mimeType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    familyId?: NullableStringFieldUpdateOperationsInput | string | null
    memberId?: NullableStringFieldUpdateOperationsInput | string | null
    supportId?: NullableStringFieldUpdateOperationsInput | string | null
    uploadDate?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isConfidential?: BoolFieldUpdateOperationsInput | boolean
    tags?: DocumentUpdatetagsInput | string[]
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationUpdateWithoutCreatorInput = {
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionLabel?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    recipient?: UserUpdateOneRequiredWithoutNotificationsReceivedNestedInput
  }

  export type NotificationUncheckedUpdateWithoutCreatorInput = {
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionLabel?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    recipientId?: StringFieldUpdateOperationsInput | string
  }

  export type NotificationUncheckedUpdateManyWithoutCreatorInput = {
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionLabel?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    recipientId?: StringFieldUpdateOperationsInput | string
  }

  export type NotificationUpdateWithoutRecipientInput = {
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionLabel?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    creator?: UserUpdateOneRequiredWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateWithoutRecipientInput = {
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionLabel?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    creatorId?: StringFieldUpdateOperationsInput | string
  }

  export type NotificationUncheckedUpdateManyWithoutRecipientInput = {
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    isRead?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionLabel?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    creatorId?: StringFieldUpdateOperationsInput | string
  }

  export type FamilyHistoryUpdateWithoutUserInput = {
    action?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    changedFields?: FamilyHistoryUpdatechangedFieldsInput | string[]
    previousValues?: InputJsonValue | InputJsonValue | null
    newValues?: InputJsonValue | InputJsonValue | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    family?: FamilyUpdateOneRequiredWithoutHistoryNestedInput
  }

  export type FamilyHistoryUncheckedUpdateWithoutUserInput = {
    familyId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    changedFields?: FamilyHistoryUpdatechangedFieldsInput | string[]
    previousValues?: InputJsonValue | InputJsonValue | null
    newValues?: InputJsonValue | InputJsonValue | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FamilyHistoryUncheckedUpdateManyWithoutUserInput = {
    familyId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    changedFields?: FamilyHistoryUpdatechangedFieldsInput | string[]
    previousValues?: InputJsonValue | InputJsonValue | null
    newValues?: InputJsonValue | InputJsonValue | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FamilyMemberCreateManyFamilyInput = {
    id?: string
    firstName: string
    lastName: string
    middleName?: string | null
    birthDate?: Date | string | null
    gender?: string | null
    relationship: string
    documentType?: string | null
    documentNumber?: string | null
    documentIssueDate?: Date | string | null
    documentExpiryDate?: Date | string | null
    registrationAddress?: string | null
    education?: string | null
    grade?: string | null
    institution?: string | null
    course?: string | null
    funding?: string | null
    meals?: string | null
    notes?: string | null
    status?: string | null
    isActive?: boolean
    citizenship?: string | null
    ethnicity?: string | null
    maritalStatus?: string | null
    phoneNumber?: string | null
    email?: string | null
    employment?: string | null
    healthStatus?: string | null
    disabilities?: string | null
    specialNeeds?: boolean
    isHeadOfHousehold?: boolean
    primaryCaregiver?: boolean
    incomeAmount?: number | null
    incomeSource?: string | null
    medicalInsurance?: string | null
    chronicConditions?: FamilyMemberCreatechronicConditionsInput | string[]
    allergies?: FamilyMemberCreateallergiesInput | string[]
    medications?: FamilyMemberCreatemedicationsInput | string[]
  }

  export type SupportMeasureCreateManyFamilyInput = {
    id?: string
    memberId?: string | null
    type: string
    description: string
    category?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    status: string
    provider?: string | null
    result?: string | null
    notes?: string | null
    createdAt?: Date | string
    priority?: string | null
    cost?: number | null
    fundingSource?: string | null
    contactPerson?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    frequency?: string | null
    location?: string | null
    followUpDate?: Date | string | null
    evaluationDate?: Date | string | null
    effectiveness?: string | null
    createdById: string
  }

  export type DocumentCreateManyFamilyInput = {
    id?: string
    title: string
    type: string
    fileUrl: string
    mimeType: string
    fileSize: number
    memberId?: string | null
    supportId?: string | null
    uploadDate?: Date | string
    notes?: string | null
    category?: string | null
    expirationDate?: Date | string | null
    isConfidential?: boolean
    tags?: DocumentCreatetagsInput | string[]
    status?: string | null
    uploadedById: string
  }

  export type FamilyHistoryCreateManyFamilyInput = {
    id?: string
    action: string
    description: string
    timestamp?: Date | string
    userId: string
    changedFields?: FamilyHistoryCreatechangedFieldsInput | string[]
    previousValues?: InputJsonValue | null
    newValues?: InputJsonValue | null
    ipAddress?: string | null
    userAgent?: string | null
  }

  export type FamilyMemberUpdateWithoutFamilyInput = {
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: StringFieldUpdateOperationsInput | string
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentIssueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    institution?: NullableStringFieldUpdateOperationsInput | string | null
    course?: NullableStringFieldUpdateOperationsInput | string | null
    funding?: NullableStringFieldUpdateOperationsInput | string | null
    meals?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    citizenship?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    disabilities?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: BoolFieldUpdateOperationsInput | boolean
    isHeadOfHousehold?: BoolFieldUpdateOperationsInput | boolean
    primaryCaregiver?: BoolFieldUpdateOperationsInput | boolean
    incomeAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    medicalInsurance?: NullableStringFieldUpdateOperationsInput | string | null
    chronicConditions?: FamilyMemberUpdatechronicConditionsInput | string[]
    allergies?: FamilyMemberUpdateallergiesInput | string[]
    medications?: FamilyMemberUpdatemedicationsInput | string[]
    supportMeasures?: SupportMeasureUpdateManyWithoutMemberNestedInput
    documents?: DocumentUpdateManyWithoutMemberNestedInput
  }

  export type FamilyMemberUncheckedUpdateWithoutFamilyInput = {
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: StringFieldUpdateOperationsInput | string
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentIssueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    institution?: NullableStringFieldUpdateOperationsInput | string | null
    course?: NullableStringFieldUpdateOperationsInput | string | null
    funding?: NullableStringFieldUpdateOperationsInput | string | null
    meals?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    citizenship?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    disabilities?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: BoolFieldUpdateOperationsInput | boolean
    isHeadOfHousehold?: BoolFieldUpdateOperationsInput | boolean
    primaryCaregiver?: BoolFieldUpdateOperationsInput | boolean
    incomeAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    medicalInsurance?: NullableStringFieldUpdateOperationsInput | string | null
    chronicConditions?: FamilyMemberUpdatechronicConditionsInput | string[]
    allergies?: FamilyMemberUpdateallergiesInput | string[]
    medications?: FamilyMemberUpdatemedicationsInput | string[]
    supportMeasures?: SupportMeasureUncheckedUpdateManyWithoutMemberNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutMemberNestedInput
  }

  export type FamilyMemberUncheckedUpdateManyWithoutFamilyInput = {
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    middleName?: NullableStringFieldUpdateOperationsInput | string | null
    birthDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: StringFieldUpdateOperationsInput | string
    documentType?: NullableStringFieldUpdateOperationsInput | string | null
    documentNumber?: NullableStringFieldUpdateOperationsInput | string | null
    documentIssueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documentExpiryDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    registrationAddress?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    institution?: NullableStringFieldUpdateOperationsInput | string | null
    course?: NullableStringFieldUpdateOperationsInput | string | null
    funding?: NullableStringFieldUpdateOperationsInput | string | null
    meals?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    citizenship?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    maritalStatus?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    employment?: NullableStringFieldUpdateOperationsInput | string | null
    healthStatus?: NullableStringFieldUpdateOperationsInput | string | null
    disabilities?: NullableStringFieldUpdateOperationsInput | string | null
    specialNeeds?: BoolFieldUpdateOperationsInput | boolean
    isHeadOfHousehold?: BoolFieldUpdateOperationsInput | boolean
    primaryCaregiver?: BoolFieldUpdateOperationsInput | boolean
    incomeAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    incomeSource?: NullableStringFieldUpdateOperationsInput | string | null
    medicalInsurance?: NullableStringFieldUpdateOperationsInput | string | null
    chronicConditions?: FamilyMemberUpdatechronicConditionsInput | string[]
    allergies?: FamilyMemberUpdateallergiesInput | string[]
    medications?: FamilyMemberUpdatemedicationsInput | string[]
  }

  export type SupportMeasureUpdateWithoutFamilyInput = {
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    fundingSource?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    evaluationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    effectiveness?: NullableStringFieldUpdateOperationsInput | string | null
    member?: FamilyMemberUpdateOneWithoutSupportMeasuresNestedInput
    createdBy?: UserUpdateOneRequiredWithoutCreatedSupportMeasuresNestedInput
    documents?: DocumentUpdateManyWithoutSupportMeasureNestedInput
  }

  export type SupportMeasureUncheckedUpdateWithoutFamilyInput = {
    memberId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    fundingSource?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    evaluationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    effectiveness?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: StringFieldUpdateOperationsInput | string
    documents?: DocumentUncheckedUpdateManyWithoutSupportMeasureNestedInput
  }

  export type SupportMeasureUncheckedUpdateManyWithoutFamilyInput = {
    memberId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    fundingSource?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    evaluationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    effectiveness?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: StringFieldUpdateOperationsInput | string
  }

  export type DocumentUpdateWithoutFamilyInput = {
    title?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    mimeType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    uploadDate?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isConfidential?: BoolFieldUpdateOperationsInput | boolean
    tags?: DocumentUpdatetagsInput | string[]
    status?: NullableStringFieldUpdateOperationsInput | string | null
    member?: FamilyMemberUpdateOneWithoutDocumentsNestedInput
    supportMeasure?: SupportMeasureUpdateOneWithoutDocumentsNestedInput
    uploadedBy?: UserUpdateOneRequiredWithoutDocumentsNestedInput
  }

  export type DocumentUncheckedUpdateWithoutFamilyInput = {
    title?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    mimeType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    memberId?: NullableStringFieldUpdateOperationsInput | string | null
    supportId?: NullableStringFieldUpdateOperationsInput | string | null
    uploadDate?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isConfidential?: BoolFieldUpdateOperationsInput | boolean
    tags?: DocumentUpdatetagsInput | string[]
    status?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedById?: StringFieldUpdateOperationsInput | string
  }

  export type DocumentUncheckedUpdateManyWithoutFamilyInput = {
    title?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    mimeType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    memberId?: NullableStringFieldUpdateOperationsInput | string | null
    supportId?: NullableStringFieldUpdateOperationsInput | string | null
    uploadDate?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isConfidential?: BoolFieldUpdateOperationsInput | boolean
    tags?: DocumentUpdatetagsInput | string[]
    status?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedById?: StringFieldUpdateOperationsInput | string
  }

  export type FamilyHistoryUpdateWithoutFamilyInput = {
    action?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    changedFields?: FamilyHistoryUpdatechangedFieldsInput | string[]
    previousValues?: InputJsonValue | InputJsonValue | null
    newValues?: InputJsonValue | InputJsonValue | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutFamilyHistoryNestedInput
  }

  export type FamilyHistoryUncheckedUpdateWithoutFamilyInput = {
    action?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    changedFields?: FamilyHistoryUpdatechangedFieldsInput | string[]
    previousValues?: InputJsonValue | InputJsonValue | null
    newValues?: InputJsonValue | InputJsonValue | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FamilyHistoryUncheckedUpdateManyWithoutFamilyInput = {
    action?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
    changedFields?: FamilyHistoryUpdatechangedFieldsInput | string[]
    previousValues?: InputJsonValue | InputJsonValue | null
    newValues?: InputJsonValue | InputJsonValue | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SupportMeasureCreateManyMemberInput = {
    id?: string
    familyId: string
    type: string
    description: string
    category?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    status: string
    provider?: string | null
    result?: string | null
    notes?: string | null
    createdAt?: Date | string
    priority?: string | null
    cost?: number | null
    fundingSource?: string | null
    contactPerson?: string | null
    contactPhone?: string | null
    contactEmail?: string | null
    frequency?: string | null
    location?: string | null
    followUpDate?: Date | string | null
    evaluationDate?: Date | string | null
    effectiveness?: string | null
    createdById: string
  }

  export type DocumentCreateManyMemberInput = {
    id?: string
    title: string
    type: string
    fileUrl: string
    mimeType: string
    fileSize: number
    familyId?: string | null
    supportId?: string | null
    uploadDate?: Date | string
    notes?: string | null
    category?: string | null
    expirationDate?: Date | string | null
    isConfidential?: boolean
    tags?: DocumentCreatetagsInput | string[]
    status?: string | null
    uploadedById: string
  }

  export type SupportMeasureUpdateWithoutMemberInput = {
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    fundingSource?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    evaluationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    effectiveness?: NullableStringFieldUpdateOperationsInput | string | null
    family?: FamilyUpdateOneRequiredWithoutSupportMeasuresNestedInput
    createdBy?: UserUpdateOneRequiredWithoutCreatedSupportMeasuresNestedInput
    documents?: DocumentUpdateManyWithoutSupportMeasureNestedInput
  }

  export type SupportMeasureUncheckedUpdateWithoutMemberInput = {
    familyId?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    fundingSource?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    evaluationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    effectiveness?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: StringFieldUpdateOperationsInput | string
    documents?: DocumentUncheckedUpdateManyWithoutSupportMeasureNestedInput
  }

  export type SupportMeasureUncheckedUpdateManyWithoutMemberInput = {
    familyId?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    result?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    fundingSource?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: NullableStringFieldUpdateOperationsInput | string | null
    contactPhone?: NullableStringFieldUpdateOperationsInput | string | null
    contactEmail?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    evaluationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    effectiveness?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: StringFieldUpdateOperationsInput | string
  }

  export type DocumentUpdateWithoutMemberInput = {
    title?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    mimeType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    uploadDate?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isConfidential?: BoolFieldUpdateOperationsInput | boolean
    tags?: DocumentUpdatetagsInput | string[]
    status?: NullableStringFieldUpdateOperationsInput | string | null
    family?: FamilyUpdateOneWithoutDocumentsNestedInput
    supportMeasure?: SupportMeasureUpdateOneWithoutDocumentsNestedInput
    uploadedBy?: UserUpdateOneRequiredWithoutDocumentsNestedInput
  }

  export type DocumentUncheckedUpdateWithoutMemberInput = {
    title?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    mimeType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    familyId?: NullableStringFieldUpdateOperationsInput | string | null
    supportId?: NullableStringFieldUpdateOperationsInput | string | null
    uploadDate?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isConfidential?: BoolFieldUpdateOperationsInput | boolean
    tags?: DocumentUpdatetagsInput | string[]
    status?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedById?: StringFieldUpdateOperationsInput | string
  }

  export type DocumentUncheckedUpdateManyWithoutMemberInput = {
    title?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    mimeType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    familyId?: NullableStringFieldUpdateOperationsInput | string | null
    supportId?: NullableStringFieldUpdateOperationsInput | string | null
    uploadDate?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isConfidential?: BoolFieldUpdateOperationsInput | boolean
    tags?: DocumentUpdatetagsInput | string[]
    status?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedById?: StringFieldUpdateOperationsInput | string
  }

  export type DocumentCreateManySupportMeasureInput = {
    id?: string
    title: string
    type: string
    fileUrl: string
    mimeType: string
    fileSize: number
    familyId?: string | null
    memberId?: string | null
    uploadDate?: Date | string
    notes?: string | null
    category?: string | null
    expirationDate?: Date | string | null
    isConfidential?: boolean
    tags?: DocumentCreatetagsInput | string[]
    status?: string | null
    uploadedById: string
  }

  export type DocumentUpdateWithoutSupportMeasureInput = {
    title?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    mimeType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    uploadDate?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isConfidential?: BoolFieldUpdateOperationsInput | boolean
    tags?: DocumentUpdatetagsInput | string[]
    status?: NullableStringFieldUpdateOperationsInput | string | null
    family?: FamilyUpdateOneWithoutDocumentsNestedInput
    member?: FamilyMemberUpdateOneWithoutDocumentsNestedInput
    uploadedBy?: UserUpdateOneRequiredWithoutDocumentsNestedInput
  }

  export type DocumentUncheckedUpdateWithoutSupportMeasureInput = {
    title?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    mimeType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    familyId?: NullableStringFieldUpdateOperationsInput | string | null
    memberId?: NullableStringFieldUpdateOperationsInput | string | null
    uploadDate?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isConfidential?: BoolFieldUpdateOperationsInput | boolean
    tags?: DocumentUpdatetagsInput | string[]
    status?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedById?: StringFieldUpdateOperationsInput | string
  }

  export type DocumentUncheckedUpdateManyWithoutSupportMeasureInput = {
    title?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    fileUrl?: StringFieldUpdateOperationsInput | string
    mimeType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    familyId?: NullableStringFieldUpdateOperationsInput | string | null
    memberId?: NullableStringFieldUpdateOperationsInput | string | null
    uploadDate?: DateTimeFieldUpdateOperationsInput | Date | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isConfidential?: BoolFieldUpdateOperationsInput | boolean
    tags?: DocumentUpdatetagsInput | string[]
    status?: NullableStringFieldUpdateOperationsInput | string | null
    uploadedById?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UserCountOutputTypeDefaultArgs instead
     */
    export type UserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FamilyCountOutputTypeDefaultArgs instead
     */
    export type FamilyCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FamilyCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FamilyMemberCountOutputTypeDefaultArgs instead
     */
    export type FamilyMemberCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FamilyMemberCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SupportMeasureCountOutputTypeDefaultArgs instead
     */
    export type SupportMeasureCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SupportMeasureCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FamilyDefaultArgs instead
     */
    export type FamilyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FamilyDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FamilyMemberDefaultArgs instead
     */
    export type FamilyMemberArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FamilyMemberDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SupportMeasureDefaultArgs instead
     */
    export type SupportMeasureArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SupportMeasureDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DocumentDefaultArgs instead
     */
    export type DocumentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DocumentDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FamilyHistoryDefaultArgs instead
     */
    export type FamilyHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FamilyHistoryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use NotificationDefaultArgs instead
     */
    export type NotificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = NotificationDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}